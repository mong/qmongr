{"version":3,"sources":["components/utils.js","components/indicator_table_header.js","components/indicator_value.js","components/indicator_description.js","components/tf_button.js","components/tf_ddmenu.js","components/tf_description.js","charts/page_colors.js","charts/theme_table_chart_bar.js","charts/axis_x_linear_labeled.js","app_config.js","charts/barchart.js","charts/axis_y_band.js","charts/theme_table_chart_line.js","charts/axis_y_linear_labeled.js","charts/line_chart.js","charts/color_legend_table_line_chart.js","charts/axis_x_time_labeled.js","charts/tr_utils.js","components/tf_figure.js","components/indicator_row.js","components/register_name.js","components/register.js","data/filter_year_unit.js","components/indicator_table_body.js","components/indicator_table.js","components/legend_btn.js","components/legend.js","components/med_field_row.js","components/med_field.js","components/main_component.js","components/select_multi.js","components/select_single.js","App.js","index.js"],"names":["useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","observe","unobserve","TABLE_HEADER","props","col_nr","indicator_header","treatment_unit_name","national","thead_ref","useRef","dim","offset_top","update_offset_top","legend_elem","target","parentNode","previousSibling","top","offsetTop","scrollHeight","width_desc","width_tu","style_ind_desc","width","style_treatment_units","treatment_unit_th","map","tu","className","style","key","INDICATOR_VALUE","td_class","indicator_value","icon_class","share_of_totla","mid_text","total","INDICATOR_DESCRIPTION","title","short_description","high_achivment_text","TF_BUTTON","chart_type","update_chart_type","radio_buttons","class_name_inp","type","id","name","value","icon","label","class_name_label","rb","Fragment","checked","onChange","e","htmlFor","DD_MENU","show_level","update_show_level","zoom","update_zoom","svg_container","update_selected_row","dd_menu_status","set_dd_menu_status","level_states","zoom_states","handle_click","current_state","states","update_state_function","filter","state","level_visibility","replace","select","selectAll","mouse_leave_dd_cont_timeout","dd_list","click","class","dd","onClick","onMouseLeave","setTimeout","onMouseOver","clearTimeout","aria-hidden","LONG_DESCRIPTION","description_title","description_text","content_status","set_content_status","desc_click_handler","page_colors","high","mid","low","theme_table_chart_bar","x_axis_label_fill","colors","y_axis_label_fill","x_axis_label","y_axis_label","x_axis_label_font_family","y_axis_label_font_family","x_axis_tick_font_fill","y_axis_tick_font_fill","x_axis_tick_line_stroke","y_axis_tick_line_stroke","x_axis_domain_line_stroke","y_axis_domain_line_stroke","labeled_x_axis_linear","selection","x_scale","inner_width","inner_height","x_axis_label_offset","x_axis_label_font_size","x_axis_tick_font_size","x_axis_tick_number","x_axis_tick_size","transition","delay_val","duration_val","axis_label_format","x_axis","axisBottom","tickSize","ticks","tickFormat","format","x_axis_g","data","enter","append","attr","merge","delay","duration","call","x_axis_label_text","text","react_key","menus","unit","year","indicators","moderate","table","main_column","national_column","desired_level","column","indicator_id","coverage_id","treatment_unit","treatment_unit_level","organisation_number","denominator","variable","achieved_level","registry_id","registry_short_name","registry_full_name","indicator_title","indicator_name","indicator_type","indicator_measurement_unit","indicator_short_description","indicator_long_description","level_green","level_yellow","level_direction","min_indicator_value","max_indicator_value","min_denominator","andel","db","full_name","median","rhf","hf","hospital","nation","mod","config","app_config","bar_chart","container","figure_data","levels","height","margin","delay_value","duration_value","margin_px","bottom","right","left","svg","g","y_scale","scaleBand","domain","d","range","paddingInner","paddingOuter","align","y_axis_tick_font_size","y_axis_tick_distance_from_axis","y_axis","axisLeft","y_axis_g","y_axis_band","Object","assign","theme_bar_chart","scaleLinear","level_colors","document","querySelector","innerHTML","level","end","start","bars","exit","remove","bandwidth","label_format","x_max_val","max","additional_margin","Math","ceil","invert","theme_table_chart_line","y_axis_tick_number","legend_text_fill","legend_text_font_family","labeled_y_axis_linear","y_axis_label_offset","y_axis_label_font_size","y_axis_tick_size","axisRight","y_axis_label_text","line_chart","scaleTime","min","Date","nested","Array","from","group","unit_name","line_color_scale","scaleOrdinal","legend_text_font_size","primary_legend_group","legend_container","legend","legend_item","on","event","this","nodes","length","clicked_legend","includes","selected_path_class","nr_clicked","color_legend_line_chart","theme_line_chart","position_left","x_axis_tick_values","Set","index","x_axis_tick_distance_from_axis","tickValues","timeFormat","labeled_x_axis_time","lines","line","x","y","path","y_min","y_max","y_min_val","y_max_val","floor","level_boundary","level_obj","TF_FIGURE","colspan","figure_class","svg_container_ref","agg_data","filtered_by_year","some","push","prototype","apply","filtered_by_unit","remove_tf","update_remove_tf","svg_props","clientWidth","description","nr_svg_children","childElementCount","i","removeChild","children","colSpan","textAlign","long_description","data_config","INDICATOR_ROW","med_field_class","show_level_filter","selected_row","indcator_title","indicator_drescription","tr_indicator_class","indicator_val","tr_unit","ind_per_unit","round","numerator","level_class","indicator_value_nation","denominator_nation","numerator_nation","icon_class_nation","tr_fig","REGISTER_NAME","register_name","tr_register_name_class","REGISTER","register_sname","med_field_filter","indicator_row","indicator","filter_year_unit","input_params","selected_unit","selected_year","med_field","TABLE_BODY","treatment_year","table_body","field","register","register_comp","register_data","desc","filter_register","INDICATOR_TABLE","LEGEND_BTN","legend_btn_class","update_show_level_filter","level_filter","toUpperCase","checked_class","update_state","LEGEND","app_text","legend_ref","legend_btns","keys","MED_FIELD_ROW","med_field_name","nr_indicators","update_med_field_filter","update_clicked_med_field","class_checked","clicked_med_field","MED_FIELD","ind_per_reg","med_field_ref","all_reg","ind","registry_name","med_field_row","nr_ind","reg","reduce","acc","cur","number_ind","tot_nr_ind","update_ind_per_reg","treatment_units","SELECT_MULTI","opts","select_className","placeholder","update_tu","selection_options","customStyles","menu","provided","zIndex","option","control","value_tu","options","closeMenuOnSelect","isSearchable","isMulti","handle_input_change","styles","menuIsOpen","undefined","SELECT_SINGLE","update_year","opt","defaultValue","APP","indicator_hf","indicator_rhf","indicator_hosp","indicator_nation","update_treatment_units","update_selected_year","opts_hosp","sort","opts_hf","opts_tu","input_data","tu_name_hospital","tu_name_hf","tu_name_rhf","tu_name","concat","unique_indicators","flatMap","registry","window","indicator_nat","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.b7e8452b.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useResizeObserver = (ref) => {\r\n  const [dimensions, setDimensions] = useState(null);\r\n  useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        setDimensions(entry);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n\r\nexport default useResizeObserver;","import React, {useEffect, useRef, useState}  from 'react';\r\nimport useResizeObserver from './utils'\r\n\r\n\r\nfunction TABLE_HEADER(props) {\r\n  const {\r\n    col_nr = 2,\r\n    indicator_header = \"Kvalitetsindikator\",\r\n    treatment_unit_name = [],\r\n    national = \"Nasjonalt\"\r\n  } = props\r\n\r\n  const thead_ref = useRef()\r\n  const dim = useResizeObserver(thead_ref)\r\n  const [offset_top, update_offset_top] = useState(\"\")\r\n  useEffect(()=>{\r\n    const legend_elem = dim ? dim.target.parentNode.parentNode.parentNode.parentNode.previousSibling: \"\"\r\n    const top = dim ? `${legend_elem.offsetTop + legend_elem.scrollHeight}px`: \"\"\r\n    update_offset_top(top)\r\n  },[dim, thead_ref])\r\n  \r\n  const width_desc = col_nr === 2 ? 60 :  col_nr === 3 ? 50 : 40 \r\n  const width_tu = (100 - width_desc) /(col_nr - 1) \r\n  const style_ind_desc= {width: `${width_desc}%`,top: offset_top }\r\n  const style_treatment_units= {width: `${width_tu}%`, top: offset_top}\r\n  \r\n  let treatment_unit_th = treatment_unit_name.map(\r\n    tu => <th className=\"selected_unit\" style = {style_treatment_units}  key = {tu}> {tu}</th>\r\n  ) \r\n  \r\n \r\n\r\n\r\n  return (\r\n    <thead >\r\n      <tr ref = {thead_ref} >\r\n        <th key = \"kvind_header\" className=\"quality_indicator\" style={style_ind_desc}>{indicator_header}</th>\r\n        {treatment_unit_th}\r\n        <th  className=\"nationally\" style = {style_treatment_units} key = \"nat_header\">{national}</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TABLE_HEADER;","import React from 'react'\r\n\r\n\r\nfunction INDICATOR_VALUE(props) {\r\n  const {\r\n    td_class = \"selected_unit\",\r\n    indicator_value = \"65%\", \r\n    icon_class = \"fa fa-circle-o\",\r\n    share_of_totla = 1500,\r\n    mid_text = \"av\",\r\n    total = 2000\r\n  } = props\r\n\r\n  return (\r\n    <td className = {td_class}>\r\n      <div className=\"level\">\r\n        <h4 >{`${indicator_value} `}<i className={icon_class}></i></h4>\r\n      </div>\r\n      <div className=\"summary\">{`${share_of_totla} ${mid_text} ${total}`}</div>\r\n    </td>\r\n    \r\n  );\r\n}\r\n\r\nexport default INDICATOR_VALUE;","import React from 'react'\r\n\r\n\r\nfunction INDICATOR_DESCRIPTION(props) {\r\n  const {\r\n    title = \"This is the title\",\r\n    short_description = \"This is the short description of the app\",\r\n    high_achivment_text = \"Høy måloppnåelse: > 80%\" \r\n  } = props\r\n \r\n  return (\r\n    <td className = \"quality_indicator\" >\r\n      <div className=\"quality_indicator_name\"><h1>{title}</h1></div>\r\n      <div className=\"qi_long_description\"><p>{short_description}</p></div>\r\n      <div className=\"desired_target_level\">\r\n        <h4>{high_achivment_text}</h4>\r\n      </div>\r\n    </td>\r\n    \r\n  );\r\n}\r\n\r\nexport default INDICATOR_DESCRIPTION;","import React from 'react'\r\n\r\nconst TF_BUTTON = (props) => {\r\n  const{ \r\n    chart_type,\r\n    update_chart_type\r\n  } = props\r\n \r\n   const radio_button_prop =[{\r\n    class_name_inp: 'figure_button figure_button_left',\r\n    type: 'Radio',\r\n    id: 'table_bar',\r\n    name: 'table_figure_button',\r\n    value: 'bar',\r\n    icon: \"fas fa-chart-bar\",\r\n    label: 'Søyle',\r\n    class_name_label: 'figure_button_label'\r\n  },\r\n  {\r\n    class_name_inp: 'figure_button figure_button_right',\r\n    type: 'Radio',\r\n    id: 'table_line',\r\n    name: 'table_figure_button',\r\n    value: 'line',\r\n    icon: 'fas fa-chart-line',\r\n    label: 'Linje',\r\n    class_name_label: 'figure_button_label'\r\n}]\r\n\r\n  const radio_buttons = radio_button_prop.map(rb => {\r\n    return(\r\n    <React.Fragment key = {rb.id}>\r\n      <input \r\n        className = {rb.class_name_inp} \r\n        type={rb.type}\r\n        id={rb.id}\r\n        name={rb.name}\r\n        value = {rb.value}\r\n        checked ={rb.value === chart_type} \r\n        onChange ={(e)=>  update_chart_type(e.target.value)}\r\n      >\r\n      </input>\r\n      <label className = {rb.class_name_label} htmlFor={rb.id} >\r\n        {rb.label} <i className ={rb.icon} ></i>\r\n      </label>\r\n    </React.Fragment>\r\n    )\r\n  })\r\n\r\n  return(\r\n    <div className = \"tr_figure_button\">\r\n      {radio_buttons }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TF_BUTTON;","import React, { useEffect, useState } from 'react'\r\nimport { select } from 'd3'\r\n\r\nconst DD_MENU = (props) => {\r\n  const {\r\n    show_level,\r\n    update_show_level, \r\n    zoom,\r\n    update_zoom, \r\n    svg_container,\r\n    update_selected_row \r\n  } = props\r\n\r\n  const[dd_menu_status, set_dd_menu_status] = useState(\"inactive\")\r\n  const level_states = [\"Vis målnivå\", \"Skjul målnivå\"]\r\n  const zoom_states = [\"Zoom inn\", \"Zoom ut\"]\r\n\r\n  const handle_click =  (current_state, states, update_state_function) => {\r\n    const new_state = states.filter(state => state !== current_state)\r\n    update_state_function(new_state[0])\r\n    \r\n  }\r\n\r\n  useEffect(()=>{\r\n    let level_visibility = show_level.replace(/\\s/g, '') === \"Skjulmålnivå\" ?  \"visible\" : \"hidden\"\r\n    let level = select(svg_container.current)\r\n    level.selectAll(\"svg .level\").style(\"visibility\", level_visibility)\r\n    }, [svg_container, show_level])\r\n\r\n  const dorpdown_entries =  [\r\n    {label : show_level, click : () => handle_click(show_level, level_states, update_show_level), class : \"dd-level\"},\r\n    {label : zoom, click : () => handle_click(zoom, zoom_states, update_zoom), class : \"dd-zoom\"},\r\n    {label : \"Lukk\", click : () => update_selected_row(\"\"), class : \"dd-close\"}\r\n  ]\r\n\r\n  let mouse_leave_dd_cont_timeout;\r\n  const menu_container_mouse_leave = () => {\r\n    mouse_leave_dd_cont_timeout = setTimeout(function(){\r\n      set_dd_menu_status(\"inactive\")\r\n    },\r\n    1000\r\n    )\r\n  }\r\n\r\n  const dd_list = dorpdown_entries.map(dd =>{\r\n    return(\r\n      <li key = {dd.class}>\r\n        <div className ={dd.class} onClick={dd.click}> {dd.label} </div>\r\n      </li>\r\n    );\r\n  })\r\n\r\n  return(\r\n    <div className = \"table_dd_menu_container\" \r\n      onMouseLeave ={ ()=>menu_container_mouse_leave() }\r\n      onMouseOver={ ()=>clearTimeout(mouse_leave_dd_cont_timeout) }\r\n    >\r\n      <button className=\"table_dd_button\" onClick ={()=> set_dd_menu_status(\"\")} >\r\n        <i className=\"fas fa-bars\" aria-hidden=\"true\"></i>\r\n      </button>\r\n      <div id=\"table_dd_container\" className = {`dropdown_container ${dd_menu_status}`}>\r\n        <ul className=\"dropdown_ul\">\r\n          {dd_list}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DD_MENU;","import React, { useState } from 'react'\r\n\r\nconst LONG_DESCRIPTION= (props) => {\r\n  const {\r\n    description_title = \"Om kvalitetsindikatoren\",\r\n    description_text = \"Denne kvalitetsindikatoren er definert som andel pasienter med akutt hoftebrudd som ble operert innen 24 timer etter bruddtidspunktet. \"\r\n  } = props\r\n  const [content_status, set_content_status] = useState(\"inactive\")\r\n  const desc_click_handler = (content_status, set_content_status) => {\r\n    const cur_status = content_status === \"\" ? \"inactive\" : \"\"\r\n    set_content_status(cur_status)\r\n\r\n  }\r\n  return(\r\n    <div className=\"description-container\" >\r\n      <div className = {`description_title_container`} onClick={() => desc_click_handler(content_status, set_content_status) }>\r\n        <h4>{description_title}</h4>\r\n        <i className = {`fa ${content_status ===\"\" ? \"fa-angle-up\" : \"fa-angle-down\"} `}></i>\r\n      </div>\r\n  <p className= {`description_content ${content_status}`}>{description_text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LONG_DESCRIPTION;","export const page_colors = {\r\n  chart_colors: [\r\n    '#4F9A94',\r\n    '#90CAF9',\r\n    '#B0BEC5',\r\n    '#FFE082',\r\n    '#2962FF',\r\n    '#CE93D8',\r\n    '#9C786C',\r\n    '#BCAAA4',\r\n    '#F8BBD0',\r\n    '#9FA8DA',\r\n    '#80DEEA',\r\n    '#A5D6A7',\r\n    '#E6EE9C',\r\n    '#FFAB91',\r\n    '#78909C'\r\n  ],\r\n  line_color: '#D2D3D4',\r\n  background_color: '#EEF6F7',\r\n  primary_text_color: '#2D3034',\r\n  secondary_text_color: '#828586',\r\n  primary_color: '#7EBEC7',\r\n  secondary_color: '#00263D',\r\n  traffic_light_colors: {\r\n    high: '#BFE389',\r\n    mid: '#F5A623',\r\n    low: '#F04157'\r\n  }\r\n}","import { page_colors as colors } from './page_colors.js'\r\n\r\nexport const theme_table_chart_bar = {\r\n  x_axis_label_fill: colors.secondary_text_color,\r\n  y_axis_label_fill: colors.secondary_text_color,\r\n  x_axis_label: '',\r\n  y_axis_label: '',\r\n  x_axis_label_font_family: 'arial',\r\n  y_axis_label_font_family: 'arial',\r\n  x_axis_tick_font_fill: colors.secondary_text_color,\r\n  y_axis_tick_font_fill: colors.primary_text_color,\r\n  x_axis_tick_line_stroke: colors.line_color,\r\n  y_axis_tick_line_stroke: 'none',\r\n  x_axis_domain_line_stroke: 'none',\r\n  y_axis_domain_line_stroke: 'none'\r\n}\r\n","import { axisBottom, format } from 'd3'\r\n/** @module src/axis_x_linear_labeled */\r\n\r\n/**\r\n * Creats linear x axis based on x_scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the x axis\r\n */\r\nexport const labeled_x_axis_linear = function (selection, props) {\r\n  const {\r\n    x_scale,\r\n    inner_width,\r\n    inner_height,\r\n    x_axis_label,\r\n    x_axis_label_fill,\r\n    x_axis_label_offset = inner_height / 6,\r\n    x_axis_label_font_size = 9 + inner_width * 0.04 + 'px',\r\n    x_axis_tick_font_size = 7 + inner_width * 0.02 + 'px',\r\n    x_axis_tick_font_fill,\r\n    x_axis_tick_line_stroke,\r\n    x_axis_tick_number = 6,\r\n    x_axis_tick_size = inner_height,\r\n    //x_axis_tick_offset = inner_height * 0.05,\r\n    x_axis_domain_line_stroke,\r\n    x_axis_label_font_family,\r\n    transition = false,\r\n    delay_val = 0,\r\n    duration_val = 0,\r\n    axis_label_format = ',.0%'\r\n  } = props\r\n\r\n  const x_axis = axisBottom(x_scale)\r\n    .tickSize(-x_axis_tick_size)\r\n    .ticks(x_axis_tick_number)\r\n    .tickFormat(format(axis_label_format))\r\n\r\n  let x_axis_g = selection.selectAll('.x-axis').data([null])\r\n  x_axis_g = x_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'x-axis')\r\n    .merge(x_axis_g)\r\n    .attr('transform', `translate(0,${inner_height})`)\r\n\r\n  if(transition){ \r\n     x_axis_g.transition().delay(delay_val).duration(duration_val).call(x_axis)\r\n  } else { \r\n    x_axis_g.call(x_axis)\r\n  }\r\n\r\n  x_axis_g\r\n    .selectAll('.tick text')\r\n    .style('font-size', x_axis_tick_font_size)\r\n    .attr('fill', x_axis_tick_font_fill)\r\n    //.attr('y', x_axis_tick_offset)\r\n\r\n  x_axis_g.selectAll('.tick line').attr('stroke', x_axis_tick_line_stroke)\r\n  x_axis_g.select('.domain').attr('stroke', x_axis_domain_line_stroke)\r\n\r\n  const x_axis_label_text = x_axis_g.selectAll('.axis-label').data([null])\r\n  x_axis_label_text\r\n    .enter()\r\n    .append('text')\r\n    .attr('class', 'axis-label')\r\n    .merge(x_axis_label_text)\r\n    .attr('fill', x_axis_label_fill)\r\n    .text(x_axis_label)\r\n    .attr('x', inner_width / 2)\r\n    .attr('y', x_axis_label_offset)\r\n    .style('font-size', x_axis_label_font_size)\r\n    .style('font-family', x_axis_label_font_family)\r\n}\r\n","const med_field = [\r\n  {  \r\n    react_key: \"hjerte\",\r\n    name: \"Hjerte- og karsykdommer\",\r\n    key: [\r\n      \"ablanor\",\r\n      \"noric\",\r\n      \"hjerteinfarkt\",\r\n      \"hjerneslag\",\r\n      \"hjertestans\",\r\n      \"hjertesvikt\",\r\n      \"hjertekirurgi\",\r\n      \"norkar\"\r\n    ]\r\n  },\r\n  {\r\n    react_key: \"kreft\",\r\n    name: \"Kreft\",\r\n    key: [\r\n      \"barnekreft\",\r\n      \"brystkreft\",\r\n      \"gynkreft\",\r\n      \"lungekreft\",\r\n      \"lymfoid\",\r\n      \"melanom\",\r\n      \"prostata\",\r\n      \"tarmkreft_colon\",\r\n      \"tarmkreft_rectum\"\r\n    ]\r\n  },\r\n  {\r\n    react_key: \"luft\",\r\n    name: \"Luftveier\",\r\n    key: [\"mek_vent\"]\r\n  },\r\n  {  \r\n    react_key: \"diabetes\",\r\n    name: \"Diabetes\",\r\n    key: [\"diabetes_barn\",\"diabetes_voksne\"]\r\n  },\r\n  {  \r\n    react_key: \"nerve\",\r\n    name: \"Nervesystemet\",\r\n    key: [\"cp\",\"ms\",\"parkinson\",\"norkog\"]\r\n  },\r\n  {  \r\n    react_key: \"muskel\",\r\n    name: \"Muskel og skjelett\",\r\n    key: [\r\n      \"hofte_barn\",\r\n      \"hoftebrudd\",\r\n      \"korsband\",\r\n      \"ryggkir\",\r\n      \"leddprotese\",\r\n      \"nnrr\",\r\n      \"muskel\",\r\n      \"nkr_nakke\",\r\n      \"nkr_rygg\"\r\n    ]\r\n  },\r\n  {  \r\n    react_key: \"tarm\",\r\n    name: \"Mage og tarm\",\r\n    key: [\"gastronet\",\"fedmekir\",\"nra\",\"norgast\"]\r\n  },\r\n  {  \r\n    react_key: \"gyn\",\r\n    name: \"Gynekologi\",\r\n    key: [\"nger\",\"kvinl_inkontinens\"]\r\n  },\r\n  {  \r\n    react_key: \"nyre\",\r\n    name: \"Nyre\",\r\n    key: [\"nyre\"]\r\n  }, \r\n  {  \r\n    react_key: \"intensiv\",\r\n    name: \"Skade og intensiv\",\r\n    key: [\"traume\",\"intensiv\",\"nnk\"]\r\n  },\r\n  {  \r\n    react_key: \"rehab\",\r\n    name:\"Rehabilitering\",\r\n    key: [\"nnrr\",\"norscir\"]\r\n  },\r\n  {  \r\n    react_key: \"autoimmun\",\r\n    name: \"Autoimmune sykdommer\",\r\n    key: [\"roas\",\"norvas\"]\r\n  },\r\n  {  \r\n    react_key: \"revma\",\r\n    name: \"Revmatologi\",\r\n    key: [\"norartritt\",\"norvas\"]\r\n  },\r\n  {  \r\n    react_key: \"onh\", \r\n    name: \"Øre-nese-hals\",\r\n    key: [\"tonsille\"]\r\n  },\r\n  {  \r\n    react_key: \"hud\",\r\n    name: \"Hudsykdommer\",\r\n    key: [\"hisreg\"]\r\n  },\r\n  {  \r\n    react_key: \"psyk\",\r\n    name: \"Psykisk helse og rus\",\r\n    key: [\"kvarus\",\"norspis\"]\r\n  },\r\n  {  \r\n    react_key: \"barn\",\r\n    name: \"Barn\",\r\n    key: [\r\n      \"cp\",\r\n      \"hofte_barn\",\r\n      \"barnekreft\",\r\n      \"diabetes_barn\",\r\n      \"ganespalt\",\r\n      \"nnk\"\r\n    ]\r\n  },\r\n  {  \r\n    react_key: \"annet\",\r\n    name: \"Andre\",\r\n    key:[\r\n      \"smerte\",\r\n      \"porfyri\"\r\n    ]\r\n  }  \r\n]\r\nconst app_text = {\r\n  menus: {\r\n    unit: \"Velg behandlingssted\",\r\n    year: \"År:\"\r\n  },\r\n  indicators: {\r\n    high: {text: \"Høy måloppnåelse\", icon: \"fa fa-fas fa-circle\"},\r\n    moderate:{ text: \"Moderat måloppnåelse\", icon: \"fa fa-fas fa-adjust\"},\r\n    low: {text: \"Lav måloppnåelse\", icon: \"fa fa-circle-o\" }\r\n  },\r\n  table:{\r\n    main_column: \"Kvalitetsindikator\",\r\n    national_column: \"Nasjonalt\",\r\n    desired_level: \"Ønsket målnivå\",\r\n  }\r\n}\r\n\r\nconst data_config = {\r\n  column: {\r\n    indicator_id: \"ind_id\",\r\n    coverage_id: \"dg_id\",\r\n    year: \"year\",\r\n    treatment_unit: \"unit_name\",\r\n    treatment_unit_level: \"unit_level\",\r\n    organisation_number: \"orgnr\",\r\n    denominator: \"denominator\",\r\n    variable: \"var\",\r\n    achieved_level: \"level\",\r\n    desired_level: \"desired_level\",\r\n    registry_id: \"registry_id\",\r\n    registry_short_name: \"rname\",\r\n    registry_full_name: \"full_name\",\r\n    indicator_title: \"title\",\r\n    indicator_name: \"name\",\r\n    indicator_type: \"type\",\r\n    indicator_measurement_unit: \"measure_unit\",\r\n    indicator_short_description: \"short_description\",\r\n    indicator_long_description: \"long_description\",\r\n    level_green: 'level_green',\r\n    level_yellow: 'level_yellow',\r\n    level_direction: 'level_direction',\r\n    min_indicator_value: 'min_value',\r\n    max_indicator_value: 'max_value',\r\n    min_denominator: 'min_denominator',\r\n    id: 'id'\r\n  },\r\n  indicator_type: {\r\n    andel: {\r\n      db: 'andel',\r\n      full_name: 'Andel'\r\n    },\r\n    median: {\r\n      db: 'median',\r\n      full_name: 'Median'\r\n    }\r\n  },\r\n  treatment_unit_level: {\r\n    rhf: \"rhf\",\r\n    hf: \"hf\",\r\n    hospital: \"hospital\",\r\n    nation: \"nation\"\r\n  },\r\n  achieved_level: {\r\n    high: \"H\",\r\n    mod: \"M\",\r\n    low: \"L\"\r\n  },\r\n  level_direction: {\r\n    high: 1,\r\n    low: 0\r\n  },\r\n  desired_level: {\r\n    high: \"Høyt\",\r\n    low: \"Lavt\"\r\n  }\r\n}\r\n\r\nexport default { med_field, app_text, data_config }","import { select, scaleBand, scaleLinear, max } from 'd3'\r\n\r\n\r\nimport { theme_table_chart_bar as theme_bar_chart } from './theme_table_chart_bar.js'\r\nimport { labeled_x_axis_linear } from './axis_x_linear_labeled.js'\r\nimport { y_axis_band } from './axis_y_band.js'\r\nimport { page_colors } from './page_colors.js'\r\nimport  app_config  from '../app_config'\r\nconst config = app_config.data_config\r\n\r\n// the barchart\r\nexport const bar_chart = function (container, props, figure_data, levels) {\r\n  const { width, height, margin, zoom, delay_value = 1000, duration_value = 1000} = props\r\n  const margin_px = {\r\n    top: height * margin.top,\r\n    bottom: height * margin.bottom,\r\n    right: width * margin.right,\r\n    left: width * margin.left\r\n  }\r\n  container = select(container)\r\n  const inner_width = width - margin_px.left - margin_px.right\r\n  const inner_height = height - margin_px.top - margin_px.bottom\r\n \r\n  let svg = container.selectAll('svg').data([null])\r\n  svg = svg\r\n    .enter()\r\n    .append('svg')\r\n    .merge(svg)\r\n    .attr('width', width - 20)\r\n    .attr('height', height)\r\n    .style('background-color', '#EEF6F7')\r\n    .attr('class', 'table_chart')\r\n\r\n  let g = svg.selectAll('.grouped_element').data([null])\r\n  g = g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'grouped_element')\r\n    .merge(g)\r\n    .attr(\r\n      'transform',\r\n      'translate(' + margin_px.left + ' ,' + margin_px.top + ')'\r\n    )\r\n  const y_scale = scaleBand()\r\n    .domain(figure_data.map((d) => d[config.column.treatment_unit]))\r\n    .range([0, inner_height])\r\n    .paddingInner(0.5)\r\n    .paddingOuter(0.5)\r\n    .align(0.5)\r\n\r\n  y_axis_band(\r\n    g,\r\n    Object.assign({}, theme_bar_chart, {\r\n      y_scale,\r\n      inner_width,\r\n      inner_height,\r\n      margin_px\r\n    })\r\n  )\r\n  let x_scale = scaleLinear().domain([0, 1]).range([0, inner_width])\r\n\r\n  labeled_x_axis_linear(\r\n    g,\r\n    Object.assign({}, theme_bar_chart, {\r\n      x_scale,\r\n      inner_width,\r\n      inner_height, \r\n      transition: false,\r\n    })\r\n  )\r\n \r\n  \r\n  const level_colors = page_colors.traffic_light_colors\r\n  \r\n  let show_level = document.querySelector('.dropdown_ul .dd-level').innerHTML\r\n  let level_visibility = show_level.replace(/\\s/g, '') === \"Skjulmålnivå\" ?  \"visible\" : \"hidden\"\r\n  \r\n  let level = g.selectAll(\"rect.level\")\r\n  level = level\r\n    .data(levels)\r\n    .enter().append(\"rect\")\r\n    .merge(level)\r\n      .attr(\"class\", \"level\")\r\n      .attr('y', 0)\r\n      .attr('x', d => x_scale(d.end))\r\n      .attr('width',d => x_scale(d.start - d.end))\r\n      .attr(\"height\", inner_height)\r\n      .attr('fill', d => level_colors[d.level])\r\n      .style(\"opacity\",\"0.2\")\r\n      .style(\"visibility\", level_visibility)\r\n   \r\n\r\n  let bars = g.selectAll('rect.bars').data(figure_data, d => d[config.column.treatment_unit])\r\n  \r\n  bars.exit().transition().style('opacity', 0).remove()\r\n  \r\n  bars = bars\r\n    .enter()\r\n    .append('rect')\r\n      .attr(\"class\", \"bars\")\r\n    .merge(bars)\r\n      .attr('fill', (d) => {\r\n        let fill_color;\r\n        if ( d[config.column.treatment_unit] === 'Nasjonalt' ) {\r\n          fill_color = '#00263D'\r\n        } else {\r\n          fill_color = '#7EBEC7'\r\n        }\r\n        return fill_color\r\n      })\r\n      .attr('x', 0) \r\n      .attr('y', (d) => y_scale(d[config.column.treatment_unit]))\r\n      .attr('height', y_scale.bandwidth)\r\n      .transition()\r\n      .duration(delay_value)\r\n      .attr('width', (d) => x_scale(d[config.column.variable]))\r\n \r\n  \r\n  if (zoom.replace(/\\s/g, '') === 'Zoomut' ) {\r\n      let x_max_val =  max(figure_data, (d) => d[config.column.variable] )\r\n      let additional_margin = (0.01 + x_max_val) * 0.2  \r\n      x_max_val = Math.ceil((x_max_val + additional_margin)*100)/100\r\n\r\n      x_scale = scaleLinear()\r\n      .domain([\r\n        0,\r\n        x_max_val  > 1 ? 1 : x_max_val \r\n      ])\r\n      .range([0, inner_width])\r\n      \r\n      bars \r\n        .merge(bars)\r\n          .transition()\r\n          .delay(0)\r\n          .duration(duration_value)\r\n          .attr('width', (d) => x_scale(d[config.column.variable]))\r\n  \r\n    level\r\n      .data(levels)\r\n      .merge(level)\r\n        .transition()\r\n        .delay(delay_value)\r\n        .duration(duration_value)\r\n        .attr('x', d => {\r\n          let end ;\r\n          if ( x_scale(d.end) > inner_width) {\r\n            end = x_scale.invert(inner_width)\r\n          } else if(x_scale(d.end) < 0){\r\n            end = x_scale.invert(0)\r\n          } else {\r\n            end = d.end\r\n          }\r\n          return x_scale(end)\r\n        })\r\n        .attr('width', d => {\r\n          let end ;\r\n          let start ;        \r\n          if ( x_scale(d.end) > inner_width) {\r\n            end = x_scale.invert(inner_width)\r\n          } else if(x_scale(d.end) < 0){\r\n            end = x_scale.invert(0)\r\n          } else {\r\n            end = d.end\r\n          }\r\n          \r\n          if (x_scale(d.start) <= inner_width && x_scale(d.start) >= 0){\r\n            start = d.start\r\n          } else if (x_scale(d.start) > inner_width) {\r\n            start = x_scale.invert(inner_width) \r\n          } else if (x_scale(d.start) < 0){\r\n            start = x_scale.invert(0) \r\n          }\r\n          return x_scale(start) - x_scale(end) \r\n        })\r\n    \r\n    let label_format;\r\n    label_format = x_max_val < 0.05 ?  ',.1%': ',.0%'  \r\n\r\n    labeled_x_axis_linear(\r\n      g,\r\n      Object.assign({}, theme_bar_chart, {\r\n        x_scale,\r\n        inner_width,\r\n        inner_height,\r\n        transition: true,\r\n        delay_val: delay_value,\r\n        duration_val: duration_value,\r\n        axis_label_format: label_format\r\n      })\r\n    )\r\n  }\r\n \r\n}","import { axisLeft } from 'd3'\r\n/** @module src/axis_y_band */\r\n\r\n/**\r\n * Creats y axis for a bar chart based on band scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the y axis\r\n */\r\n\r\nexport const y_axis_band = function (selection, props) {\r\n  const {\r\n    y_scale,\r\n    inner_width,\r\n    inner_height,\r\n    y_axis_label_font_family = 'arial',\r\n    y_axis_tick_font_size = 3 + inner_height * 0.03 + 'px',\r\n    y_axis_tick_distance_from_axis = inner_width * 0.03,\r\n    y_axis_tick_font_fill,\r\n    y_axis_tick_line_stroke,\r\n    y_axis_domain_line_stroke\r\n  } = props\r\n\r\n  const y_axis = axisLeft(y_scale)\r\n\r\n  let y_axis_g = selection.selectAll('.y-axis').data([null])\r\n  y_axis_g = y_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'y-axis')\r\n    .merge(y_axis_g)\r\n\r\n  y_axis_g.call(y_axis).attr('text-anchor', 'end')\r\n  y_axis_g\r\n    .selectAll('.tick text')\r\n    .attr('x', -y_axis_tick_distance_from_axis)\r\n    .style('font-size', y_axis_tick_font_size)\r\n    .style('font-family', y_axis_label_font_family)\r\n    .attr('fill', y_axis_tick_font_fill)\r\n  y_axis_g.selectAll('.tick line').attr('stroke', y_axis_tick_line_stroke)\r\n  y_axis_g.select('.domain').attr('stroke', y_axis_domain_line_stroke)\r\n}\r\n","import { page_colors as colors } from './page_colors.js'\r\n\r\nexport const theme_table_chart_line = {\r\n  x_axis_label_fill: colors.primary_text_color,\r\n  y_axis_label_fill: colors.primary_text_color,\r\n  x_axis_label: '',\r\n  y_axis_label: 'Andel',\r\n  x_axis_label_font_family: 'arial, Helvetica Neue',\r\n  y_axis_label_font_family: 'arial, Helvetica Neue',\r\n  x_axis_tick_font_fill: colors.secondary_text_color,\r\n  y_axis_tick_font_fill: colors.secondary_text_color,\r\n  y_axis_tick_number: 6,\r\n  x_axis_tick_line_stroke: 'none',\r\n  y_axis_tick_line_stroke: colors.line_color,\r\n  x_axis_domain_line_stroke: 'none',\r\n  y_axis_domain_line_stroke: 'none',\r\n  legend_text_fill: colors.primary_text_color,\r\n  legend_text_font_family: 'arial, Helvetica Neue'\r\n}\r\n","import { axisRight, format } from 'd3'\r\n/** @module src/axis_y_linear_labeled */\r\n\r\n/**\r\n * Creats linear y axis based on y_scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the y axis\r\n */\r\n\r\nexport const labeled_y_axis_linear = function (selection, props) {\r\n  const {\r\n    y_scale,\r\n    inner_width,\r\n    inner_height,\r\n    y_axis_label = 'Y axis',\r\n    y_axis_label_fill = 'black',\r\n    y_axis_label_offset = inner_width * 1.15,\r\n    y_axis_label_font_size = 7 + inner_width * 0.02 + 'px',\r\n    y_axis_label_font_family = 'arial',\r\n    y_axis_tick_font_size = 8 + inner_height * 0.02 + 'px',\r\n    y_axis_tick_number,\r\n    y_axis_tick_font_fill,\r\n    y_axis_tick_line_stroke,\r\n    y_axis_tick_size = inner_width,\r\n    y_axis_domain_line_stroke,\r\n    transition = false,\r\n    delay_val = 0,\r\n    duration_val = 0,\r\n    axis_label_format = ',.0%'\r\n  } = props\r\n\r\n  const y_axis = axisRight(y_scale)\r\n    .ticks(y_axis_tick_number)\r\n    .tickSize(y_axis_tick_size)\r\n    .tickFormat(format(axis_label_format))\r\n  let y_axis_g = selection.selectAll('.y-axis').data([null])\r\n  y_axis_g = y_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'y-axis')\r\n    .merge(y_axis_g)\r\n\r\n  // prettier-ignore\r\n  \r\n  transition ? y_axis_g.transition().delay(delay_val).duration(duration_val).call(y_axis) : y_axis_g.call(y_axis)\r\n\r\n  y_axis_g\r\n    .selectAll('.tick text')\r\n    .style('font-size', y_axis_tick_font_size)\r\n    .attr('fill', y_axis_tick_font_fill)\r\n\r\n  y_axis_g.selectAll('.tick line').attr('stroke', y_axis_tick_line_stroke)\r\n  y_axis_g.select('.domain').attr('stroke', y_axis_domain_line_stroke)\r\n\r\n  const y_axis_label_text = y_axis_g.selectAll('.axis-label').data([null])\r\n  y_axis_label_text\r\n    .enter()\r\n    .append('text')\r\n    .attr('class', 'axis-label')\r\n    .merge(y_axis_label_text)\r\n    .attr('fill', y_axis_label_fill)\r\n    .text(y_axis_label)\r\n    .attr('transform', 'rotate(-90)')\r\n    .attr('x', -inner_height / 1.5)\r\n    .attr('y', y_axis_label_offset)\r\n    .style('font-size', y_axis_label_font_size)\r\n    .style('font-family', y_axis_label_font_family)\r\n}\r\n","import {\r\n  select,\r\n  scaleTime,\r\n  scaleOrdinal,\r\n  scaleLinear,\r\n  group,\r\n  line,\r\n  min,\r\n  max\r\n} from 'd3'\r\n\r\nimport { theme_table_chart_line as theme_line_chart } from './theme_table_chart_line'\r\nimport { page_colors as colors } from './page_colors'\r\nimport { color_legend_line_chart } from './color_legend_table_line_chart'\r\nimport { labeled_y_axis_linear } from './axis_y_linear_labeled'\r\nimport { labeled_x_axis_time } from './axis_x_time_labeled'\r\nimport { page_colors } from './page_colors.js'\r\nimport  app_config  from '../app_config'\r\nconst config = app_config.data_config\r\n\r\n// line chart\r\nexport const line_chart = function (container, props, figure_data, levels) {\r\n  const { width, height, margin, zoom } = props\r\n  const margin_px = {\r\n    top: height * margin.top,\r\n    bottom: height * margin.bottom,\r\n    right: width * margin.right,\r\n    left: width * margin.left\r\n  }\r\n  const inner_width = width - margin_px.left - margin_px.right\r\n  const inner_height = height - margin_px.top - margin_px.bottom\r\n\r\n  container = select( container)\r\n\r\n  const x_scale = scaleTime()\r\n    .domain([\r\n      min(figure_data, (d) => {\r\n        return new Date(d[config.column.year] + '')\r\n      }),\r\n      max(figure_data, (d) => {\r\n        return new Date(d[config.column.year] + '')\r\n      })\r\n    ])\r\n    .range([0, inner_width])\r\n  let y_scale = scaleLinear().domain([0, 1]).range([inner_height, 0])\r\n\r\n  \r\n  const nested = Array.from(group(figure_data, d=>d.unit_name), ([key, value]) => ({key, value}) )\r\n    \r\n\r\n  const line_color_scale = scaleOrdinal()\r\n    .domain(nested.map((d) => d.key))\r\n    .range(colors.chart_colors)\r\n\r\n  color_legend_line_chart(\r\n    container,\r\n    Object.assign({}, theme_line_chart, {\r\n      line_color_scale,\r\n      inner_width,\r\n      inner_height,\r\n      margin,\r\n      position_left: margin_px.left\r\n    })\r\n  )\r\n\r\n  let svg = container.selectAll('svg').data([null])\r\n  svg = svg\r\n    .enter()\r\n    .append('svg')\r\n    .merge(svg)\r\n    .attr('width', width - 20)\r\n    .attr('height', height)\r\n    .style('background-color', colors.background_color)\r\n\r\n  let g = svg.selectAll('.grouped_element').data([null])\r\n  g = g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'grouped_element')\r\n    .merge(g)\r\n    .attr(\r\n      'transform',\r\n      'translate(' + margin_px.left + ' ,' + margin_px.top + ')'\r\n    )\r\n\r\n  labeled_y_axis_linear(\r\n    g,\r\n    Object.assign({}, theme_line_chart, {\r\n      y_scale,\r\n      inner_width,\r\n      inner_height\r\n    })\r\n  )\r\n\r\n  let x_axis_tick_values = [\r\n    ...new Set(\r\n      figure_data.map((d) => {\r\n        return d[config.column.year] + ''\r\n      })\r\n    )\r\n  ]\r\n  x_axis_tick_values = x_axis_tick_values.map((d) => {\r\n    return new Date(d)\r\n  })\r\n  if (x_axis_tick_values.length > 8) {\r\n    x_axis_tick_values =\r\n      x_axis_tick_values.length % 2 === 0\r\n        ? x_axis_tick_values.filter((data, index) => index % 2 !== 0)\r\n        : x_axis_tick_values.filter((data, index) => index % 2 === 0)\r\n  }\r\n\r\n  labeled_x_axis_time(\r\n    g,\r\n    Object.assign({}, theme_line_chart, {\r\n      x_scale,\r\n      inner_width,\r\n      inner_height,\r\n      x_axis_tick_values\r\n    })\r\n  )\r\n\r\n  const lines = line()\r\n    .x((d) => x_scale(new Date(d[config.column.year] + '')))\r\n    .y((d) => y_scale(d[config.column.variable]))\r\n\r\n\r\n  let show_level = document.querySelector('.dropdown_ul .dd-level').innerHTML\r\n  let level_visibility = show_level.replace(/\\s/g, '') === \"Skjulmålnivå\" ?  \"visible\" : \"hidden\"\r\n  const level_colors = page_colors.traffic_light_colors\r\n\r\n  let level = g.selectAll(\"rect.level\")\r\n  level = level\r\n    .data(levels)\r\n    .enter().append(\"rect\")\r\n    .merge(level)\r\n      .attr(\"class\", \"level\")\r\n      .attr('x', 0)\r\n      .attr('y', d => y_scale(d.start))\r\n      .attr('height',d => inner_height - y_scale((d.start - d.end)))\r\n      .attr(\"width\", inner_width)\r\n      .attr('fill', d => level_colors[d.level])\r\n      .style(\"opacity\",\"0.2\")\r\n      .style(\"visibility\", level_visibility)\r\n\r\n  \r\n  let path = g.selectAll('.table-line-chart')\r\n  .data(group(figure_data, d=> d[config.column.treatment_unit]))\r\n\r\n  path.exit().transition().style('opacity', 0).remove()\r\n    \r\n  path = path\r\n    .enter()\r\n    .append('path')\r\n    .merge(path)\r\n    .attr('class', (d) =>  `table-line-chart  ${d[0].replace(/\\s/g, '')}`)\r\n    .attr('d', (d) => lines(d[1]))\r\n    .attr('stroke', (d) => line_color_scale(d[0]))\r\n    .style('stroke-width', 3)\r\n    .style('stroke-linejoin', 'round')\r\n    .style('stroke-linecap', 'round')\r\n    .attr('fill', 'none')\r\n    .style('mix-blend-mode', 'multiply')\r\n  \r\n\r\n  \r\n  if (zoom.replace(/\\s/g, '') === 'Zoomut' ){\r\n    let y_min_val =  min(figure_data, (d) => d[config.column.variable]) \r\n    let y_max_val =  max(figure_data, (d) => d[config.column.variable])\r\n    let additional_margin = (y_max_val - y_min_val) * 0.2  \r\n    y_min_val = Math.floor( (y_min_val - additional_margin) * 100) / 100\r\n    y_max_val = Math.ceil((y_max_val + additional_margin) * 100) / 100\r\n    \r\n    let y_min;\r\n    let y_max;\r\n    \r\n    y_min_val  < 0 ? y_min = 0 : y_min = y_min_val\r\n    y_max_val  > 1 ? y_max = 1 : y_max =y_max_val\r\n\r\n    y_scale = scaleLinear()\r\n      .domain([\r\n      y_min,\r\n      y_max\r\n      ])\r\n      .range([inner_height, 0])\r\n    \r\n    let label_format =  y_max-y_min < 0.06 ? ',.1%': ',.0%'  \r\n    \r\n    path\r\n      .data(group(figure_data, d=> d[config.column.treatment_unit]))\r\n      .enter()\r\n      .append('path')\r\n      .merge(path)\r\n      .transition()\r\n      .delay(1000)\r\n      .duration(1000)\r\n      .attr('d', (d) => lines(d[1]))\r\n    \r\n    level\r\n      .data(levels)\r\n      .enter().append(\"rect\")\r\n      .merge(level)\r\n        .transition()\r\n        .delay(1000)\r\n        .duration(1000)\r\n        .attr('y', d => {\r\n          let start ;\r\n          if ( y_scale(d.start) > inner_height) {\r\n            start = y_scale.invert(inner_height)\r\n          } else if(y_scale(d.start) < 0){\r\n            start = y_scale.invert(0)\r\n          } else {\r\n            start = d.start\r\n          }\r\n          return y_scale(start)\r\n        })\r\n        .attr('height',d => {\r\n          let end ;\r\n          let start ;        \r\n          if ( y_scale(d.start) > inner_height) {\r\n            start = y_scale.invert(inner_height)\r\n          } else if(y_scale(d.start) < 0){\r\n            start = y_scale.invert(0)\r\n          } else {\r\n            start = d.start\r\n          }\r\n          \r\n          if (y_scale(d.end) <= inner_height && y_scale(d.end) >= 0){\r\n            end = d.end\r\n          } else if (y_scale(d.end) > inner_height) {\r\n            end = y_scale.invert(inner_height) \r\n          } else if (y_scale(d.end) < 0){\r\n            end = y_scale.invert(0) \r\n          }\r\n          return y_scale(end) - y_scale(start)\r\n        })\r\n    \r\n    labeled_y_axis_linear(\r\n      g,\r\n      Object.assign({}, theme_line_chart, {\r\n        y_scale,\r\n        inner_width,\r\n        inner_height,\r\n        transition: true,\r\n        delay_val: 1000,\r\n        duration_val: 1000,\r\n        axis_label_format: label_format\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { selectAll, select} from 'd3'\r\n\r\nexport const color_legend_line_chart = function (selection, props) {\r\n  const {\r\n    line_color_scale,\r\n    margin = { left: 0.1, right: 0.1 },\r\n    inner_width,\r\n    legend_text_fill,\r\n    legend_text_font_family,\r\n    legend_text_font_size = 7 + inner_width * 0.01\r\n  } = props\r\n\r\n  const primary_legend_group = selection\r\n    .selectAll('.line_chart_legend_table')\r\n    .data([null])\r\n  const legend_container = primary_legend_group\r\n    .enter()\r\n    .append('div')\r\n    .merge(primary_legend_group)\r\n    .attr('class', 'line_chart_legend_table')\r\n    .style('position', 'relative')\r\n    .style('top', '0')\r\n    .style('left', `${margin.left * 100}%`)\r\n    .style('width', `${(1 - margin.left - margin.right) * 100}%`)\r\n   \r\n\r\n  const legend_list = legend_container\r\n      .selectAll('ul')\r\n      .data([null])\r\n    .enter()\r\n      .append('ul')\r\n    .merge(legend_container.select(\"ul\"))\r\n      .style('display', 'flex')\r\n      .style('justify-content', 'flex-start')\r\n      .style('flex-wrap', 'wrap')\r\n\r\n  const legend = legend_list.selectAll('li')\r\n    .data(line_color_scale.domain(), d => d )\r\n    \r\n  const legend_item = legend\r\n    .enter()\r\n      .append(\"li\")\r\n    .merge(legend)\r\n    .style('margin', '5px')\r\n    .style('display', 'flex')\r\n    .attr('class', 'legend_item')\r\n    .text((d) => d)\r\n      .style('font-size', legend_text_font_size + 'px')\r\n      .style('font-family', legend_text_font_family)\r\n      .style('fill', legend_text_fill)\r\n      .style('padding', '5px')\r\n      .style('border-bottom', (d) => `3px solid ${line_color_scale(d)}`)\r\n      \r\n  legend\r\n    .exit().remove()\r\n  \r\n  \r\n  legend_item\r\n  .merge(legend)   \r\n    .on('mouseover', function (event,d) {\r\n      selectAll('svg path.table-line-chart:not(.clicked)')\r\n        .transition()\r\n        .duration(500)\r\n        .style('opacity', 0.2)\r\n      select(`svg path.${d.replace(/\\s/g, '')}`)\r\n        .transition()\r\n        .duration(500)\r\n        .style('opacity', 1)\r\n      select(this).style('cursor', 'pointer')\r\n    })\r\n    .on('mouseout', function (event,d) {\r\n      var nr_clicked = select('.tr_figure').selectAll('li.clicked').nodes()\r\n        .length\r\n      if (nr_clicked < 1) {\r\n        selectAll('path.table-line-chart:not(.clicked)')\r\n          .transition()\r\n          .duration(500)\r\n          .style('opacity', 1)\r\n      } else {\r\n        selectAll('path.table-line-chart:not(.clicked)')\r\n          .transition()\r\n          .duration(500)\r\n          .style('opacity', 0.2)\r\n      }\r\n    })\r\n    .on('click', function (event, d) {\r\n      var clicked_legend = select(this).attr('class')\r\n      \r\n      if (clicked_legend.includes('clicked')) {\r\n        var nr_clicked = select('.line_chart_legend_table')\r\n          .selectAll('li.clicked')\r\n          .nodes().length\r\n        .selectAll('li.clicked')\r\n        var selected_path_class\r\n        if (nr_clicked === 1) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = selected_path_class.replace(' clicked', '')\r\n          clicked_legend = clicked_legend.replace(' clicked', '')\r\n          selectAll('svg path.table-line-chart')\r\n            .attr('class',d => `table-line-chart  ${d[0].replace(/\\s/g, '')}`)\r\n            .transition()\r\n            .duration(1000)\r\n            .style('opacity', 1)\r\n          selectAll('.tr_figure li.legend_item')\r\n            .attr('class', clicked_legend)\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 1)\r\n        } else if (nr_clicked > 1) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = selected_path_class.replace(' clicked', '')\r\n          clicked_legend = clicked_legend.replace(' clicked', '')\r\n          select(`svg path.${d.replace(/\\s/g, '')}`)\r\n            .attr('class', selected_path_class)\r\n            .transition()\r\n            .duration(1000)\r\n            .style('opacity', '0.2')\r\n          select(this)\r\n            .attr('class', clicked_legend)\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 0.4)\r\n        } else {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = selected_path_class.replace(' clicked', '')\r\n          clicked_legend = clicked_legend.replace(' clicked', '')\r\n          select('svg path.table-line-chart')\r\n            .attr('class', selected_path_class)\r\n            .transition()\r\n            .duration(1000)\r\n            .style('opacity', 1)\r\n          select('.tr_figure li.legend_item')\r\n            .attr('class', clicked_legend)\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 1)\r\n        }\r\n      } else {\r\n        nr_clicked = select('.tr_figure').selectAll('li.clicked').nodes()\r\n          .length\r\n        if (nr_clicked === 0) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = `${selected_path_class} clicked`\r\n          clicked_legend = `${clicked_legend} clicked`\r\n          select(`svg path.${d.replace(/\\s/g, '')}`)\r\n            .attr('class', selected_path_class)\r\n            .style('opacity', 1)\r\n          select(this).attr('class', clicked_legend).style('opacity', 1)\r\n          selectAll('svg path.table-line-chart:not(.clicked)')\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 0.2)\r\n          selectAll('.tr_figure li.legend_item:not(.clicked)')\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 0.4)\r\n        } else if (nr_clicked > 0) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = `${selected_path_class} clicked`\r\n          clicked_legend = `${clicked_legend} clicked`\r\n          select(`svg path.${d.replace(/\\s/g, '')}`)\r\n            .attr('class', selected_path_class)\r\n            .style('opacity', 1)\r\n          select(this).attr('class', clicked_legend).style('opacity', 1)\r\n        }\r\n      }\r\n    })\r\n\r\n}\r\n","import { axisBottom, timeFormat } from 'd3'\r\n/** @module src/axis_x_time_labeled */\r\n\r\n/**\r\n * Creats time formatted x axis based on x_scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the x axis\r\n */\r\n\r\nexport const labeled_x_axis_time = function (selection, props) {\r\n  const {\r\n    x_scale,\r\n    inner_width,\r\n    inner_height,\r\n    x_axis_tick_values,\r\n    x_axis_label = '',\r\n    x_axis_label_fill = '',\r\n    x_axis_label_offset = 0,\r\n    x_axis_label_font_size = 0,\r\n    x_axis_label_font_family = 'arial',\r\n    x_axis_tick_font_size = 10 + inner_width * 0.015 + 'px',\r\n    x_axis_tick_distance_from_axis = 5 + inner_height * 0.08,\r\n    x_axis_tick_font_fill,\r\n    x_axis_tick_line_stroke,\r\n    x_axis_domain_line_stroke\r\n  } = props\r\n\r\n  const x_axis = axisBottom(x_scale)\r\n    .tickValues(x_axis_tick_values)\r\n    .tickFormat(timeFormat('%Y'))\r\n  let x_axis_g = selection.selectAll('.x-axis').data([null])\r\n  x_axis_g = x_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'x-axis')\r\n    .merge(x_axis_g)\r\n    .attr('transform', `translate(0,${inner_height})`)\r\n  x_axis_g.call(x_axis)\r\n  x_axis_g\r\n    .selectAll('.tick text')\r\n    .style('font-size', x_axis_tick_font_size)\r\n    .attr('fill', x_axis_tick_font_fill)\r\n    .attr('y', x_axis_tick_distance_from_axis)\r\n  x_axis_g.selectAll('.tick line').attr('stroke', x_axis_tick_line_stroke)\r\n  x_axis_g.select('.domain').attr('stroke', x_axis_domain_line_stroke)\r\n\r\n  const x_axis_label_text = x_axis_g.selectAll('.axis-label').data([null])\r\n  x_axis_label_text\r\n    .enter()\r\n    .append('text')\r\n    .attr('class', 'axis-label')\r\n    .merge(x_axis_label_text)\r\n    .attr('fill', x_axis_label_fill)\r\n    .text(x_axis_label)\r\n    .attr('x', inner_width / 2)\r\n    .attr('y', x_axis_label_offset)\r\n    .style('font-size', x_axis_label_font_size + 'px')\r\n    .style('font-family', x_axis_label_font_family)\r\n}\r\n","import  app_config  from '../app_config'\r\n\r\nconst config = app_config.data_config\r\n\r\n\r\nexport const level_boundary = function (level_obj)  {\r\n  if (this[config.column.level_direction] === 0) {\r\n    if (level_obj.level === 'high' )  {\r\n      level_obj.start = this[config.column.level_green]\r\n      level_obj.end = 0\r\n    } else if (level_obj.level === 'mid') {\r\n      level_obj.start = this[config.column.level_yellow]\r\n      level_obj.end = this[config.column.level_green]\r\n    } else {\r\n      level_obj.start = 1\r\n      level_obj.end = this[config.column.level_yellow]\r\n    }\r\n  } else if (this[config.column.level_direction]=== 1 ){\r\n    if ( level_obj.level === 'high' )  {\r\n      level_obj.start = 1\r\n      level_obj.end = this[config.column.level_green]\r\n    } else if (level_obj.level === 'mid') { \r\n      level_obj.start = this[config.column.level_green]\r\n      level_obj.end = this[config.column.level_yellow]\r\n    } else {\r\n      level_obj.start = this[config.column.level_yellow]\r\n      level_obj.end = 0\r\n    }\r\n  } \r\n}","import React, {useEffect, useRef, useState} from 'react';\r\n\r\nimport TF_BUTTON from './tf_button'\r\nimport TF_DDMENU from './tf_ddmenu'\r\nimport TF_LONG_DESCRIPTION from './tf_description'\r\n\r\nimport {bar_chart} from '../charts/barchart'\r\nimport {line_chart} from '../charts/line_chart'\r\nimport { level_boundary } from '../charts/tr_utils'\r\n\r\nfunction TF_FIGURE (props) {\r\n  const {\r\n    colspan = 3,\r\n    data,\r\n    figure_class,\r\n    update_selected_row \r\n  } = props\r\n  \r\n  const svg_container_ref = useRef()\r\n  if(!data.agg_data.filtered_by_year.some(d => d.unit_name ===\"Nasjonalt\") ) {\r\n    data.agg_data.filtered_by_year.push(data.agg_data.nation.filtered_by_year[0])\r\n    Array.prototype.push.apply( data.agg_data.filtered_by_unit, data.agg_data.nation.filtered_by_unit)\r\n   \r\n  }\r\n  const [chart_type, update_chart_type] = useState(\"line\")\r\n  const [zoom, update_zoom]=useState(\"Zoom ut\")\r\n  const [show_level, update_show_level]=useState(\"Vis målnivå\")\r\n  const [remove_tf, update_remove_tf]=useState(null)\r\n\r\n  useEffect(() => {\r\n    const svg_props = {}\r\n    svg_props.width = svg_container_ref.current.clientWidth \r\n    svg_props.height =  svg_props.width * 0.5\r\n    svg_props.margin = {top:0.05, bottom: 0.1, right: 0.15, left: 0.2}\r\n    svg_props.zoom = zoom\r\n    const levels = [{level: 'high'}, {level: 'mid'}, {level: 'low'}]\r\n    levels.forEach(level_boundary, data.description[0])\r\n    if (chart_type === \"bar\" ) {\r\n      const nr_svg_children = svg_container_ref.current.childElementCount\r\n      for(let i = 0; i < nr_svg_children; i++){\r\n        svg_container_ref.current.removeChild(\r\n          svg_container_ref.current.children[0]\r\n        )\r\n      }\r\n      bar_chart(svg_container_ref.current, svg_props, data.agg_data.filtered_by_year, levels )\r\n    } else if (chart_type === \"line\") {\r\n      const nr_svg_children = svg_container_ref.current.childElementCount\r\n      for(let i = 0; i < nr_svg_children; i++){\r\n        svg_container_ref.current.removeChild(\r\n          svg_container_ref.current.children[0]\r\n        )\r\n      }\r\n      svg_props.margin = {top:0.05, bottom: 0.2, right: 0.15, left: 0.05}\r\n      line_chart(svg_container_ref.current, svg_props, data.agg_data.filtered_by_unit, levels)\r\n    }\r\n  }, [data, chart_type, zoom])\r\n  \r\n  return (\r\n      <tr className = {figure_class}><td colSpan = {colspan}>\r\n        <div className=\"tr_figure\" >\r\n          <div className = \"tr_buttons_container\">\r\n            <TF_DDMENU\r\n              show_level = {show_level}\r\n              update_show_level = {update_show_level}\r\n              zoom ={zoom}\r\n              update_zoom = {update_zoom}\r\n              remove_tf = {remove_tf}\r\n              update_remove_tf = {update_remove_tf}\r\n              svg_container = {svg_container_ref}\r\n              update_selected_row = {update_selected_row}\r\n            />\r\n            <TF_BUTTON\r\n              chart_type = {chart_type}\r\n              update_chart_type = {update_chart_type}\r\n            />\r\n          </div>\r\n          <div ref = {svg_container_ref} style = {{textAlign: \"center\"}}>\r\n            \r\n          </div>\r\n          <TF_LONG_DESCRIPTION description_text = {data.description[0].long_description}/>\r\n        </div>\r\n      </td></tr>\r\n  );\r\n}\r\n\r\nexport default TF_FIGURE;\r\n","import React from 'react'\r\n\r\nimport INDICATOR_VALUE from './indicator_value'\r\nimport INDICATOR_DESCRIPTION from './indicator_description'\r\nimport TR_FIGURE from './tf_figure'\r\n\r\nimport app_config from '../app_config'\r\n\r\nconst { data_config } = app_config\r\n\r\nfunction INDICATOR_ROW(props) {\r\n  const {\r\n    mid_text = \"av\",\r\n    data,\r\n    treatment_unit_name = [],\r\n    med_field_class = \"\",\r\n    show_level_filter = \"\",\r\n    selected_row, \r\n    update_selected_row ,\r\n    colspan \r\n  } = props\r\n \r\n  const description = data.description[0]\r\n  const indcator_title = description.title\r\n  const indicator_drescription = description.short_description\r\n  const level_direction = description[data_config.column.level_direction] === 0 ?\r\n    \"<\" :\">\"\r\n  const level_green = description[data_config.column.level_green]\r\n  const high_achivment_text = level_green !== null ?\r\n    `Høy måloppnåelse: ${level_direction} ${level_green*100}%` :  \"\"\r\n  const tr_indicator_class = `${description[data_config.column.id]} \r\n    ${description[data_config.column.registry_short_name]}`\r\n  \r\n  const indicator_val = treatment_unit_name.map((tr_unit, index) => {\r\n    const ind_per_unit =data.agg_data.filtered_by_year.filter(\r\n      data => data[data_config.column.treatment_unit] === tr_unit\r\n    ) \r\n    if (ind_per_unit.length < 1){\r\n      return <td\r\n        key = {`${description[data_config.column.id]}_${tr_unit}_${index}_su`}\r\n        className = \"selected_unit\">\r\n      </td>\r\n    } else {\r\n      \r\n      const indicator_value =\r\n        description[data_config.column.indicator_type] === data_config.indicator_type.andel.db ?\r\n        `${Math.round(ind_per_unit[0][data_config.column.variable] * 100)}%` :\r\n        `${ind_per_unit[0][data_config.column.variable]}`\r\n      const denominator = ind_per_unit[0][data_config.column.denominator]\r\n      const numerator = Math.round(ind_per_unit[0][data_config.column.variable] * denominator)\r\n\r\n      const icon_class = ind_per_unit[0][data_config.column.achieved_level] === \"H\" ?\r\n       \"fa fa-fas fa-circle\": \r\n        ind_per_unit[0][data_config.column.achieved_level] === \"M\" ? \r\n        \"fa fa-fas fa-adjust\":\r\n        ind_per_unit[0][data_config.column.achieved_level] === \"L\" ?\r\n         \"fa fa-circle-o\" :\r\n        \"\"\r\n      const level_class =  ind_per_unit[0][data_config.column.achieved_level] !== show_level_filter && show_level_filter !== null?\r\n        \"filtered_level\":\"\"\r\n     return <INDICATOR_VALUE\r\n      key = {`${description[data_config.column.id]}_${tr_unit}_${index}_su`}\r\n        td_class = {`selected_unit ${level_class}`}\r\n        indicator_value = {indicator_value} \r\n        icon_class = {icon_class}\r\n        share_of_totla = {numerator}\r\n        mid_text = {mid_text}\r\n        total = {denominator}\r\n      />;\r\n    }\r\n  })\r\n  \r\n  const indicator_value_nation =\r\n    description[data_config.column.indicator_type] === data_config.indicator_type.andel.db ?\r\n    `${Math.round(data.agg_data.nation.filtered_by_year[0][data_config.column.variable] * 100)}%` :\r\n    `${data.agg_data.nation.filtered_by_year[0][data_config.column.variable]}`\r\n  const denominator_nation = data.agg_data.nation.filtered_by_year[0][data_config.column.denominator]\r\n  const numerator_nation = Math.round(data.agg_data.nation.filtered_by_year[0][data_config.column.variable] * denominator_nation)\r\n\r\n      const icon_class_nation = data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] === \"H\" ?\r\n       \"fa fa-fas fa-circle\": \r\n        data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] === \"M\" ? \r\n        \"fa fa-fas fa-adjust\":\r\n        data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] === \"L\" ?\r\n         \"fa fa-circle-o\" :\r\n      \"\"\r\n  const level_class =  data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] !==\r\n    show_level_filter && show_level_filter !== null ?\r\n    \"filtered_level\":\"\"\r\n  \r\n  const tr_fig = selected_row === description[data_config.column.id] ?\r\n   <TR_FIGURE\r\n    colspan = {colspan}\r\n    data ={data}\r\n    figure_class = {med_field_class}\r\n    update_selected_row = {update_selected_row}\r\n  /> : null\r\n\r\n  const tr_click_handler = ()=> {\r\n    if (selected_row === description[data_config.column.id] ){\r\n      update_selected_row(\"\")\r\n    }else{\r\n      update_selected_row(description[data_config.column.id])\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <tr\r\n        onClick = {()=>tr_click_handler()} \r\n        id= {`${tr_indicator_class}`} \r\n        className = {`${tr_indicator_class} ${med_field_class} indicator`}\r\n      >\r\n        <INDICATOR_DESCRIPTION\r\n          title = {indcator_title}\r\n          short_description = {indicator_drescription} \r\n          high_achivment_text = {high_achivment_text}\r\n        />\r\n        {indicator_val}\r\n        <INDICATOR_VALUE\r\n          key = {``}\r\n          td_class = {`nationally ${level_class}`}\r\n          indicator_value = {indicator_value_nation} \r\n          icon_class = {icon_class_nation}\r\n          share_of_totla = {numerator_nation}\r\n          mid_text = {mid_text}\r\n          total = {denominator_nation}\r\n        />\r\n      </tr>\r\n      {tr_fig}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default INDICATOR_ROW;","import React from 'react';\r\n\r\n\r\nfunction REGISTER_NAME(props) {\r\n  const {\r\n    register_name = \"Nasjonalt hoftebruddregister\",\r\n    colspan = 2,\r\n    tr_register_name_class = \"register-row\"\r\n  } = props\r\n  return (\r\n    <tr className = {tr_register_name_class} >\r\n      <td colSpan = {colspan}>\r\n        <h3 className = \"reg-name\">{register_name}</h3>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default REGISTER_NAME;\r\n","import React from 'react'\r\nimport INDICATOR_ROW from './indicator_row'\r\nimport REGISTER_NAME from './register_name'\r\nimport app_config from '../app_config'\r\n\r\nconst { data_config } = app_config\r\n\r\n\r\nfunction REGISTER(props) {\r\n  const {\r\n    register_sname = \"hjerte\",\r\n    colspan = 4,\r\n    tr_register_name_class = \"register-row\",\r\n    data,\r\n    treatment_unit_name,\r\n    med_field_filter,\r\n    show_level_filter,\r\n    selected_row,\r\n    update_selected_row,\r\n  } = props\r\n\r\n \r\n  const med_field_class = med_field_filter.includes(register_sname) ? '' : 'filter_med_field' \r\n  const register_name =  [...new Set ( \r\n    data.description.map(d=> d[data_config.column.registry_full_name]) \r\n  )]\r\n  const ind_id =  [...new Set ( \r\n    data.agg_data.filtered_by_year.map(d=> d[data_config.column.indicator_id]) \r\n  )]\r\n\r\n  const indicator_row = ind_id.map(\r\n    indicator => {\r\n      const agg_data = {}\r\n      const nation = {}\r\n      agg_data.filtered_by_year = data.agg_data.filtered_by_year.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      ) \r\n      agg_data.filtered_by_unit = data.agg_data.filtered_by_unit.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      ) \r\n      nation.filtered_by_year = data.agg_data.nation.filtered_by_year.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      )\r\n      const description = data.description.filter(\r\n        d => d[data_config.column.id] === indicator\r\n      )\r\n      nation.filtered_by_unit = data.agg_data.nation.filtered_by_unit.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      )\r\n      agg_data.nation = nation\r\n      return <INDICATOR_ROW\r\n        data = {{agg_data, description}}\r\n        key = {indicator} \r\n        treatment_unit_name = {treatment_unit_name }\r\n        med_field_class = {med_field_class}\r\n        show_level_filter = {show_level_filter}\r\n        colspan = {colspan}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />;\r\n    })\r\n   \r\n  return(\r\n    <>\r\n      <REGISTER_NAME\r\n        register_name = {register_name}\r\n        colspan = {colspan}\r\n        tr_register_name_class = {`${tr_register_name_class} ${register_sname} ${med_field_class}`}      \r\n      />\r\n      {indicator_row}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default REGISTER;","import app_config from '../app_config'\r\n\r\nconst { data_config } = app_config\r\n\r\n export const filter_year_unit = (data, input_params) => {\r\n  const {\r\n    selected_unit,\r\n    selected_year\r\n  } = input_params\r\n\r\n  const filtered_by_unit = selected_unit !== null ? \r\n    data.filter(\r\n      d => selected_unit.includes(d[data_config.column.treatment_unit])\r\n    ) : data\r\n  \r\n\r\n  const filtered_by_year = selected_year !== null ? \r\n  filtered_by_unit.filter(\r\n      d => d[data_config.column.year] === selected_year\r\n      ) : filtered_by_unit\r\n\r\n  return({\r\n    filtered_by_unit,\r\n    filtered_by_year   \r\n  });\r\n}\r\n\r\nexport const filter_register = (data, register )=> {\r\n  \r\n const description = data.description.filter(\r\n   desc => desc[app_config.data_config.column.registry_short_name] === register\r\n  )\r\n  const indicator_name = description.map(\r\n    desc => desc[app_config.data_config.column.id])\r\n  const agg_data = {}\r\n  agg_data.filtered_by_unit = data.agg_data.filtered_by_unit.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  agg_data.filtered_by_year = data.agg_data.filtered_by_year.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  const nation = {}\r\n  nation.filtered_by_unit = data.agg_data.nation.filtered_by_unit.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  nation.filtered_by_year = data.agg_data.nation.filtered_by_year.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  agg_data.nation = nation\r\n  return {agg_data, description};\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport REGISTER from './register'\r\n\r\nimport app_config from '../app_config'\r\nimport { filter_register } from '../data/filter_year_unit'\r\n\r\nconst { med_field } = app_config\r\n\r\nfunction TABLE_BODY(props) {\r\n  const {\r\n    colspan = 4,\r\n    data,\r\n    treatment_unit_name,\r\n    treatment_year,\r\n    med_field_filter,\r\n    show_level_filter,\r\n    selected_row,\r\n    update_selected_row \r\n  } = props\r\n  \r\n  //console.log(data)\r\n \r\n  const added_register = [];\r\n //if no valid treatment unit loop through the national\r\n  if (treatment_unit_name.length < 1) {\r\n    data.agg_data.filtered_by_year = data.agg_data.nation.filtered_by_year\r\n    data.agg_data.filtered_by_unit = data.agg_data.nation.filtered_by_unit\r\n  }\r\n  //loop registry for registry based following the seq laid out by the med field list\r\n  const table_body = med_field.map( function(field) {\r\n    \r\n    let register_block = field.key.map((register) =>{\r\n      var register_comp;\r\n      if(!this.includes(register)){\r\n        this.push(register)\r\n        const register_data = filter_register(\r\n          data,\r\n          register\r\n        )\r\n\r\n        if (register_data.agg_data.filtered_by_year.length > 0) {\r\n          register_comp = <REGISTER\r\n            key = {`${register}`}\r\n            register_sname = {register}\r\n            data = {register_data}\r\n            colspan = {colspan}\r\n            treatment_unit_name = {treatment_unit_name}\r\n            treatment_year = {treatment_year}\r\n            med_field_filter = {med_field_filter}\r\n            show_level_filter = {show_level_filter}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        }\r\n      } else { register_comp = null}\r\n    return register_comp\r\n    })\r\n    return register_block\r\n  },\r\n  added_register)\r\n \r\n  return (\r\n    <tbody>\r\n      {table_body}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default TABLE_BODY;","import React from 'react';\r\n\r\nimport TABLE_HEADER from './indicator_table_header'\r\nimport TABLE_BODY from './indicator_table_body'\r\n\r\nfunction INDICATOR_TABLE(props) {\r\n  const {\r\n    treatment_unit_name = [],\r\n    treatment_year = 2019,\r\n    data,\r\n    colspan,\r\n    med_field_filter, \r\n    show_level_filter,\r\n    selected_row, \r\n    update_selected_row\r\n  } = props\r\n\r\n  return (\r\n    <table>\r\n      <TABLE_HEADER col_nr = {colspan} treatment_unit_name = {treatment_unit_name}/>\r\n      <TABLE_BODY \r\n        colspan = {colspan}\r\n        data = {data}\r\n        treatment_unit_name = {treatment_unit_name} \r\n        treatment_year = {treatment_year}\r\n        med_field_filter = {med_field_filter}\r\n        show_level_filter = {show_level_filter}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default INDICATOR_TABLE;","import React from 'react';\r\n\r\nfunction LEGEND_BTN(props) {\r\n  const {\r\n    level= \"Høy måloppnåelse\",\r\n    icon_class = \"fa fa-fas fa-circle\",\r\n    legend_btn_class = \"high\",\r\n    update_show_level_filter,\r\n    show_level_filter \r\n  } = props\r\n\r\n  const level_filter = legend_btn_class[0].toUpperCase() \r\n  const checked_class = level_filter === show_level_filter ? \"checked\" : \"\"\r\n \r\n  const handle_level_filter = (current_state, update_state)=>{\r\n    if (current_state===update_state){\r\n      update_show_level_filter(null)\r\n    } else { \r\n      update_show_level_filter(update_state)\r\n    }\r\n  }\r\n  return (\r\n    <button\r\n      className = {`${legend_btn_class} ${checked_class}`}\r\n      onClick = {()=>handle_level_filter(show_level_filter, level_filter)}\r\n    >\r\n      <i className = {`${icon_class} legend-icon`}> </i>\r\n      <div className = \"legend-text\">{level}</div>\r\n    </button> \r\n  );\r\n}\r\n\r\nexport default LEGEND_BTN;","import React , { useRef, useEffect, useState }from 'react'\r\nimport LEGEND_BTN from './legend_btn'\r\nimport useResizeObserver from './utils'\r\n\r\nfunction LEGEND(props) {\r\n  const {\r\n    app_text= {indicators: {high: {text: \"Høy måloppnåelse\", icon: \"fa fa-fas fa-circle\" }}},\r\n    update_show_level_filter,\r\n    show_level_filter\r\n  } = props\r\n  const legend_ref = useRef()\r\n  const dim = useResizeObserver(legend_ref)\r\n  const [offset_top, update_offset_top] = useState(\"\")\r\n  useEffect(()=>{\r\n    const top = dim ? `${dim.target.previousSibling.scrollHeight}px` : \"\"\r\n    update_offset_top(top)\r\n  },[dim, legend_ref])\r\n\r\n  const legend_btns = Object.keys(app_text.indicators).map(\r\n    function(level){\r\n      return(\r\n        <LEGEND_BTN\r\n          update_show_level_filter = {update_show_level_filter}\r\n          show_level_filter = {show_level_filter}\r\n          key = {`${level}_legend_btn`} \r\n          icon_class={this[level].icon}\r\n          level = {this[level].text}\r\n          legend_btn_class = {level}\r\n        />\r\n      );\r\n    },\r\n  app_text.indicators)\r\n\r\n\r\n  const style = {top: offset_top}\r\n  \r\n  return (\r\n    <div \r\n      className = \"table_legend\"\r\n      ref = {legend_ref}\r\n      style= {style}\r\n    >\r\n      {legend_btns}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LEGEND;","import React  from 'react';\r\n\r\n\r\nfunction MED_FIELD_ROW(props) {\r\n  const {\r\n    med_field_name= \"Hjerte- og karsykdommer\",\r\n    nr_indicators = 10,\r\n    update_med_field_filter,\r\n    update_clicked_med_field,\r\n    clicked_med_field\r\n  } = props\r\n \r\n  const class_checked = clicked_med_field === med_field_name.react_key ? \"checked\" : \"\"\r\n  \r\n  const handle_med_field_click =()=>{\r\n    update_clicked_med_field(med_field_name.react_key)\r\n    update_med_field_filter(med_field_name.key)\r\n  }\r\n  return (\r\n  <li className = {`med_field ${class_checked} med_field_${med_field_name.react_key}`} >\r\n    <button className = \"med_field_text\" onClick = {()=> handle_med_field_click() } >\r\n      {med_field_name.name.toUpperCase()}\r\n      <div className=\"med_field_nrind\">{nr_indicators}</div>\r\n    </button>\r\n  </li>\r\n  );\r\n}\r\n\r\nexport default MED_FIELD_ROW;","import React , { useRef, useState, useEffect} from 'react';\r\nimport MED_FIELD_ROW from './med_field_row'\r\nimport useResizeObserver from './utils'\r\n\r\n\r\nfunction MED_FIELD(props) {\r\n  const {\r\n    med_field = [],\r\n    ind_per_reg,\r\n    update_med_field_filter,\r\n    clicked_med_field,\r\n    update_clicked_med_field,\r\n    \r\n  } = props\r\n  const med_field_ref = useRef()\r\n  const dim = useResizeObserver(med_field_ref)\r\n  const [offset_top, update_offset_top] = useState(\"\")\r\n  useEffect(()=>{\r\n    const top = dim ? `${dim.target.offsetTop}px` : \"\"\r\n    update_offset_top(top)\r\n  },[dim, med_field_ref])\r\n\r\n  const all_reg = ind_per_reg.map(ind => ind.registry_name)\r\n  const med_field_row = med_field.map(\r\n    med_field => {\r\n      const nr_ind = ind_per_reg.filter(\r\n        reg => med_field.key.includes(reg.registry_name)\r\n      ).reduce(\r\n      (acc,cur) =>{\r\n        return(acc+cur.number_ind)\r\n      },0)\r\n        \r\n     return (\r\n     <MED_FIELD_ROW \r\n      key = {med_field.react_key}\r\n      med_field_name = {med_field}\r\n      nr_indicators = {nr_ind}\r\n      update_med_field_filter = {update_med_field_filter}\r\n      clicked_med_field = {clicked_med_field}\r\n      update_clicked_med_field = {update_clicked_med_field}\r\n      />\r\n    );\r\n  })\r\n  \r\n  const tot_nr_ind = ind_per_reg.reduce(\r\n    (acc,cur) =>{\r\n      return(acc+cur.number_ind)\r\n    },0)\r\n  \r\n  const checked_class = \"all\" === clicked_med_field ? \"checked\" : \"\" \r\n          \r\n  const handle_med_field_click =()=>{\r\n    update_clicked_med_field(\"all\")\r\n    update_med_field_filter(all_reg)\r\n  }\r\n \r\n  const style = {top: offset_top}\r\n  return (\r\n  <ul ref={med_field_ref} style = {style} className = \"med_field_list\">\r\n    <li className= {`med_field_title ${checked_class}`} >\r\n      <button onClick = {()=>handle_med_field_click()}>\r\n        <h4 className = \"med_field_text\">ALLE INDIKATORER\r\n          <div className = \"med_field_nrind\">{tot_nr_ind}</div>  \r\n        </h4>\r\n      </button>\r\n    </li>\r\n    {med_field_row}\r\n  </ul>\r\n  );\r\n}\r\n\r\nexport default MED_FIELD;","import React, {useState} from 'react';\r\n\r\nimport INDICATOR_TABLE from './indicator_table'\r\nimport LEGEND from './legend'\r\nimport MED_FIELD from './med_field'\r\n\r\nexport default (props)=>{\r\n    const {\r\n      data,\r\n      med_field,\r\n      app_text,\r\n      ind_per_reg,\r\n      update_ind_per_reg,\r\n      treatment_units,\r\n      selected_year,\r\n      colspan,\r\n      selected_row,\r\n      update_selected_row\r\n    }=props\r\n  const all_reg = ind_per_reg.map(reg=> reg.registry_name)\r\n  const [show_level_filter, update_show_level_filter] = useState(null)\r\n  const [med_field_filter, update_med_field_filter] = useState(all_reg)\r\n  const [clicked_med_field, update_clicked_med_field] = useState(\"all\")\r\n  \r\n  \r\n\r\n  return(\r\n    <>\r\n      <LEGEND \r\n        app_text= {app_text}\r\n        update_show_level_filter = {update_show_level_filter}\r\n        show_level_filter ={show_level_filter}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />\r\n      <div className = \"content_container\"> \r\n        <div className= \"med_field_container\">\r\n          <MED_FIELD \r\n            ind_per_reg = {ind_per_reg}\r\n            med_field = {med_field}\r\n            update_med_field_filter = {update_med_field_filter}\r\n            clicked_med_field = {clicked_med_field}\r\n            update_clicked_med_field = {update_clicked_med_field}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        </div>\r\n        <div className= \"main_table_container\"> \r\n          <INDICATOR_TABLE \r\n            data = {data}\r\n            treatment_unit_name =  {treatment_units}\r\n            treatment_year = {selected_year} \r\n            update_ind_per_reg = {update_ind_per_reg}\r\n            ind_per_reg = {ind_per_reg}\r\n            colspan = {colspan}\r\n            med_field_filter = {med_field_filter}\r\n            show_level_filter = {show_level_filter}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}","import  React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nfunction SELECT_MULTI(props) {\r\n  const {\r\n    opts = [],\r\n    select_className = \"pick_treatment_unit\",\r\n    placeholder = <div><i className = \"fas fa-search\"></i> Behandlingsenheter </div>,\r\n    update_tu,\r\n    treatment_unit\r\n  } = props\r\n  \r\n  let selection_options = opts//.map(opt =>{ return {value :opt , label: opt}; })\r\n\r\n  const customStyles = {\r\n    menu: (provided)=>({\r\n      ...provided,\r\n      //borderBottom: '1px dotted pink',\r\n      //width: \"50%\",\r\n      zIndex: 50\r\n    }),\r\n    option: (provided) => ({\r\n      ...provided,\r\n      //borderBottom: '1px dotted pink',\r\n      //color: 'black'\r\n    }),\r\n    control:(provided)=>({\r\n      ...provided,\r\n      //width: \"50%\"\r\n    })/*,\r\n   \r\n    singleValue: (provided) => {\r\n  \r\n      const transition = 'opacity 300ms';\r\n  \r\n      return { ...provided, transition };\r\n    }*/\r\n  }\r\n  const value_tu = treatment_unit.map(tu=>{return { value: tu, label: tu }})\r\n  const handle_input_change =(e)=>{\r\n    const tu = e !== null ? e.map(e=>e.value) : []\r\n    update_tu(tu)\r\n    \r\n  }\r\n \r\n  return(\r\n    <form >  \r\n      <Select \r\n        className = {select_className}\r\n        options = {selection_options}\r\n        placeholder = {placeholder}\r\n        closeMenuOnSelect = {false}\r\n        value = {value_tu}\r\n        isSearchable\r\n        isMulti = {true}\r\n        onChange={(e)=>handle_input_change(e)}\r\n        styles={customStyles}\r\n        menuIsOpen = {treatment_unit.length < 4 ? undefined :false}\r\n      /> \r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default SELECT_MULTI;","import  React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nfunction SELECT_SINGLE(props) {\r\n  const {\r\n    opts = [],\r\n    select_className = \"pick_year\",\r\n    update_year\r\n  } = props\r\n  \r\n  let selection_options = opts.map(opt =>{ return {value :opt , label: opt}; })\r\n  const customStyles = {\r\n    menu: (provided)=>({\r\n      ...provided,\r\n      //borderBottom: '1px dotted pink',\r\n      //width: \"50%\",\r\n      zIndex: 50\r\n    }),\r\n    option: (provided) => ({\r\n      ...provided,\r\n      //borderBottom: '1px dotted pink',\r\n      //color: 'black'\r\n    }),\r\n    control:(provided)=>({\r\n      ...provided,\r\n      //width: \"50%\"\r\n    })/*,\r\n   \r\n    singleValue: (provided) => {\r\n  \r\n      const transition = 'opacity 300ms';\r\n  \r\n      return { ...provided, transition };\r\n    }*/\r\n  }\r\n\r\n  const handle_input_change =(e)=>{\r\n    \r\n    \r\n    update_year(e.value)\r\n\r\n\r\n  }\r\n\r\n\r\n  return(\r\n    <form >  \r\n      <Select \r\n        className = {select_className}\r\n        onChange={(e)=>handle_input_change(e)}\r\n        options = {selection_options}\r\n        defaultValue = {selection_options[0]}\r\n        isSearchable\r\n        styles={customStyles}\r\n      /> \r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default SELECT_SINGLE;","import React, { useState } from 'react'\r\n\r\nimport MAIN from './components/main_component';\r\nimport SELECT_MULTI from './components/select_multi'\r\nimport SELECT_SINGLE from './components/select_single'\r\n\r\nimport config from './app_config'\r\n\r\nimport { filter_year_unit} from './data/filter_year_unit'\r\n\r\nconst {med_field, app_text, data_config  }= config\r\n\r\n\r\n\r\nfunction APP(props){\r\n  const {\r\n    data \r\n  } = props\r\n  const {\r\n    indicator_hf, indicator_rhf , indicator_hosp, indicator_nation, description\r\n  } = data\r\n\r\n  const [treatment_units, update_treatment_units] = useState([])\r\n  const [selected_year, update_selected_year] = useState(2019)\r\n  const [selected_row, update_selected_row] = useState(null)\r\n  \r\n  \r\n  const opts_hosp = [...new Set ( indicator_hosp.map(d=>d.unit_name))].sort().map(opt =>{ return {value :opt , label: opt}; })\r\n  const opts_hf = [...new Set ( indicator_hf.map(d=>d.unit_name))].sort().map(opt =>{ return {value :opt , label: opt}; })\r\n  const opts_rhf = [...new Set ( indicator_rhf.map(d=>d.unit_name))].sort().map(opt =>{ return {value :opt , label: opt}; })\r\n  const opts_tu = [{label: \"RHF\", options: opts_rhf},{label: \"HF\", options: opts_hf},{label:\"Sykehus\", options:opts_hosp} ]\r\n  let opts_year = [2019,2018,2017,2016]\r\n\r\n  const input_data = {\r\n    selected_unit: treatment_units,\r\n    selected_year: selected_year\r\n  }\r\n\r\n  const agg_data = {};\r\n  const hospital = filter_year_unit(indicator_hosp, input_data)\r\n  const hf = filter_year_unit(indicator_hf, input_data)\r\n  const rhf = filter_year_unit(indicator_rhf, input_data)\r\n  const nation = filter_year_unit(\r\n    indicator_nation,\r\n     {selected_unit: \"Nasjonalt\", selected_year: selected_year}\r\n  )\r\n \r\n  const tu_name_hospital = [...new Set ( \r\n      hospital.filtered_by_year.map(d=>d[data_config.column.treatment_unit])\r\n  )].sort()\r\n  const tu_name_hf = [...new Set ( \r\n    hf.filtered_by_year.map(d=>d[data_config.column.treatment_unit])\r\n  )].sort()\r\n  const tu_name_rhf = [...new Set ( \r\n    rhf.filtered_by_year.map(d=>d[data_config.column.treatment_unit])\r\n  )].sort()\r\n  const tu_name = tu_name_hospital.concat(tu_name_hf,tu_name_rhf)\r\n  const colspan= tu_name.length + 2;\r\n  agg_data.nation = nation\r\n  agg_data.filtered_by_unit = hospital.filtered_by_unit.concat(hf.filtered_by_unit, rhf.filtered_by_unit )\r\n  agg_data.filtered_by_year = hospital.filtered_by_year.concat(hf.filtered_by_year, rhf.filtered_by_year )\r\n\r\n  const unique_indicators = tu_name.length > 0 ? \r\n  [...new Set (agg_data.filtered_by_year.map(d=>d[data_config.column.indicator_id]))] :\r\n  [...new Set (agg_data.nation.filtered_by_year.map(d=>d[data_config.column.indicator_id]))]\r\n  const unique_register = [...new Set(med_field.flatMap(entry => entry.key))].map(\r\n    registry => { \r\n      const ind = description.filter(\r\n      description => description[data_config.column.registry_short_name] === registry && \r\n        unique_indicators.includes(description[data_config.column.id])\r\n      )\r\n      return {registry_name: registry, number_ind: ind.length, indicators: ind};\r\n    } \r\n  )\r\n  const ind_per_reg = unique_register\r\n  \r\n  \r\n  return(\r\n    <div className = \"app-container\">\r\n      <div className = \"selection-container\">\r\n        <div className = \"treatment-unit-selection\">\r\n          <SELECT_MULTI \r\n            opts ={opts_tu}\r\n            update_tu = {update_treatment_units}\r\n            treatment_unit={treatment_units}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        </div>\r\n        <div className =\"year-selection\">\r\n          <SELECT_SINGLE \r\n            opts ={opts_year}\r\n            update_year = {update_selected_year}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        </div>\r\n      </div>\r\n      <MAIN\r\n        update_selected_year = {update_selected_year}\r\n        update_treatment_units ={update_treatment_units}\r\n        ind_per_reg = {ind_per_reg}\r\n        treatment_units ={tu_name}\r\n        selected_year={selected_year}\r\n        med_field = {med_field}\r\n        app_text = {app_text}\r\n        colspan = {colspan}\r\n        data = {{agg_data, description}}\r\n        unique_indicators = {unique_indicators}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default APP;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nconst indicator_hosp = window.indicator_hosp\nconst indicator_hf = window.indicator_hf\nconst indicator_rhf= window.indicator_rhf\nconst indicator_nation = window.indicator_nat\nconst description = window.description\n\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App \n      data = {{indicator_hf, indicator_rhf , indicator_hosp, indicator_nation, description}}\n      />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}