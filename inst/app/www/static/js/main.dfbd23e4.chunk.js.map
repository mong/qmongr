{"version":3,"sources":["components/utils.js","components/indicator_table_header.js","components/indicator_value.js","components/indicator_description.js","components/tf_button.js","components/tf_ddmenu.js","components/tf_description.js","charts/page_colors.js","charts/theme_table_chart_bar.js","charts/axis_x_linear_labeled.js","app_config.js","charts/barchart.js","charts/axis_y_band.js","charts/theme_table_chart_line.js","charts/axis_y_linear_labeled.js","charts/line_chart.js","charts/color_legend_table_line_chart.js","charts/axis_x_time_labeled.js","charts/tr_utils.js","components/tf_figure.js","components/indicator_row.js","components/register_name.js","components/register.js","data/filter_year_unit.js","components/indicator_table_body.js","components/indicator_table.js","components/legend_btn.js","components/legend.js","components/med_field_row.js","components/med_field.js","components/main_component.js","components/select_multi.js","components/select_single.js","components/tu_list_header.js","components/tu_list_body.js","components/tu_list.js","App.js","index.js"],"names":["useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","observe","unobserve","TABLE_HEADER","props","col_nr","indicator_header","treatment_unit_name","national","thead_ref","useRef","dim","offset_top","update_offset_top","legend_elem","target","parentNode","previousSibling","top","offsetTop","offsetHeight","width_desc","width_tu","style_ind_desc","width","style_treatment_units","treatment_unit_th","map","tu","className","style","key","INDICATOR_VALUE","td_class","indicator_value","icon_class","share_of_totla","mid_text","total","INDICATOR_DESCRIPTION","title","short_description","high_achivment_text","TF_BUTTON","chart_type","update_chart_type","radio_buttons","class_name_inp","type","id","name","value","icon","label","class_name_label","rb","Fragment","checked","onChange","e","htmlFor","DD_MENU","show_level","update_show_level","zoom","update_zoom","svg_container","update_selected_row","dd_menu_status","set_dd_menu_status","level_states","zoom_states","handle_click","current_state","states","update_state_function","filter","state","level_visibility","replace","select","selectAll","mouse_leave_dd_cont_timeout","dd_list","click","class","dd","onClick","onMouseLeave","setTimeout","onMouseOver","clearTimeout","aria-hidden","LONG_DESCRIPTION","description_title","description_text","content_status","set_content_status","desc_click_handler","page_colors","high","mid","low","theme_table_chart_bar","x_axis_label_fill","colors","y_axis_label_fill","x_axis_label","y_axis_label","x_axis_label_font_family","y_axis_label_font_family","x_axis_tick_font_fill","y_axis_tick_font_fill","x_axis_tick_line_stroke","y_axis_tick_line_stroke","x_axis_domain_line_stroke","y_axis_domain_line_stroke","labeled_x_axis_linear","selection","x_scale","inner_width","inner_height","x_axis_label_offset","x_axis_label_font_size","x_axis_tick_font_size","x_axis_tick_number","x_axis_tick_size","transition","delay_val","duration_val","axis_label_format","x_axis","axisBottom","tickSize","ticks","tickFormat","format","x_axis_g","data","enter","append","attr","merge","delay","duration","call","x_axis_label_text","text","app_text","menus","unit","year","indicators","moderate","table","main_column","national_column","desired_level","tu_list","header_text","max_nr_tu","react_key","column","indicator_id","coverage_id","treatment_unit","treatment_unit_level","organisation_number","denominator","variable","achieved_level","registry_id","registry_short_name","registry_full_name","indicator_title","indicator_name","indicator_type","indicator_measurement_unit","indicator_short_description","indicator_long_description","level_green","level_yellow","level_direction","min_indicator_value","max_indicator_value","min_denominator","andel","db","full_name","median","rhf","hf","hospital","nation","mod","config","app_config","bar_chart","container","figure_data","levels","height","margin","delay_value","duration_value","margin_px","bottom","right","left","svg","g","y_scale","scaleBand","domain","d","range","paddingInner","paddingOuter","align","y_axis_tick_font_size","y_axis_tick_distance_from_axis","y_axis","axisLeft","y_axis_g","y_axis_band","Object","assign","theme_bar_chart","scaleLinear","level_colors","document","querySelector","innerHTML","level","end","start","bars","exit","remove","bandwidth","label_format","x_max_val","max","additional_margin","Math","ceil","invert","theme_table_chart_line","y_axis_tick_number","legend_text_fill","legend_text_font_family","labeled_y_axis_linear","y_axis_label_offset","y_axis_label_font_size","y_axis_tick_size","axisRight","y_axis_label_text","line_chart","scaleTime","min","Date","nested","Array","from","group","unit_name","line_color_scale","scaleOrdinal","legend_text_font_size","primary_legend_group","legend_container","legend","legend_item","on","event","this","nodes","length","clicked_legend","includes","selected_path_class","nr_clicked","color_legend_line_chart","theme_line_chart","position_left","x_axis_tick_values","Set","index","x_axis_tick_distance_from_axis","tickValues","timeFormat","labeled_x_axis_time","lines","line","x","y","path","y_min","y_max","y_min_val","y_max_val","floor","level_boundary","level_obj","TF_FIGURE","colspan","figure_class","svg_container_ref","agg_data","filtered_by_year","some","push","prototype","apply","filtered_by_unit","remove_tf","update_remove_tf","svg_props","clientWidth","description","nr_svg_children","childElementCount","i","removeChild","children","colSpan","textAlign","long_description","data_config","INDICATOR_ROW","med_field_class","show_level_filter","selected_row","indcator_title","indicator_drescription","tr_indicator_class","indicator_val","tr_unit","ind_per_unit","round","numerator","level_class","indicator_value_nation","denominator_nation","numerator_nation","icon_class_nation","tr_fig","REGISTER_NAME","register_name","tr_register_name_class","REGISTER","register_sname","med_field_filter","indicator_row","indicator","filter_year_unit","input_params","selected_unit","selected_year","med_field","TABLE_BODY","treatment_year","table_body","field","register","register_comp","register_data","desc","filter_register","INDICATOR_TABLE","LEGEND_BTN","legend_btn_class","update_show_level_filter","level_filter","toUpperCase","checked_class","update_state","LEGEND","legend_ref","legend_btns","keys","MED_FIELD_ROW","med_field_name","nr_indicators","update_med_field_filter","update_clicked_med_field","class_checked","clicked_med_field","MED_FIELD","ind_per_reg","med_field_ref","all_reg","ind","registry_name","med_field_row","nr_ind","reg","reduce","acc","cur","number_ind","tot_nr_ind","update_ind_per_reg","treatment_units","SELECT_MULTI","opts","select_className","placeholder","update_tu","selection_options","customStyles","menu","provided","zIndex","option","control","value_tu","options","closeMenuOnSelect","isSearchable","isMulti","handle_input_change","styles","menuIsOpen","undefined","SELECT_SINGLE","update_year","opt","defaultValue","TU_LIST_HEADER","TU_LIST_BODY","tu_names","update_treatment_units","handle_tu_list_click","alert","hf_hospital","element","style_hospital","transform","color","style_hf","hf_full","TU_LIST","tu_structure","tu_list_display","update_tu_list_display","style_tu_list","display","tu_str_elm","APP","indicator_hf","indicator_rhf","indicator_hosp","indicator_nation","update_selected_year","opts_hosp","sort","opts_hf","opts_tu","input_data","tu_name_hospital","tu_name_hf","tu_name_rhf","tu_name","concat","unique_indicators","flatMap","registry","a","b","every","tu_entry","acc_data","flat","hf_entry","window","indicator_nat","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.dfbd23e4.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useResizeObserver = (ref) => {\r\n  const [dimensions, setDimensions] = useState(null);\r\n  useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        setDimensions(entry);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n\r\nexport default useResizeObserver;","import React, {useEffect, useRef, useState}  from 'react';\r\nimport useResizeObserver from './utils'\r\n\r\n\r\nfunction TABLE_HEADER(props) {\r\n  const {\r\n    col_nr = 2,\r\n    indicator_header = \"Kvalitetsindikator\",\r\n    treatment_unit_name = [],\r\n    national = \"Nasjonalt\"\r\n  } = props\r\n\r\n  const thead_ref = useRef()\r\n  const dim = useResizeObserver(thead_ref)\r\n  const [offset_top, update_offset_top] = useState(\"\")\r\n  useEffect(()=>{\r\n    const legend_elem = dim ? dim.target.parentNode.parentNode.parentNode.parentNode.previousSibling: \"\"\r\n    const top = dim ? `${legend_elem.offsetTop + legend_elem.offsetHeight}px`: \"\"\r\n    update_offset_top(top)\r\n  },[dim, thead_ref])\r\n  \r\n  \r\n  const width_desc = col_nr === 2 ? 60 :  col_nr === 3 ? 50 : 40 \r\n  const width_tu = (100 - width_desc) /(col_nr - 1) \r\n  const style_ind_desc= {width: `${width_desc}%`,top: offset_top }\r\n  const style_treatment_units= {width: `${width_tu}%`, top: offset_top}\r\n  \r\n  let treatment_unit_th = treatment_unit_name.map(\r\n    tu => <th className=\"selected_unit\" style = {style_treatment_units}  key = {tu}> {tu}</th>\r\n  ) \r\n\r\n  return (\r\n    <thead >\r\n      <tr ref = {thead_ref} >\r\n        <th key = \"kvind_header\" className=\"quality_indicator\" style={style_ind_desc}>{indicator_header}</th>\r\n        {treatment_unit_th}\r\n        <th  className=\"nationally\" style = {style_treatment_units} key = \"nat_header\">{national}</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TABLE_HEADER;","import React from 'react'\r\n\r\n\r\nfunction INDICATOR_VALUE(props) {\r\n  const {\r\n    td_class = \"selected_unit\",\r\n    indicator_value = \"65%\", \r\n    icon_class = \"fa fa-circle-o\",\r\n    share_of_totla = 1500,\r\n    mid_text = \"av\",\r\n    total = 2000\r\n  } = props\r\n\r\n  return (\r\n    <td className = {td_class}>\r\n      <div className=\"level\">\r\n        <h4 >{`${indicator_value} `}<i className={icon_class}></i></h4>\r\n      </div>\r\n      <div className=\"summary\">{`${share_of_totla} ${mid_text} ${total}`}</div>\r\n    </td>\r\n    \r\n  );\r\n}\r\n\r\nexport default INDICATOR_VALUE;","import React from 'react'\r\n\r\n\r\nfunction INDICATOR_DESCRIPTION(props) {\r\n  const {\r\n    title = \"This is the title\",\r\n    short_description = \"This is the short description of the app\",\r\n    high_achivment_text = \"Høy måloppnåelse: > 80%\" \r\n  } = props\r\n \r\n  return (\r\n    <td className = \"quality_indicator\" >\r\n      <div className=\"quality_indicator_name\"><h1>{title}</h1></div>\r\n      <div className=\"qi_long_description\"><p>{short_description}</p></div>\r\n      <div className=\"desired_target_level\">\r\n        <h4>{high_achivment_text}</h4>\r\n      </div>\r\n    </td>\r\n    \r\n  );\r\n}\r\n\r\nexport default INDICATOR_DESCRIPTION;","import React from 'react'\r\n\r\nconst TF_BUTTON = (props) => {\r\n  const{ \r\n    chart_type,\r\n    update_chart_type\r\n  } = props\r\n \r\n   const radio_button_prop =[{\r\n    class_name_inp: 'figure_button figure_button_left',\r\n    type: 'Radio',\r\n    id: 'table_bar',\r\n    name: 'table_figure_button',\r\n    value: 'bar',\r\n    icon: \"fas fa-chart-bar\",\r\n    label: 'Søyle',\r\n    class_name_label: 'figure_button_label'\r\n  },\r\n  {\r\n    class_name_inp: 'figure_button figure_button_right',\r\n    type: 'Radio',\r\n    id: 'table_line',\r\n    name: 'table_figure_button',\r\n    value: 'line',\r\n    icon: 'fas fa-chart-line',\r\n    label: 'Linje',\r\n    class_name_label: 'figure_button_label'\r\n}]\r\n\r\n  const radio_buttons = radio_button_prop.map(rb => {\r\n    return(\r\n    <React.Fragment key = {rb.id}>\r\n      <input \r\n        className = {rb.class_name_inp} \r\n        type={rb.type}\r\n        id={rb.id}\r\n        name={rb.name}\r\n        value = {rb.value}\r\n        checked ={rb.value === chart_type} \r\n        onChange ={(e)=>  update_chart_type(e.target.value)}\r\n      >\r\n      </input>\r\n      <label className = {rb.class_name_label} htmlFor={rb.id} >\r\n        {rb.label} <i className ={rb.icon} ></i>\r\n      </label>\r\n    </React.Fragment>\r\n    )\r\n  })\r\n\r\n  return(\r\n    <div className = \"tr_figure_button\">\r\n      {radio_buttons }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TF_BUTTON;","import React, { useEffect, useState } from 'react'\r\nimport { select } from 'd3'\r\n\r\nconst DD_MENU = (props) => {\r\n  const {\r\n    show_level,\r\n    update_show_level, \r\n    zoom,\r\n    update_zoom, \r\n    svg_container,\r\n    update_selected_row \r\n  } = props\r\n\r\n  const[dd_menu_status, set_dd_menu_status] = useState(\"inactive\")\r\n  const level_states = [\"Vis målnivå\", \"Skjul målnivå\"]\r\n  const zoom_states = [\"Zoom inn\", \"Zoom ut\"]\r\n\r\n  const handle_click =  (current_state, states, update_state_function) => {\r\n    const new_state = states.filter(state => state !== current_state)\r\n    update_state_function(new_state[0])\r\n    \r\n  }\r\n\r\n  useEffect(()=>{\r\n    let level_visibility = show_level.replace(/\\s/g, '') === \"Skjulmålnivå\" ?  \"visible\" : \"hidden\"\r\n    let level = select(svg_container.current)\r\n    level.selectAll(\"svg .level\").style(\"visibility\", level_visibility)\r\n    }, [svg_container, show_level])\r\n\r\n  const dorpdown_entries =  [\r\n    {label : show_level, click : () => handle_click(show_level, level_states, update_show_level), class : \"dd-level\"},\r\n    {label : zoom, click : () => handle_click(zoom, zoom_states, update_zoom), class : \"dd-zoom\"},\r\n    {label : \"Lukk\", click : () => update_selected_row(\"\"), class : \"dd-close\"}\r\n  ]\r\n\r\n  let mouse_leave_dd_cont_timeout;\r\n  const menu_container_mouse_leave = () => {\r\n    mouse_leave_dd_cont_timeout = setTimeout(function(){\r\n      set_dd_menu_status(\"inactive\")\r\n    },\r\n    1000\r\n    )\r\n  }\r\n\r\n  const dd_list = dorpdown_entries.map(dd =>{\r\n    return(\r\n      <li key = {dd.class}>\r\n        <div className ={dd.class} onClick={dd.click}> {dd.label} </div>\r\n      </li>\r\n    );\r\n  })\r\n\r\n  return(\r\n    <div className = \"table_dd_menu_container\" \r\n      onMouseLeave ={ ()=>menu_container_mouse_leave() }\r\n      onMouseOver={ ()=>clearTimeout(mouse_leave_dd_cont_timeout) }\r\n    >\r\n      <button className=\"table_dd_button\" onClick ={()=> set_dd_menu_status(\"\")} >\r\n        <i className=\"fas fa-bars\" aria-hidden=\"true\"></i>\r\n      </button>\r\n      <div id=\"table_dd_container\" className = {`dropdown_container ${dd_menu_status}`}>\r\n        <ul className=\"dropdown_ul\">\r\n          {dd_list}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DD_MENU;","import React, { useState } from 'react'\r\n\r\nconst LONG_DESCRIPTION= (props) => {\r\n  const {\r\n    description_title = \"Om kvalitetsindikatoren\",\r\n    description_text = \"Denne kvalitetsindikatoren er definert som andel pasienter med akutt hoftebrudd som ble operert innen 24 timer etter bruddtidspunktet. \"\r\n  } = props\r\n  const [content_status, set_content_status] = useState(\"inactive\")\r\n  const desc_click_handler = (content_status, set_content_status) => {\r\n    const cur_status = content_status === \"\" ? \"inactive\" : \"\"\r\n    set_content_status(cur_status)\r\n\r\n  }\r\n  return(\r\n    <div className=\"description-container\" >\r\n      <div className = {`description_title_container`} onClick={() => desc_click_handler(content_status, set_content_status) }>\r\n        <h4>{description_title}</h4>\r\n        <i className = {`fa ${content_status ===\"\" ? \"fa-angle-up\" : \"fa-angle-down\"} `}></i>\r\n      </div>\r\n  <p className= {`description_content ${content_status}`}>{description_text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LONG_DESCRIPTION;","export const page_colors = {\r\n  chart_colors: [\r\n    '#4F9A94',\r\n    '#90CAF9',\r\n    '#B0BEC5',\r\n    '#FFE082',\r\n    '#2962FF',\r\n    '#CE93D8',\r\n    '#9C786C',\r\n    '#BCAAA4',\r\n    '#F8BBD0',\r\n    '#9FA8DA',\r\n    '#80DEEA',\r\n    '#A5D6A7',\r\n    '#E6EE9C',\r\n    '#FFAB91',\r\n    '#78909C'\r\n  ],\r\n  line_color: '#D2D3D4',\r\n  background_color: '#EEF6F7',\r\n  primary_text_color: '#2D3034',\r\n  secondary_text_color: '#828586',\r\n  primary_color: '#7EBEC7',\r\n  secondary_color: '#00263D',\r\n  traffic_light_colors: {\r\n    high: '#BFE389',\r\n    mid: '#F5A623',\r\n    low: '#F04157'\r\n  }\r\n}","import { page_colors as colors } from './page_colors.js'\r\n\r\nexport const theme_table_chart_bar = {\r\n  x_axis_label_fill: colors.secondary_text_color,\r\n  y_axis_label_fill: colors.secondary_text_color,\r\n  x_axis_label: '',\r\n  y_axis_label: '',\r\n  x_axis_label_font_family: 'arial',\r\n  y_axis_label_font_family: 'arial',\r\n  x_axis_tick_font_fill: colors.secondary_text_color,\r\n  y_axis_tick_font_fill: colors.primary_text_color,\r\n  x_axis_tick_line_stroke: colors.line_color,\r\n  y_axis_tick_line_stroke: 'none',\r\n  x_axis_domain_line_stroke: 'none',\r\n  y_axis_domain_line_stroke: 'none'\r\n}\r\n","import { axisBottom, format } from 'd3'\r\n/** @module src/axis_x_linear_labeled */\r\n\r\n/**\r\n * Creats linear x axis based on x_scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the x axis\r\n */\r\nexport const labeled_x_axis_linear = function (selection, props) {\r\n  const {\r\n    x_scale,\r\n    inner_width,\r\n    inner_height,\r\n    x_axis_label,\r\n    x_axis_label_fill,\r\n    x_axis_label_offset = inner_height / 6,\r\n    x_axis_label_font_size = 9 + inner_width * 0.04 + 'px',\r\n    x_axis_tick_font_size = 7 + inner_width * 0.02 + 'px',\r\n    x_axis_tick_font_fill,\r\n    x_axis_tick_line_stroke,\r\n    x_axis_tick_number = 6,\r\n    x_axis_tick_size = inner_height,\r\n    //x_axis_tick_offset = inner_height * 0.05,\r\n    x_axis_domain_line_stroke,\r\n    x_axis_label_font_family,\r\n    transition = false,\r\n    delay_val = 0,\r\n    duration_val = 0,\r\n    axis_label_format = ',.0%'\r\n  } = props\r\n\r\n  const x_axis = axisBottom(x_scale)\r\n    .tickSize(-x_axis_tick_size)\r\n    .ticks(x_axis_tick_number)\r\n    .tickFormat(format(axis_label_format))\r\n\r\n  let x_axis_g = selection.selectAll('.x-axis').data([null])\r\n  x_axis_g = x_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'x-axis')\r\n    .merge(x_axis_g)\r\n    .attr('transform', `translate(0,${inner_height})`)\r\n\r\n  if(transition){ \r\n     x_axis_g.transition().delay(delay_val).duration(duration_val).call(x_axis)\r\n  } else { \r\n    x_axis_g.call(x_axis)\r\n  }\r\n\r\n  x_axis_g\r\n    .selectAll('.tick text')\r\n    .style('font-size', x_axis_tick_font_size)\r\n    .attr('fill', x_axis_tick_font_fill)\r\n    //.attr('y', x_axis_tick_offset)\r\n\r\n  x_axis_g.selectAll('.tick line').attr('stroke', x_axis_tick_line_stroke)\r\n  x_axis_g.select('.domain').attr('stroke', x_axis_domain_line_stroke)\r\n\r\n  const x_axis_label_text = x_axis_g.selectAll('.axis-label').data([null])\r\n  x_axis_label_text\r\n    .enter()\r\n    .append('text')\r\n    .attr('class', 'axis-label')\r\n    .merge(x_axis_label_text)\r\n    .attr('fill', x_axis_label_fill)\r\n    .text(x_axis_label)\r\n    .attr('x', inner_width / 2)\r\n    .attr('y', x_axis_label_offset)\r\n    .style('font-size', x_axis_label_font_size)\r\n    .style('font-family', x_axis_label_font_family)\r\n}\r\n","const med_field = [\r\n  {  \r\n    react_key: \"hjerte\",\r\n    name: \"Hjerte- og karsykdommer\",\r\n    key: [\r\n      \"ablanor\",\r\n      \"noric\",\r\n      \"hjerteinfarkt\",\r\n      \"hjerneslag\",\r\n      \"hjertestans\",\r\n      \"hjertesvikt\",\r\n      \"hjertekirurgi\",\r\n      \"norkar\"\r\n    ]\r\n  },\r\n  {\r\n    react_key: \"kreft\",\r\n    name: \"Kreft\",\r\n    key: [\r\n      \"barnekreft\",\r\n      \"brystkreft\",\r\n      \"gynkreft\",\r\n      \"lungekreft\",\r\n      \"lymfoid\",\r\n      \"melanom\",\r\n      \"prostata\",\r\n      \"tarmkreft_colon\",\r\n      \"tarmkreft_rectum\"\r\n    ]\r\n  },\r\n  {\r\n    react_key: \"luft\",\r\n    name: \"Luftveier\",\r\n    key: [\"mek_vent\"]\r\n  },\r\n  {  \r\n    react_key: \"diabetes\",\r\n    name: \"Diabetes\",\r\n    key: [\"barnediabetes\",\"diabetes_voksne\"]\r\n  },\r\n  {  \r\n    react_key: \"nerve\",\r\n    name: \"Nervesystemet\",\r\n    key: [\"cp\",\"ms\",\"parkinson\",\"norkog\"]\r\n  },\r\n  {  \r\n    react_key: \"muskel\",\r\n    name: \"Muskel og skjelett\",\r\n    key: [\r\n      \"hofte_barn\",\r\n      \"hoftebrudd\",\r\n      \"korsband\",\r\n      \"ryggkir\",\r\n      \"leddprotese\",\r\n      \"nnrr\",\r\n      \"muskel\",\r\n      \"nkr_nakke\",\r\n      \"nkr_rygg\"\r\n    ]\r\n  },\r\n  {  \r\n    react_key: \"tarm\",\r\n    name: \"Mage og tarm\",\r\n    key: [\"gastronet\",\"fedmekir\",\"nra\",\"norgast\"]\r\n  },\r\n  {  \r\n    react_key: \"gyn\",\r\n    name: \"Gynekologi\",\r\n    key: [\"nger\",\"kvinl_inkontinens\"]\r\n  },\r\n  {  \r\n    react_key: \"nyre\",\r\n    name: \"Nyre\",\r\n    key: [\"nyre\"]\r\n  }, \r\n  {  \r\n    react_key: \"intensiv\",\r\n    name: \"Skade og intensiv\",\r\n    key: [\"traume\",\"intensiv\",\"nnk\"]\r\n  },\r\n  {  \r\n    react_key: \"rehab\",\r\n    name:\"Rehabilitering\",\r\n    key: [\"nnrr\",\"norscir\"]\r\n  },\r\n  {  \r\n    react_key: \"autoimmun\",\r\n    name: \"Autoimmune sykdommer\",\r\n    key: [\"roas\",\"norvas\"]\r\n  },\r\n  {  \r\n    react_key: \"revma\",\r\n    name: \"Revmatologi\",\r\n    key: [\"norartritt\",\"norvas\"]\r\n  },\r\n  {  \r\n    react_key: \"onh\", \r\n    name: \"Øre-nese-hals\",\r\n    key: [\"tonsille\"]\r\n  },\r\n  {  \r\n    react_key: \"hud\",\r\n    name: \"Hudsykdommer\",\r\n    key: [\"hisreg\"]\r\n  },\r\n  {  \r\n    react_key: \"psyk\",\r\n    name: \"Psykisk helse og rus\",\r\n    key: [\"kvarus\",\"norspis\"]\r\n  },\r\n  {  \r\n    react_key: \"barn\",\r\n    name: \"Barn\",\r\n    key: [\r\n      \"cp\",\r\n      \"hofte_barn\",\r\n      \"barnekreft\",\r\n      \"barnediabetes\",\r\n      \"ganespalt\",\r\n      \"nnk\"\r\n    ]\r\n  },\r\n  {  \r\n    react_key: \"annet\",\r\n    name: \"Andre\",\r\n    key:[\r\n      \"smerte\",\r\n      \"porfyri\"\r\n    ]\r\n  }  \r\n]\r\nexport const app_text = {\r\n  menus: {\r\n    unit: \"Velg behandlingssted\",\r\n    year: \"År:\"\r\n  },\r\n  indicators: {\r\n    high: {text: \"Høy måloppnåelse\", icon: \"fa fa-fas fa-circle\"},\r\n    moderate:{ text: \"Moderat måloppnåelse\", icon: \"fa fa-fas fa-adjust\"},\r\n    low: {text: \"Lav måloppnåelse\", icon: \"fa fa-circle-o\" }\r\n  },\r\n  table:{\r\n    main_column: \"Kvalitetsindikator\",\r\n    national_column: \"Nasjonalt\",\r\n    desired_level: \"Ønsket målnivå\",\r\n  },\r\n  tu_list:{\r\n    header_text: \"Velg behandlingsenheter\",\r\n    max_nr_tu: 5\r\n  }\r\n\r\n}\r\n\r\nconst data_config = {\r\n  column: {\r\n    indicator_id: \"ind_id\",\r\n    coverage_id: \"dg_id\",\r\n    year: \"year\",\r\n    treatment_unit: \"unit_name\",\r\n    treatment_unit_level: \"unit_level\",\r\n    organisation_number: \"orgnr\",\r\n    denominator: \"denominator\",\r\n    variable: \"var\",\r\n    achieved_level: \"level\",\r\n    desired_level: \"desired_level\",\r\n    registry_id: \"registry_id\",\r\n    registry_short_name: \"rname\",\r\n    registry_full_name: \"full_name\",\r\n    indicator_title: \"title\",\r\n    indicator_name: \"name\",\r\n    indicator_type: \"type\",\r\n    indicator_measurement_unit: \"measure_unit\",\r\n    indicator_short_description: \"short_description\",\r\n    indicator_long_description: \"long_description\",\r\n    level_green: 'level_green',\r\n    level_yellow: 'level_yellow',\r\n    level_direction: 'level_direction',\r\n    min_indicator_value: 'min_value',\r\n    max_indicator_value: 'max_value',\r\n    min_denominator: 'min_denominator',\r\n    id: 'id'\r\n  },\r\n  indicator_type: {\r\n    andel: {\r\n      db: 'andel',\r\n      full_name: 'Andel'\r\n    },\r\n    median: {\r\n      db: 'median',\r\n      full_name: 'Median'\r\n    }\r\n  },\r\n  treatment_unit_level: {\r\n    rhf: \"rhf\",\r\n    hf: \"hf\",\r\n    hospital: \"hospital\",\r\n    nation: \"nation\"\r\n  },\r\n  achieved_level: {\r\n    high: \"H\",\r\n    mod: \"M\",\r\n    low: \"L\"\r\n  },\r\n  level_direction: {\r\n    high: 1,\r\n    low: 0\r\n  },\r\n  desired_level: {\r\n    high: \"Høyt\",\r\n    low: \"Lavt\"\r\n  }\r\n}\r\n\r\nexport default { med_field, app_text, data_config }","import { select, scaleBand, scaleLinear, max } from 'd3'\r\n\r\n\r\nimport { theme_table_chart_bar as theme_bar_chart } from './theme_table_chart_bar.js'\r\nimport { labeled_x_axis_linear } from './axis_x_linear_labeled.js'\r\nimport { y_axis_band } from './axis_y_band.js'\r\nimport { page_colors } from './page_colors.js'\r\nimport  app_config  from '../app_config'\r\nconst config = app_config.data_config\r\n\r\n// the barchart\r\nexport const bar_chart = function (container, props, figure_data, levels) {\r\n  const { width, height, margin, zoom, delay_value = 1000, duration_value = 1000} = props\r\n  const margin_px = {\r\n    top: height * margin.top,\r\n    bottom: height * margin.bottom,\r\n    right: width * margin.right,\r\n    left: width * margin.left\r\n  }\r\n  container = select(container)\r\n  const inner_width = width - margin_px.left - margin_px.right\r\n  const inner_height = height - margin_px.top - margin_px.bottom\r\n \r\n  let svg = container.selectAll('svg').data([null])\r\n  svg = svg\r\n    .enter()\r\n    .append('svg')\r\n    .merge(svg)\r\n    .attr('width', width - 20)\r\n    .attr('height', height)\r\n    .style('background-color', '#EEF6F7')\r\n    .attr('class', 'table_chart')\r\n\r\n  let g = svg.selectAll('.grouped_element').data([null])\r\n  g = g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'grouped_element')\r\n    .merge(g)\r\n    .attr(\r\n      'transform',\r\n      'translate(' + margin_px.left + ' ,' + margin_px.top + ')'\r\n    )\r\n  const y_scale = scaleBand()\r\n    .domain(figure_data.map((d) => d[config.column.treatment_unit]))\r\n    .range([0, inner_height])\r\n    .paddingInner(0.5)\r\n    .paddingOuter(0.5)\r\n    .align(0.5)\r\n\r\n  y_axis_band(\r\n    g,\r\n    Object.assign({}, theme_bar_chart, {\r\n      y_scale,\r\n      inner_width,\r\n      inner_height,\r\n      margin_px\r\n    })\r\n  )\r\n  let x_scale = scaleLinear().domain([0, 1]).range([0, inner_width])\r\n\r\n  labeled_x_axis_linear(\r\n    g,\r\n    Object.assign({}, theme_bar_chart, {\r\n      x_scale,\r\n      inner_width,\r\n      inner_height, \r\n      transition: false,\r\n    })\r\n  )\r\n \r\n  \r\n  const level_colors = page_colors.traffic_light_colors\r\n  \r\n  let show_level = document.querySelector('.dropdown_ul .dd-level').innerHTML\r\n  let level_visibility = show_level.replace(/\\s/g, '') === \"Skjulmålnivå\" ?  \"visible\" : \"hidden\"\r\n  \r\n  let level = g.selectAll(\"rect.level\")\r\n  level = level\r\n    .data(levels)\r\n    .enter().append(\"rect\")\r\n    .merge(level)\r\n      .attr(\"class\", \"level\")\r\n      .attr('y', 0)\r\n      .attr('x', d => x_scale(d.end))\r\n      .attr('width',d => x_scale(d.start - d.end))\r\n      .attr(\"height\", inner_height)\r\n      .attr('fill', d => level_colors[d.level])\r\n      .style(\"opacity\",\"0.2\")\r\n      .style(\"visibility\", level_visibility)\r\n   \r\n\r\n  let bars = g.selectAll('rect.bars').data(figure_data, d => d[config.column.treatment_unit])\r\n  \r\n  bars.exit().transition().style('opacity', 0).remove()\r\n  \r\n  bars = bars\r\n    .enter()\r\n    .append('rect')\r\n      .attr(\"class\", \"bars\")\r\n    .merge(bars)\r\n      .attr('fill', (d) => {\r\n        let fill_color;\r\n        if ( d[config.column.treatment_unit] === 'Nasjonalt' ) {\r\n          fill_color = '#00263D'\r\n        } else {\r\n          fill_color = '#7EBEC7'\r\n        }\r\n        return fill_color\r\n      })\r\n      .attr('x', 0) \r\n      .attr('y', (d) => y_scale(d[config.column.treatment_unit]))\r\n      .attr('height', y_scale.bandwidth)\r\n      .transition()\r\n      .duration(delay_value)\r\n      .attr('width', (d) => x_scale(d[config.column.variable]))\r\n \r\n  \r\n  if (zoom.replace(/\\s/g, '') === 'Zoomut' ) {\r\n      let x_max_val =  max(figure_data, (d) => d[config.column.variable] )\r\n      let additional_margin = (0.01 + x_max_val) * 0.2  \r\n      x_max_val = Math.ceil((x_max_val + additional_margin)*100)/100\r\n\r\n      x_scale = scaleLinear()\r\n      .domain([\r\n        0,\r\n        x_max_val  > 1 ? 1 : x_max_val \r\n      ])\r\n      .range([0, inner_width])\r\n      \r\n      bars \r\n        .merge(bars)\r\n          .transition()\r\n          .delay(0)\r\n          .duration(duration_value)\r\n          .attr('width', (d) => x_scale(d[config.column.variable]))\r\n  \r\n    level\r\n      .data(levels)\r\n      .merge(level)\r\n        .transition()\r\n        .delay(delay_value)\r\n        .duration(duration_value)\r\n        .attr('x', d => {\r\n          let end ;\r\n          if ( x_scale(d.end) > inner_width) {\r\n            end = x_scale.invert(inner_width)\r\n          } else if(x_scale(d.end) < 0){\r\n            end = x_scale.invert(0)\r\n          } else {\r\n            end = d.end\r\n          }\r\n          return x_scale(end)\r\n        })\r\n        .attr('width', d => {\r\n          let end ;\r\n          let start ;        \r\n          if ( x_scale(d.end) > inner_width) {\r\n            end = x_scale.invert(inner_width)\r\n          } else if(x_scale(d.end) < 0){\r\n            end = x_scale.invert(0)\r\n          } else {\r\n            end = d.end\r\n          }\r\n          \r\n          if (x_scale(d.start) <= inner_width && x_scale(d.start) >= 0){\r\n            start = d.start\r\n          } else if (x_scale(d.start) > inner_width) {\r\n            start = x_scale.invert(inner_width) \r\n          } else if (x_scale(d.start) < 0){\r\n            start = x_scale.invert(0) \r\n          }\r\n          return x_scale(start) - x_scale(end) \r\n        })\r\n    \r\n    let label_format;\r\n    label_format = x_max_val < 0.05 ?  ',.1%': ',.0%'  \r\n\r\n    labeled_x_axis_linear(\r\n      g,\r\n      Object.assign({}, theme_bar_chart, {\r\n        x_scale,\r\n        inner_width,\r\n        inner_height,\r\n        transition: true,\r\n        delay_val: delay_value,\r\n        duration_val: duration_value,\r\n        axis_label_format: label_format\r\n      })\r\n    )\r\n  }\r\n \r\n}","import { axisLeft } from 'd3'\r\n/** @module src/axis_y_band */\r\n\r\n/**\r\n * Creats y axis for a bar chart based on band scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the y axis\r\n */\r\n\r\nexport const y_axis_band = function (selection, props) {\r\n  const {\r\n    y_scale,\r\n    inner_width,\r\n    inner_height,\r\n    y_axis_label_font_family = 'arial',\r\n    y_axis_tick_font_size = 3 + inner_height * 0.03 + 'px',\r\n    y_axis_tick_distance_from_axis = inner_width * 0.03,\r\n    y_axis_tick_font_fill,\r\n    y_axis_tick_line_stroke,\r\n    y_axis_domain_line_stroke\r\n  } = props\r\n\r\n  const y_axis = axisLeft(y_scale)\r\n\r\n  let y_axis_g = selection.selectAll('.y-axis').data([null])\r\n  y_axis_g = y_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'y-axis')\r\n    .merge(y_axis_g)\r\n\r\n  y_axis_g.call(y_axis).attr('text-anchor', 'end')\r\n  y_axis_g\r\n    .selectAll('.tick text')\r\n    .attr('x', -y_axis_tick_distance_from_axis)\r\n    .style('font-size', y_axis_tick_font_size)\r\n    .style('font-family', y_axis_label_font_family)\r\n    .attr('fill', y_axis_tick_font_fill)\r\n  y_axis_g.selectAll('.tick line').attr('stroke', y_axis_tick_line_stroke)\r\n  y_axis_g.select('.domain').attr('stroke', y_axis_domain_line_stroke)\r\n}\r\n","import { page_colors as colors } from './page_colors.js'\r\n\r\nexport const theme_table_chart_line = {\r\n  x_axis_label_fill: colors.primary_text_color,\r\n  y_axis_label_fill: colors.primary_text_color,\r\n  x_axis_label: '',\r\n  y_axis_label: 'Andel',\r\n  x_axis_label_font_family: 'arial, Helvetica Neue',\r\n  y_axis_label_font_family: 'arial, Helvetica Neue',\r\n  x_axis_tick_font_fill: colors.secondary_text_color,\r\n  y_axis_tick_font_fill: colors.secondary_text_color,\r\n  y_axis_tick_number: 6,\r\n  x_axis_tick_line_stroke: 'none',\r\n  y_axis_tick_line_stroke: colors.line_color,\r\n  x_axis_domain_line_stroke: 'none',\r\n  y_axis_domain_line_stroke: 'none',\r\n  legend_text_fill: colors.primary_text_color,\r\n  legend_text_font_family: 'arial, Helvetica Neue'\r\n}\r\n","import { axisRight, format } from 'd3'\r\n/** @module src/axis_y_linear_labeled */\r\n\r\n/**\r\n * Creats linear y axis based on y_scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the y axis\r\n */\r\n\r\nexport const labeled_y_axis_linear = function (selection, props) {\r\n  const {\r\n    y_scale,\r\n    inner_width,\r\n    inner_height,\r\n    y_axis_label = 'Y axis',\r\n    y_axis_label_fill = 'black',\r\n    y_axis_label_offset = inner_width * 1.15,\r\n    y_axis_label_font_size = 7 + inner_width * 0.02 + 'px',\r\n    y_axis_label_font_family = 'arial',\r\n    y_axis_tick_font_size = 8 + inner_height * 0.02 + 'px',\r\n    y_axis_tick_number,\r\n    y_axis_tick_font_fill,\r\n    y_axis_tick_line_stroke,\r\n    y_axis_tick_size = inner_width,\r\n    y_axis_domain_line_stroke,\r\n    transition = false,\r\n    delay_val = 0,\r\n    duration_val = 0,\r\n    axis_label_format = ',.0%'\r\n  } = props\r\n\r\n  const y_axis = axisRight(y_scale)\r\n    .ticks(y_axis_tick_number)\r\n    .tickSize(y_axis_tick_size)\r\n    .tickFormat(format(axis_label_format))\r\n  let y_axis_g = selection.selectAll('.y-axis').data([null])\r\n  y_axis_g = y_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'y-axis')\r\n    .merge(y_axis_g)\r\n\r\n  // prettier-ignore\r\n  \r\n  transition ? y_axis_g.transition().delay(delay_val).duration(duration_val).call(y_axis) : y_axis_g.call(y_axis)\r\n\r\n  y_axis_g\r\n    .selectAll('.tick text')\r\n    .style('font-size', y_axis_tick_font_size)\r\n    .attr('fill', y_axis_tick_font_fill)\r\n\r\n  y_axis_g.selectAll('.tick line').attr('stroke', y_axis_tick_line_stroke)\r\n  y_axis_g.select('.domain').attr('stroke', y_axis_domain_line_stroke)\r\n\r\n  const y_axis_label_text = y_axis_g.selectAll('.axis-label').data([null])\r\n  y_axis_label_text\r\n    .enter()\r\n    .append('text')\r\n    .attr('class', 'axis-label')\r\n    .merge(y_axis_label_text)\r\n    .attr('fill', y_axis_label_fill)\r\n    .text(y_axis_label)\r\n    .attr('transform', 'rotate(-90)')\r\n    .attr('x', -inner_height / 1.5)\r\n    .attr('y', y_axis_label_offset)\r\n    .style('font-size', y_axis_label_font_size)\r\n    .style('font-family', y_axis_label_font_family)\r\n}\r\n","import {\r\n  select,\r\n  scaleTime,\r\n  scaleOrdinal,\r\n  scaleLinear,\r\n  group,\r\n  line,\r\n  min,\r\n  max\r\n} from 'd3'\r\n\r\nimport { theme_table_chart_line as theme_line_chart } from './theme_table_chart_line'\r\nimport { page_colors as colors } from './page_colors'\r\nimport { color_legend_line_chart } from './color_legend_table_line_chart'\r\nimport { labeled_y_axis_linear } from './axis_y_linear_labeled'\r\nimport { labeled_x_axis_time } from './axis_x_time_labeled'\r\nimport { page_colors } from './page_colors.js'\r\nimport  app_config  from '../app_config'\r\nconst config = app_config.data_config\r\n\r\n// line chart\r\nexport const line_chart = function (container, props, figure_data, levels) {\r\n  const { width, height, margin, zoom } = props\r\n  const margin_px = {\r\n    top: height * margin.top,\r\n    bottom: height * margin.bottom,\r\n    right: width * margin.right,\r\n    left: width * margin.left\r\n  }\r\n  const inner_width = width - margin_px.left - margin_px.right\r\n  const inner_height = height - margin_px.top - margin_px.bottom\r\n\r\n  container = select( container)\r\n\r\n  const x_scale = scaleTime()\r\n    .domain([\r\n      min(figure_data, (d) => {\r\n        return new Date(d[config.column.year] + '')\r\n      }),\r\n      max(figure_data, (d) => {\r\n        return new Date(d[config.column.year] + '')\r\n      })\r\n    ])\r\n    .range([0, inner_width])\r\n  let y_scale = scaleLinear().domain([0, 1]).range([inner_height, 0])\r\n\r\n  \r\n  const nested = Array.from(group(figure_data, d=>d.unit_name), ([key, value]) => ({key, value}) )\r\n    \r\n\r\n  const line_color_scale = scaleOrdinal()\r\n    .domain(nested.map((d) => d.key))\r\n    .range(colors.chart_colors)\r\n\r\n  color_legend_line_chart(\r\n    container,\r\n    Object.assign({}, theme_line_chart, {\r\n      line_color_scale,\r\n      inner_width,\r\n      inner_height,\r\n      margin,\r\n      position_left: margin_px.left\r\n    })\r\n  )\r\n\r\n  let svg = container.selectAll('svg').data([null])\r\n  svg = svg\r\n    .enter()\r\n    .append('svg')\r\n    .merge(svg)\r\n    .attr('width', width - 20)\r\n    .attr('height', height)\r\n    .style('background-color', colors.background_color)\r\n\r\n  let g = svg.selectAll('.grouped_element').data([null])\r\n  g = g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'grouped_element')\r\n    .merge(g)\r\n    .attr(\r\n      'transform',\r\n      'translate(' + margin_px.left + ' ,' + margin_px.top + ')'\r\n    )\r\n\r\n  labeled_y_axis_linear(\r\n    g,\r\n    Object.assign({}, theme_line_chart, {\r\n      y_scale,\r\n      inner_width,\r\n      inner_height\r\n    })\r\n  )\r\n\r\n  let x_axis_tick_values = [\r\n    ...new Set(\r\n      figure_data.map((d) => {\r\n        return d[config.column.year] + ''\r\n      })\r\n    )\r\n  ]\r\n  x_axis_tick_values = x_axis_tick_values.map((d) => {\r\n    return new Date(d)\r\n  })\r\n  if (x_axis_tick_values.length > 8) {\r\n    x_axis_tick_values =\r\n      x_axis_tick_values.length % 2 === 0\r\n        ? x_axis_tick_values.filter((data, index) => index % 2 !== 0)\r\n        : x_axis_tick_values.filter((data, index) => index % 2 === 0)\r\n  }\r\n\r\n  labeled_x_axis_time(\r\n    g,\r\n    Object.assign({}, theme_line_chart, {\r\n      x_scale,\r\n      inner_width,\r\n      inner_height,\r\n      x_axis_tick_values\r\n    })\r\n  )\r\n\r\n  const lines = line()\r\n    .x((d) => x_scale(new Date(d[config.column.year] + '')))\r\n    .y((d) => y_scale(d[config.column.variable]))\r\n\r\n\r\n  let show_level = document.querySelector('.dropdown_ul .dd-level').innerHTML\r\n  let level_visibility = show_level.replace(/\\s/g, '') === \"Skjulmålnivå\" ?  \"visible\" : \"hidden\"\r\n  const level_colors = page_colors.traffic_light_colors\r\n\r\n  let level = g.selectAll(\"rect.level\")\r\n  level = level\r\n    .data(levels)\r\n    .enter().append(\"rect\")\r\n    .merge(level)\r\n      .attr(\"class\", \"level\")\r\n      .attr('x', 0)\r\n      .attr('y', d => y_scale(d.start))\r\n      .attr('height',d => inner_height - y_scale((d.start - d.end)))\r\n      .attr(\"width\", inner_width)\r\n      .attr('fill', d => level_colors[d.level])\r\n      .style(\"opacity\",\"0.2\")\r\n      .style(\"visibility\", level_visibility)\r\n\r\n  \r\n  let path = g.selectAll('.table-line-chart')\r\n  .data(group(figure_data, d=> d[config.column.treatment_unit]))\r\n\r\n  path.exit().transition().style('opacity', 0).remove()\r\n    \r\n  path = path\r\n    .enter()\r\n    .append('path')\r\n    .merge(path)\r\n    .attr('class', (d) =>  `table-line-chart  ${d[0].replace(/\\s/g, '')}`)\r\n    .attr('d', (d) => lines(d[1]))\r\n    .attr('stroke', (d) => line_color_scale(d[0]))\r\n    .style('stroke-width', 3)\r\n    .style('stroke-linejoin', 'round')\r\n    .style('stroke-linecap', 'round')\r\n    .attr('fill', 'none')\r\n    .style('mix-blend-mode', 'multiply')\r\n  \r\n\r\n  \r\n  if (zoom.replace(/\\s/g, '') === 'Zoomut' ){\r\n    let y_min_val =  min(figure_data, (d) => d[config.column.variable]) \r\n    let y_max_val =  max(figure_data, (d) => d[config.column.variable])\r\n    let additional_margin = (y_max_val - y_min_val) * 0.2  \r\n    y_min_val = Math.floor( (y_min_val - additional_margin) * 100) / 100\r\n    y_max_val = Math.ceil((y_max_val + additional_margin) * 100) / 100\r\n    \r\n    let y_min;\r\n    let y_max;\r\n    \r\n    y_min_val  < 0 ? y_min = 0 : y_min = y_min_val\r\n    y_max_val  > 1 ? y_max = 1 : y_max =y_max_val\r\n\r\n    y_scale = scaleLinear()\r\n      .domain([\r\n      y_min,\r\n      y_max\r\n      ])\r\n      .range([inner_height, 0])\r\n    \r\n    let label_format =  y_max-y_min < 0.06 ? ',.1%': ',.0%'  \r\n    \r\n    path\r\n      .data(group(figure_data, d=> d[config.column.treatment_unit]))\r\n      .enter()\r\n      .append('path')\r\n      .merge(path)\r\n      .transition()\r\n      .delay(1000)\r\n      .duration(1000)\r\n      .attr('d', (d) => lines(d[1]))\r\n    \r\n    level\r\n      .data(levels)\r\n      .enter().append(\"rect\")\r\n      .merge(level)\r\n        .transition()\r\n        .delay(1000)\r\n        .duration(1000)\r\n        .attr('y', d => {\r\n          let start ;\r\n          if ( y_scale(d.start) > inner_height) {\r\n            start = y_scale.invert(inner_height)\r\n          } else if(y_scale(d.start) < 0){\r\n            start = y_scale.invert(0)\r\n          } else {\r\n            start = d.start\r\n          }\r\n          return y_scale(start)\r\n        })\r\n        .attr('height',d => {\r\n          let end ;\r\n          let start ;        \r\n          if ( y_scale(d.start) > inner_height) {\r\n            start = y_scale.invert(inner_height)\r\n          } else if(y_scale(d.start) < 0){\r\n            start = y_scale.invert(0)\r\n          } else {\r\n            start = d.start\r\n          }\r\n          \r\n          if (y_scale(d.end) <= inner_height && y_scale(d.end) >= 0){\r\n            end = d.end\r\n          } else if (y_scale(d.end) > inner_height) {\r\n            end = y_scale.invert(inner_height) \r\n          } else if (y_scale(d.end) < 0){\r\n            end = y_scale.invert(0) \r\n          }\r\n          return y_scale(end) - y_scale(start)\r\n        })\r\n    \r\n    labeled_y_axis_linear(\r\n      g,\r\n      Object.assign({}, theme_line_chart, {\r\n        y_scale,\r\n        inner_width,\r\n        inner_height,\r\n        transition: true,\r\n        delay_val: 1000,\r\n        duration_val: 1000,\r\n        axis_label_format: label_format\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { selectAll, select} from 'd3'\r\n\r\nexport const color_legend_line_chart = function (selection, props) {\r\n  const {\r\n    line_color_scale,\r\n    margin = { left: 0.1, right: 0.1 },\r\n    inner_width,\r\n    legend_text_fill,\r\n    legend_text_font_family,\r\n    legend_text_font_size = 7 + inner_width * 0.01\r\n  } = props\r\n\r\n  const primary_legend_group = selection\r\n    .selectAll('.line_chart_legend_table')\r\n    .data([null])\r\n  const legend_container = primary_legend_group\r\n    .enter()\r\n    .append('div')\r\n    .merge(primary_legend_group)\r\n    .attr('class', 'line_chart_legend_table')\r\n    .style('position', 'relative')\r\n    .style('top', '0')\r\n    .style('left', `${margin.left * 100}%`)\r\n    .style('width', `${(1 - margin.left - margin.right) * 100}%`)\r\n   \r\n\r\n  const legend_list = legend_container\r\n      .selectAll('ul')\r\n      .data([null])\r\n    .enter()\r\n      .append('ul')\r\n    .merge(legend_container.select(\"ul\"))\r\n      .style('display', 'flex')\r\n      .style('justify-content', 'flex-start')\r\n      .style('flex-wrap', 'wrap')\r\n\r\n  const legend = legend_list.selectAll('li')\r\n    .data(line_color_scale.domain(), d => d )\r\n    \r\n  const legend_item = legend\r\n    .enter()\r\n      .append(\"li\")\r\n    .merge(legend)\r\n    .style('margin', '5px')\r\n    .style('display', 'flex')\r\n    .attr('class', 'legend_item')\r\n    .text((d) => d)\r\n      .style('font-size', legend_text_font_size + 'px')\r\n      .style('font-family', legend_text_font_family)\r\n      .style('fill', legend_text_fill)\r\n      .style('padding', '5px')\r\n      .style('border-bottom', (d) => `3px solid ${line_color_scale(d)}`)\r\n      \r\n  legend\r\n    .exit().remove()\r\n  \r\n  \r\n  legend_item\r\n  .merge(legend)   \r\n    .on('mouseover', function (event,d) {\r\n      selectAll('svg path.table-line-chart:not(.clicked)')\r\n        .transition()\r\n        .duration(500)\r\n        .style('opacity', 0.2)\r\n      select(`svg path.${d.replace(/\\s/g, '')}`)\r\n        .transition()\r\n        .duration(500)\r\n        .style('opacity', 1)\r\n      select(this).style('cursor', 'pointer')\r\n    })\r\n    .on('mouseout', function (event,d) {\r\n      var nr_clicked = select('.tr_figure').selectAll('li.clicked').nodes()\r\n        .length\r\n      if (nr_clicked < 1) {\r\n        selectAll('path.table-line-chart:not(.clicked)')\r\n          .transition()\r\n          .duration(500)\r\n          .style('opacity', 1)\r\n      } else {\r\n        selectAll('path.table-line-chart:not(.clicked)')\r\n          .transition()\r\n          .duration(500)\r\n          .style('opacity', 0.2)\r\n      }\r\n    })\r\n    .on('click', function (event, d) {\r\n      var clicked_legend = select(this).attr('class')\r\n      \r\n      if (clicked_legend.includes('clicked')) {\r\n        var nr_clicked = select('.line_chart_legend_table')\r\n          .selectAll('li.clicked')\r\n          .nodes().length\r\n        .selectAll('li.clicked')\r\n        var selected_path_class\r\n        if (nr_clicked === 1) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = selected_path_class.replace(' clicked', '')\r\n          clicked_legend = clicked_legend.replace(' clicked', '')\r\n          selectAll('svg path.table-line-chart')\r\n            .attr('class',d => `table-line-chart  ${d[0].replace(/\\s/g, '')}`)\r\n            .transition()\r\n            .duration(1000)\r\n            .style('opacity', 1)\r\n          selectAll('.tr_figure li.legend_item')\r\n            .attr('class', clicked_legend)\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 1)\r\n        } else if (nr_clicked > 1) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = selected_path_class.replace(' clicked', '')\r\n          clicked_legend = clicked_legend.replace(' clicked', '')\r\n          select(`svg path.${d.replace(/\\s/g, '')}`)\r\n            .attr('class', selected_path_class)\r\n            .transition()\r\n            .duration(1000)\r\n            .style('opacity', '0.2')\r\n          select(this)\r\n            .attr('class', clicked_legend)\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 0.4)\r\n        } else {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = selected_path_class.replace(' clicked', '')\r\n          clicked_legend = clicked_legend.replace(' clicked', '')\r\n          select('svg path.table-line-chart')\r\n            .attr('class', selected_path_class)\r\n            .transition()\r\n            .duration(1000)\r\n            .style('opacity', 1)\r\n          select('.tr_figure li.legend_item')\r\n            .attr('class', clicked_legend)\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 1)\r\n        }\r\n      } else {\r\n        nr_clicked = select('.tr_figure').selectAll('li.clicked').nodes()\r\n          .length\r\n        if (nr_clicked === 0) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = `${selected_path_class} clicked`\r\n          clicked_legend = `${clicked_legend} clicked`\r\n          select(`svg path.${d.replace(/\\s/g, '')}`)\r\n            .attr('class', selected_path_class)\r\n            .style('opacity', 1)\r\n          select(this).attr('class', clicked_legend).style('opacity', 1)\r\n          selectAll('svg path.table-line-chart:not(.clicked)')\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 0.2)\r\n          selectAll('.tr_figure li.legend_item:not(.clicked)')\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 0.4)\r\n        } else if (nr_clicked > 0) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = `${selected_path_class} clicked`\r\n          clicked_legend = `${clicked_legend} clicked`\r\n          select(`svg path.${d.replace(/\\s/g, '')}`)\r\n            .attr('class', selected_path_class)\r\n            .style('opacity', 1)\r\n          select(this).attr('class', clicked_legend).style('opacity', 1)\r\n        }\r\n      }\r\n    })\r\n\r\n}\r\n","import { axisBottom, timeFormat } from 'd3'\r\n/** @module src/axis_x_time_labeled */\r\n\r\n/**\r\n * Creats time formatted x axis based on x_scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the x axis\r\n */\r\n\r\nexport const labeled_x_axis_time = function (selection, props) {\r\n  const {\r\n    x_scale,\r\n    inner_width,\r\n    inner_height,\r\n    x_axis_tick_values,\r\n    x_axis_label = '',\r\n    x_axis_label_fill = '',\r\n    x_axis_label_offset = 0,\r\n    x_axis_label_font_size = 0,\r\n    x_axis_label_font_family = 'arial',\r\n    x_axis_tick_font_size = 10 + inner_width * 0.015 + 'px',\r\n    x_axis_tick_distance_from_axis = 5 + inner_height * 0.08,\r\n    x_axis_tick_font_fill,\r\n    x_axis_tick_line_stroke,\r\n    x_axis_domain_line_stroke\r\n  } = props\r\n\r\n  const x_axis = axisBottom(x_scale)\r\n    .tickValues(x_axis_tick_values)\r\n    .tickFormat(timeFormat('%Y'))\r\n  let x_axis_g = selection.selectAll('.x-axis').data([null])\r\n  x_axis_g = x_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'x-axis')\r\n    .merge(x_axis_g)\r\n    .attr('transform', `translate(0,${inner_height})`)\r\n  x_axis_g.call(x_axis)\r\n  x_axis_g\r\n    .selectAll('.tick text')\r\n    .style('font-size', x_axis_tick_font_size)\r\n    .attr('fill', x_axis_tick_font_fill)\r\n    .attr('y', x_axis_tick_distance_from_axis)\r\n  x_axis_g.selectAll('.tick line').attr('stroke', x_axis_tick_line_stroke)\r\n  x_axis_g.select('.domain').attr('stroke', x_axis_domain_line_stroke)\r\n\r\n  const x_axis_label_text = x_axis_g.selectAll('.axis-label').data([null])\r\n  x_axis_label_text\r\n    .enter()\r\n    .append('text')\r\n    .attr('class', 'axis-label')\r\n    .merge(x_axis_label_text)\r\n    .attr('fill', x_axis_label_fill)\r\n    .text(x_axis_label)\r\n    .attr('x', inner_width / 2)\r\n    .attr('y', x_axis_label_offset)\r\n    .style('font-size', x_axis_label_font_size + 'px')\r\n    .style('font-family', x_axis_label_font_family)\r\n}\r\n","import  app_config  from '../app_config'\r\n\r\nconst config = app_config.data_config\r\n\r\n\r\nexport const level_boundary = function (level_obj)  {\r\n  if (this[config.column.level_direction] === 0) {\r\n    if (level_obj.level === 'high' )  {\r\n      level_obj.start = this[config.column.level_green]\r\n      level_obj.end = 0\r\n    } else if (level_obj.level === 'mid') {\r\n      level_obj.start = this[config.column.level_yellow]\r\n      level_obj.end = this[config.column.level_green]\r\n    } else {\r\n      level_obj.start = 1\r\n      level_obj.end = this[config.column.level_yellow]\r\n    }\r\n  } else if (this[config.column.level_direction]=== 1 ){\r\n    if ( level_obj.level === 'high' )  {\r\n      level_obj.start = 1\r\n      level_obj.end = this[config.column.level_green]\r\n    } else if (level_obj.level === 'mid') { \r\n      level_obj.start = this[config.column.level_green]\r\n      level_obj.end = this[config.column.level_yellow]\r\n    } else {\r\n      level_obj.start = this[config.column.level_yellow]\r\n      level_obj.end = 0\r\n    }\r\n  } \r\n}","import React, {useEffect, useRef, useState} from 'react';\r\n\r\nimport TF_BUTTON from './tf_button'\r\nimport TF_DDMENU from './tf_ddmenu'\r\nimport TF_LONG_DESCRIPTION from './tf_description'\r\n\r\nimport {bar_chart} from '../charts/barchart'\r\nimport {line_chart} from '../charts/line_chart'\r\nimport { level_boundary } from '../charts/tr_utils'\r\n\r\nfunction TF_FIGURE (props) {\r\n  const {\r\n    colspan = 3,\r\n    data,\r\n    figure_class,\r\n    update_selected_row \r\n  } = props\r\n  \r\n  const svg_container_ref = useRef()\r\n  if(!data.agg_data.filtered_by_year.some(d => d.unit_name ===\"Nasjonalt\") ) {\r\n    data.agg_data.filtered_by_year.push(data.agg_data.nation.filtered_by_year[0])\r\n    Array.prototype.push.apply( data.agg_data.filtered_by_unit, data.agg_data.nation.filtered_by_unit)\r\n   \r\n  }\r\n  const [chart_type, update_chart_type] = useState(\"line\")\r\n  const [zoom, update_zoom]=useState(\"Zoom ut\")\r\n  const [show_level, update_show_level]=useState(\"Vis målnivå\")\r\n  const [remove_tf, update_remove_tf]=useState(null)\r\n\r\n  useEffect(() => {\r\n    const svg_props = {}\r\n    svg_props.width = svg_container_ref.current.clientWidth \r\n    svg_props.height =  svg_props.width * 0.5\r\n    svg_props.margin = {top:0.05, bottom: 0.1, right: 0.15, left: 0.2}\r\n    svg_props.zoom = zoom\r\n    const levels = [{level: 'high'}, {level: 'mid'}, {level: 'low'}]\r\n    levels.forEach(level_boundary, data.description[0])\r\n    if (chart_type === \"bar\" ) {\r\n      const nr_svg_children = svg_container_ref.current.childElementCount\r\n      for(let i = 0; i < nr_svg_children; i++){\r\n        svg_container_ref.current.removeChild(\r\n          svg_container_ref.current.children[0]\r\n        )\r\n      }\r\n      bar_chart(svg_container_ref.current, svg_props, data.agg_data.filtered_by_year, levels )\r\n    } else if (chart_type === \"line\") {\r\n      const nr_svg_children = svg_container_ref.current.childElementCount\r\n      for(let i = 0; i < nr_svg_children; i++){\r\n        svg_container_ref.current.removeChild(\r\n          svg_container_ref.current.children[0]\r\n        )\r\n      }\r\n      svg_props.margin = {top:0.05, bottom: 0.2, right: 0.15, left: 0.05}\r\n      line_chart(svg_container_ref.current, svg_props, data.agg_data.filtered_by_unit, levels)\r\n    }\r\n  }, [data, chart_type, zoom])\r\n  \r\n  return (\r\n      <tr className = {figure_class}><td colSpan = {colspan}>\r\n        <div className=\"tr_figure\" >\r\n          <div className = \"tr_buttons_container\">\r\n            <TF_DDMENU\r\n              show_level = {show_level}\r\n              update_show_level = {update_show_level}\r\n              zoom ={zoom}\r\n              update_zoom = {update_zoom}\r\n              remove_tf = {remove_tf}\r\n              update_remove_tf = {update_remove_tf}\r\n              svg_container = {svg_container_ref}\r\n              update_selected_row = {update_selected_row}\r\n            />\r\n            <TF_BUTTON\r\n              chart_type = {chart_type}\r\n              update_chart_type = {update_chart_type}\r\n            />\r\n          </div>\r\n          <div ref = {svg_container_ref} style = {{textAlign: \"center\"}}>\r\n            \r\n          </div>\r\n          <TF_LONG_DESCRIPTION description_text = {data.description[0].long_description}/>\r\n        </div>\r\n      </td></tr>\r\n  );\r\n}\r\n\r\nexport default TF_FIGURE;\r\n","import React from 'react'\r\n\r\nimport INDICATOR_VALUE from './indicator_value'\r\nimport INDICATOR_DESCRIPTION from './indicator_description'\r\nimport TR_FIGURE from './tf_figure'\r\n\r\nimport app_config from '../app_config'\r\n\r\nconst { data_config } = app_config\r\n\r\nfunction INDICATOR_ROW(props) {\r\n  const {\r\n    mid_text = \"av\",\r\n    data,\r\n    treatment_unit_name = [],\r\n    med_field_class = \"\",\r\n    show_level_filter = \"\",\r\n    selected_row, \r\n    update_selected_row ,\r\n    colspan \r\n  } = props\r\n \r\n  const description = data.description[0]\r\n  const indcator_title = description.title\r\n  const indicator_drescription = description.short_description\r\n  const level_direction = description[data_config.column.level_direction] === 0 ?\r\n    \"<\" :\">\"\r\n  const level_green = description[data_config.column.level_green]\r\n  const high_achivment_text = level_green !== null ?\r\n    `Høy måloppnåelse: ${level_direction} ${level_green*100}%` :  \"\"\r\n  const tr_indicator_class = `${description[data_config.column.id]} \r\n    ${description[data_config.column.registry_short_name]}`\r\n  \r\n  const indicator_val = treatment_unit_name.map((tr_unit, index) => {\r\n    const ind_per_unit =data.agg_data.filtered_by_year.filter(\r\n      data => data[data_config.column.treatment_unit] === tr_unit\r\n    ) \r\n    if (ind_per_unit.length < 1){\r\n      return <td\r\n        key = {`${description[data_config.column.id]}_${tr_unit}_${index}_su`}\r\n        className = \"selected_unit\">\r\n      </td>\r\n    } else {\r\n      \r\n      const indicator_value =\r\n        description[data_config.column.indicator_type] === data_config.indicator_type.andel.db ?\r\n        `${Math.round(ind_per_unit[0][data_config.column.variable] * 100)}%` :\r\n        `${ind_per_unit[0][data_config.column.variable]}`\r\n      const denominator = ind_per_unit[0][data_config.column.denominator]\r\n      const numerator = Math.round(ind_per_unit[0][data_config.column.variable] * denominator)\r\n\r\n      const icon_class = ind_per_unit[0][data_config.column.achieved_level] === \"H\" ?\r\n       \"fa fa-fas fa-circle\": \r\n        ind_per_unit[0][data_config.column.achieved_level] === \"M\" ? \r\n        \"fa fa-fas fa-adjust\":\r\n        ind_per_unit[0][data_config.column.achieved_level] === \"L\" ?\r\n         \"fa fa-circle-o\" :\r\n        \"\"\r\n      const level_class =  ind_per_unit[0][data_config.column.achieved_level] !== show_level_filter && show_level_filter !== null?\r\n        \"filtered_level\":\"\"\r\n     return <INDICATOR_VALUE\r\n      key = {`${description[data_config.column.id]}_${tr_unit}_${index}_su`}\r\n        td_class = {`selected_unit ${level_class}`}\r\n        indicator_value = {indicator_value} \r\n        icon_class = {icon_class}\r\n        share_of_totla = {numerator}\r\n        mid_text = {mid_text}\r\n        total = {denominator}\r\n      />;\r\n    }\r\n  })\r\n  \r\n  const indicator_value_nation =\r\n    description[data_config.column.indicator_type] === data_config.indicator_type.andel.db ?\r\n    `${Math.round(data.agg_data.nation.filtered_by_year[0][data_config.column.variable] * 100)}%` :\r\n    `${data.agg_data.nation.filtered_by_year[0][data_config.column.variable]}`\r\n  const denominator_nation = data.agg_data.nation.filtered_by_year[0][data_config.column.denominator]\r\n  const numerator_nation = Math.round(data.agg_data.nation.filtered_by_year[0][data_config.column.variable] * denominator_nation)\r\n\r\n      const icon_class_nation = data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] === \"H\" ?\r\n       \"fa fa-fas fa-circle\": \r\n        data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] === \"M\" ? \r\n        \"fa fa-fas fa-adjust\":\r\n        data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] === \"L\" ?\r\n         \"fa fa-circle-o\" :\r\n      \"\"\r\n  const level_class =  data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] !==\r\n    show_level_filter && show_level_filter !== null ?\r\n    \"filtered_level\":\"\"\r\n  \r\n  const tr_fig =  selected_row === description[data_config.column.id] ?\r\n   <TR_FIGURE\r\n    colspan = {colspan}\r\n    data ={data}\r\n    figure_class = {med_field_class}\r\n    update_selected_row = {update_selected_row}\r\n  /> : null\r\n\r\n  const tr_click_handler = ()=> {\r\n    if (selected_row === description[data_config.column.id] ){\r\n      update_selected_row(\"\")\r\n    }else{\r\n      update_selected_row(description[data_config.column.id])\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <tr\r\n        onClick = {()=>tr_click_handler()} \r\n        id= {`${tr_indicator_class}`} \r\n        className = {`${tr_indicator_class} ${med_field_class} indicator`}\r\n      >\r\n        <INDICATOR_DESCRIPTION\r\n          title = {indcator_title}\r\n          short_description = {indicator_drescription} \r\n          high_achivment_text = {high_achivment_text}\r\n        />\r\n        {indicator_val}\r\n        <INDICATOR_VALUE\r\n          key = {``}\r\n          td_class = {`nationally ${level_class}`}\r\n          indicator_value = {indicator_value_nation} \r\n          icon_class = {icon_class_nation}\r\n          share_of_totla = {numerator_nation}\r\n          mid_text = {mid_text}\r\n          total = {denominator_nation}\r\n        />\r\n      </tr>\r\n      {tr_fig}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default INDICATOR_ROW;","import React from 'react';\r\n\r\n\r\nfunction REGISTER_NAME(props) {\r\n  const {\r\n    register_name = \"Nasjonalt hoftebruddregister\",\r\n    colspan = 2,\r\n    tr_register_name_class = \"register-row\"\r\n  } = props\r\n  return (\r\n    <tr className = {tr_register_name_class} >\r\n      <td colSpan = {colspan}>\r\n        <h3 className = \"reg-name\">{register_name}</h3>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default REGISTER_NAME;\r\n","import React from 'react'\r\nimport INDICATOR_ROW from './indicator_row'\r\nimport REGISTER_NAME from './register_name'\r\nimport app_config from '../app_config'\r\n\r\nconst { data_config } = app_config\r\n\r\n\r\nfunction REGISTER(props) {\r\n  const {\r\n    register_sname = \"hjerte\",\r\n    colspan = 4,\r\n    tr_register_name_class = \"register-row\",\r\n    data,\r\n    treatment_unit_name,\r\n    med_field_filter,\r\n    show_level_filter,\r\n    selected_row,\r\n    update_selected_row,\r\n  } = props\r\n\r\n \r\n  const med_field_class = med_field_filter.includes(register_sname) ? '' : 'filter_med_field' \r\n  const register_name =  [...new Set ( \r\n    data.description.map(d=> d[data_config.column.registry_full_name]) \r\n  )]\r\n  const ind_id =  [...new Set ( \r\n    data.agg_data.filtered_by_year.map(d=> d[data_config.column.indicator_id]) \r\n  )]\r\n\r\n  const indicator_row = ind_id.map(\r\n    indicator => {\r\n      const agg_data = {}\r\n      const nation = {}\r\n      agg_data.filtered_by_year = data.agg_data.filtered_by_year.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      ) \r\n      agg_data.filtered_by_unit = data.agg_data.filtered_by_unit.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      ) \r\n      nation.filtered_by_year = data.agg_data.nation.filtered_by_year.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      )\r\n      const description = data.description.filter(\r\n        d => d[data_config.column.id] === indicator\r\n      )\r\n      nation.filtered_by_unit = data.agg_data.nation.filtered_by_unit.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      )\r\n      agg_data.nation = nation\r\n      return <INDICATOR_ROW\r\n        data = {{agg_data, description}}\r\n        key = {indicator} \r\n        treatment_unit_name = {treatment_unit_name }\r\n        med_field_class = {med_field_class}\r\n        show_level_filter = {show_level_filter}\r\n        colspan = {colspan}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />;\r\n    })\r\n   \r\n  return(\r\n    <>\r\n      <REGISTER_NAME\r\n        register_name = {register_name}\r\n        colspan = {colspan}\r\n        tr_register_name_class = {`${tr_register_name_class} ${register_sname} ${med_field_class}`}      \r\n      />\r\n      {indicator_row}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default REGISTER;","import app_config from '../app_config'\r\n\r\nconst { data_config } = app_config\r\n\r\n export const filter_year_unit = (data, input_params) => {\r\n  const {\r\n    selected_unit,\r\n    selected_year\r\n  } = input_params\r\n\r\n  const filtered_by_unit = selected_unit !== null ? \r\n    data.filter(\r\n      d => selected_unit.includes(d[data_config.column.treatment_unit])\r\n    ) : data\r\n  \r\n\r\n  const filtered_by_year = selected_year !== null ? \r\n  filtered_by_unit.filter(\r\n      d => d[data_config.column.year] === selected_year\r\n      ) : filtered_by_unit\r\n\r\n  return({\r\n    filtered_by_unit,\r\n    filtered_by_year   \r\n  });\r\n}\r\n\r\nexport const filter_register = (data, register )=> {\r\n  \r\n const description = data.description.filter(\r\n   desc => desc[app_config.data_config.column.registry_short_name] === register\r\n  )\r\n  const indicator_name = description.map(\r\n    desc => desc[app_config.data_config.column.id])\r\n  const agg_data = {}\r\n  agg_data.filtered_by_unit = data.agg_data.filtered_by_unit.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  agg_data.filtered_by_year = data.agg_data.filtered_by_year.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  const nation = {}\r\n  nation.filtered_by_unit = data.agg_data.nation.filtered_by_unit.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  nation.filtered_by_year = data.agg_data.nation.filtered_by_year.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  agg_data.nation = nation\r\n  return {agg_data, description};\r\n}\r\n\r\nexport const nest_tu_names = (tu_names) => {\r\n  tu_names.sort(function(a,b){\r\n    return a.hospital > b.hospital;\r\n  })\r\n  tu_names.sort(function(a,b){\r\n    return a.hf_full > b.hf_full;\r\n  })\r\n  tu_names.sort(function(a,b){\r\n    return a.rhf > b.rhf;\r\n  })\r\n  \r\n  const nested_tu_names = tu_names.reduce( (acc, cur) =>{\r\n    if(acc.length === 0 || acc.every(tu_entry => tu_entry.rhf !== cur.rhf)) {\r\n      const entry = {\r\n        rhf: cur.rhf,\r\n        hf: [{ \r\n          hf: cur.hf,\r\n          hf_full: cur.hf_full,\r\n          hospital: [cur.hospital]\r\n        }]\r\n      }\r\n      acc = [...acc , entry]\r\n    } else {\r\n      const hf_names = acc.filter(acc_data=> acc_data.rhf === cur.rhf)\r\n        .map(data => data.hf)\r\n        .map(data => data.map(d=>d.hf)).flat()\r\n  \r\n      if(!hf_names.includes(cur.hf)){\r\n        const hf_entry = { \r\n          hf: cur.hf,\r\n          hf_full: cur.hf_full,\r\n          hospital: [cur.hospital]\r\n        }\r\n        acc.filter(acc_data=> acc_data.rhf === cur.rhf)[0].hf.push(hf_entry) \r\n      } else {\r\n         acc.filter(acc_data=> acc_data.rhf === cur.rhf)[0].hf.filter(hf => hf.hf === cur.hf)[0].hospital.push(cur.hospital)\r\n      }\r\n    } \r\n    return(acc)\r\n  }, [] )\r\n \r\n  return nested_tu_names;\r\n}\r\n","import React from 'react';\r\n\r\nimport REGISTER from './register'\r\n\r\nimport app_config from '../app_config'\r\nimport { filter_register } from '../data/filter_year_unit'\r\n\r\nconst { med_field } = app_config\r\n\r\nfunction TABLE_BODY(props) {\r\n  const {\r\n    colspan = 4,\r\n    data,\r\n    treatment_unit_name,\r\n    treatment_year,\r\n    med_field_filter,\r\n    show_level_filter,\r\n    selected_row,\r\n    update_selected_row \r\n  } = props\r\n  \r\n  const added_register = [];\r\n //if no valid treatment unit loop through the national\r\n  if (treatment_unit_name.length < 1) {\r\n    data.agg_data.filtered_by_year = data.agg_data.nation.filtered_by_year\r\n    data.agg_data.filtered_by_unit = data.agg_data.nation.filtered_by_unit\r\n  }\r\n  //loop registry for registry following the seq laid out by the med field list\r\n  const table_body = med_field.map( function(field) {\r\n    \r\n    let register_block = field.key.map((register) =>{\r\n      var register_comp;\r\n      if(!this.includes(register)){\r\n        this.push(register)\r\n        const register_data = filter_register(\r\n          data,\r\n          register\r\n        )\r\n\r\n        if (register_data.agg_data.filtered_by_year.length > 0) {\r\n          register_comp = <REGISTER\r\n            key = {`${register}`}\r\n            register_sname = {register}\r\n            data = {register_data}\r\n            colspan = {colspan}\r\n            treatment_unit_name = {treatment_unit_name}\r\n            treatment_year = {treatment_year}\r\n            med_field_filter = {med_field_filter}\r\n            show_level_filter = {show_level_filter}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        }\r\n      } else { register_comp = null}\r\n    return register_comp\r\n    })\r\n    return register_block\r\n  },\r\n  added_register)\r\n \r\n  return (\r\n    <tbody>\r\n      {table_body}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default TABLE_BODY;","import React from 'react';\r\n\r\nimport TABLE_HEADER from './indicator_table_header'\r\nimport TABLE_BODY from './indicator_table_body'\r\n\r\nfunction INDICATOR_TABLE(props) {\r\n  const {\r\n    treatment_unit_name = [],\r\n    treatment_year = 2019,\r\n    data,\r\n    colspan,\r\n    med_field_filter, \r\n    show_level_filter,\r\n    selected_row, \r\n    update_selected_row\r\n  } = props\r\n\r\n  return (\r\n    <table>\r\n      <TABLE_HEADER col_nr = {colspan} treatment_unit_name = {treatment_unit_name}/>\r\n      <TABLE_BODY \r\n        colspan = {colspan}\r\n        data = {data}\r\n        treatment_unit_name = {treatment_unit_name} \r\n        treatment_year = {treatment_year}\r\n        med_field_filter = {med_field_filter}\r\n        show_level_filter = {show_level_filter}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default INDICATOR_TABLE;","import React from 'react';\r\n\r\nfunction LEGEND_BTN(props) {\r\n  const {\r\n    level= \"Høy måloppnåelse\",\r\n    icon_class = \"fa fa-fas fa-circle\",\r\n    legend_btn_class = \"high\",\r\n    update_show_level_filter,\r\n    show_level_filter \r\n  } = props\r\n\r\n  const level_filter = legend_btn_class[0].toUpperCase() \r\n  const checked_class = level_filter === show_level_filter ? \"checked\" : \"\"\r\n \r\n  const handle_level_filter = (current_state, update_state)=>{\r\n    if (current_state===update_state){\r\n      update_show_level_filter(null)\r\n    } else { \r\n      update_show_level_filter(update_state)\r\n    }\r\n  }\r\n  return (\r\n    <button\r\n      className = {`${legend_btn_class} ${checked_class}`}\r\n      onClick = {()=>handle_level_filter(show_level_filter, level_filter)}\r\n    >\r\n      <i className = {`${icon_class} legend-icon`}> </i>\r\n      <div className = \"legend-text\">{level}</div>\r\n    </button> \r\n  );\r\n}\r\n\r\nexport default LEGEND_BTN;","import React , { useRef, useEffect, useState }from 'react'\r\nimport LEGEND_BTN from './legend_btn'\r\nimport useResizeObserver from './utils'\r\n\r\nfunction LEGEND(props) {\r\n  const {\r\n    app_text= {indicators: {high: {text: \"Høy måloppnåelse\", icon: \"fa fa-fas fa-circle\" }}},\r\n    update_show_level_filter,\r\n    show_level_filter\r\n  } = props\r\n  const legend_ref = useRef()\r\n  const dim = useResizeObserver(legend_ref)\r\n  const [offset_top, update_offset_top] = useState(\"\")\r\n  useEffect(()=>{\r\n    const top = dim ? `${dim.target.previousSibling.offsetHeight}px` : \"\"\r\n    update_offset_top(top)\r\n  },[dim, legend_ref])\r\n\r\n  const legend_btns = Object.keys(app_text.indicators).map(\r\n    function(level){\r\n      return(\r\n        <LEGEND_BTN\r\n          update_show_level_filter = {update_show_level_filter}\r\n          show_level_filter = {show_level_filter}\r\n          key = {`${level}_legend_btn`} \r\n          icon_class={this[level].icon}\r\n          level = {this[level].text}\r\n          legend_btn_class = {level}\r\n        />\r\n      );\r\n    },\r\n  app_text.indicators)\r\n\r\n\r\n  const style = {top: offset_top}\r\n  \r\n  return (\r\n    <div \r\n      className = \"table_legend\"\r\n      ref = {legend_ref}\r\n      style= {style}\r\n    >\r\n      {legend_btns}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LEGEND;","import React  from 'react';\r\n\r\n\r\nfunction MED_FIELD_ROW(props) {\r\n  const {\r\n    med_field_name= \"Hjerte- og karsykdommer\",\r\n    nr_indicators = 10,\r\n    update_med_field_filter,\r\n    update_clicked_med_field,\r\n    clicked_med_field\r\n  } = props\r\n \r\n  const class_checked = clicked_med_field === med_field_name.react_key ? \"checked\" : \"\"\r\n  \r\n  const handle_med_field_click =()=>{\r\n    update_clicked_med_field(med_field_name.react_key)\r\n    update_med_field_filter(med_field_name.key)\r\n  }\r\n  return (\r\n  <li className = {`med_field ${class_checked} med_field_${med_field_name.react_key}`} >\r\n    <button className = \"med_field_text\" onClick = {()=> handle_med_field_click() } >\r\n      {med_field_name.name.toUpperCase()}\r\n      <div className=\"med_field_nrind\">{nr_indicators}</div>\r\n    </button>\r\n  </li>\r\n  );\r\n}\r\n\r\nexport default MED_FIELD_ROW;","import React , { useRef, useState, useEffect} from 'react';\r\nimport MED_FIELD_ROW from './med_field_row'\r\nimport useResizeObserver from './utils'\r\n\r\n\r\nfunction MED_FIELD(props) {\r\n  const {\r\n    med_field = [],\r\n    ind_per_reg,\r\n    update_med_field_filter,\r\n    clicked_med_field,\r\n    update_clicked_med_field,\r\n    \r\n  } = props\r\n  const med_field_ref = useRef()\r\n  const dim = useResizeObserver(med_field_ref)\r\n  const [offset_top, update_offset_top] = useState(\"\")\r\n  useEffect(()=>{\r\n    const top = dim ? `${dim.target.offsetTop}px` : \"\"\r\n    update_offset_top(top)\r\n  },[dim, med_field_ref])\r\n\r\n  const all_reg = ind_per_reg.map(ind => ind.registry_name)\r\n  const med_field_row = med_field.map(\r\n    med_field => {\r\n      const nr_ind = ind_per_reg.filter(\r\n        reg => med_field.key.includes(reg.registry_name)\r\n      ).reduce(\r\n      (acc,cur) =>{\r\n        return(acc+cur.number_ind)\r\n      },0)\r\n        \r\n     return (\r\n     <MED_FIELD_ROW \r\n      key = {med_field.react_key}\r\n      med_field_name = {med_field}\r\n      nr_indicators = {nr_ind}\r\n      update_med_field_filter = {update_med_field_filter}\r\n      clicked_med_field = {clicked_med_field}\r\n      update_clicked_med_field = {update_clicked_med_field}\r\n      />\r\n    );\r\n  })\r\n  \r\n  const tot_nr_ind = ind_per_reg.reduce(\r\n    (acc,cur) =>{\r\n      return(acc+cur.number_ind)\r\n    },0)\r\n  \r\n  const checked_class = \"all\" === clicked_med_field ? \"checked\" : \"\" \r\n          \r\n  const handle_med_field_click =()=>{\r\n    update_clicked_med_field(\"all\")\r\n    update_med_field_filter(all_reg)\r\n  }\r\n \r\n  const style = {top: offset_top}\r\n  return (\r\n  <ul ref={med_field_ref} style = {style} className = \"med_field_list\">\r\n    <li className= {`med_field_title ${checked_class}`} >\r\n      <button onClick = {()=>handle_med_field_click()}>\r\n        <h4 className = \"med_field_text\">ALLE INDIKATORER\r\n          <div className = \"med_field_nrind\">{tot_nr_ind}</div>  \r\n        </h4>\r\n      </button>\r\n    </li>\r\n    {med_field_row}\r\n  </ul>\r\n  );\r\n}\r\n\r\nexport default MED_FIELD;","import React, {useState} from 'react';\r\n\r\nimport INDICATOR_TABLE from './indicator_table'\r\nimport LEGEND from './legend'\r\nimport MED_FIELD from './med_field'\r\n\r\nexport default (props)=>{\r\n    const {\r\n      data,\r\n      med_field,\r\n      app_text,\r\n      ind_per_reg,\r\n      update_ind_per_reg,\r\n      treatment_units,\r\n      selected_year,\r\n      colspan,\r\n      selected_row,\r\n      update_selected_row\r\n    }=props\r\n  const all_reg = ind_per_reg.map(reg=> reg.registry_name)\r\n  const [show_level_filter, update_show_level_filter] = useState(null)\r\n  const [med_field_filter, update_med_field_filter] = useState(all_reg)\r\n  const [clicked_med_field, update_clicked_med_field] = useState(\"all\")\r\n\r\n  return(\r\n    <>\r\n      <LEGEND \r\n        app_text= {app_text}\r\n        update_show_level_filter = {update_show_level_filter}\r\n        show_level_filter ={show_level_filter}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />\r\n      <div className = \"content_container\"> \r\n        <div className= \"med_field_container\">\r\n          <MED_FIELD \r\n            ind_per_reg = {ind_per_reg}\r\n            med_field = {med_field}\r\n            update_med_field_filter = {update_med_field_filter}\r\n            clicked_med_field = {clicked_med_field}\r\n            update_clicked_med_field = {update_clicked_med_field}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        </div>\r\n        <div className= \"main_table_container\"> \r\n          <INDICATOR_TABLE \r\n            data = {data}\r\n            treatment_unit_name =  {treatment_units}\r\n            treatment_year = {selected_year} \r\n            update_ind_per_reg = {update_ind_per_reg}\r\n            ind_per_reg = {ind_per_reg}\r\n            colspan = {colspan}\r\n            med_field_filter = {med_field_filter}\r\n            show_level_filter = {show_level_filter}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}","import  React from 'react'\r\nimport Select from 'react-select'\r\n\r\nimport { app_text } from '../app_config' \r\n\r\n\r\nfunction SELECT_MULTI(props) {\r\n  const {\r\n    opts = [],\r\n    select_className = \"pick_treatment_unit\",\r\n    placeholder = <div><i className = \"fas fa-search\"></i> Behandlingsenheter </div>,\r\n    update_tu,\r\n    treatment_unit\r\n  } = props\r\n  \r\n  let selection_options = opts//.map(opt =>{ return {value :opt , label: opt}; })\r\n\r\n  const customStyles = {\r\n    menu: (provided)=>({\r\n      ...provided,\r\n      zIndex: 3\r\n    }),\r\n    option: (provided) => ({\r\n      ...provided,\r\n    }),\r\n    control:(provided)=>({\r\n      ...provided,\r\n    })/*,\r\n    singleValue: (provided) => {\r\n      const transition = 'opacity 300ms';\r\n      return { ...provided, transition };\r\n    }*/\r\n  }\r\n  const value_tu = treatment_unit.map(tu=>{return { value: tu, label: tu }})\r\n  const handle_input_change =(e)=>{\r\n    const tu = e !== null ? e.map(e=>e.value) : []\r\n    update_tu(tu)\r\n  }\r\n \r\n  return(\r\n    <form >  \r\n      <Select \r\n        className = {select_className}\r\n        options = {selection_options}\r\n        placeholder = {placeholder}\r\n        closeMenuOnSelect = {false}\r\n        value = {value_tu}\r\n        isSearchable\r\n        isMulti = {true}\r\n        onChange={(e)=>handle_input_change(e)}\r\n        styles={customStyles}\r\n        menuIsOpen = {treatment_unit.length < app_text.tu_list.max_nr_tu ? undefined :false}\r\n      /> \r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default SELECT_MULTI;","import  React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nfunction SELECT_SINGLE(props) {\r\n  const {\r\n    opts = [],\r\n    select_className = \"pick_year\",\r\n    update_year\r\n  } = props\r\n  \r\n  let selection_options = opts.map(opt =>{ return {value :opt , label: opt}; })\r\n  const customStyles = {\r\n    menu: (provided)=>({\r\n      ...provided,\r\n      zIndex: 3\r\n    }),\r\n    option: (provided) => ({\r\n      ...provided,\r\n    }),\r\n    control:(provided)=>({\r\n      ...provided,\r\n     \r\n    })/*,\r\n    singleValue: (provided) => {\r\n      const transition = 'opacity 300ms';\r\n      return { ...provided, transition };\r\n    }*/\r\n  }\r\n  const handle_input_change =(e)=>{ \r\n    update_year(e.value)\r\n  }\r\n\r\n  return(\r\n    <form >  \r\n      <Select \r\n        className = {select_className}\r\n        onChange={(e)=>handle_input_change(e)}\r\n        options = {selection_options}\r\n        defaultValue = {selection_options[0]}\r\n        isSearchable\r\n        styles={customStyles}\r\n      /> \r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default SELECT_SINGLE;","import React from 'react'\r\n\r\nimport { app_text } from '../app_config' \r\n\r\nconst TU_LIST_HEADER =(props)=>{\r\n  return(\r\n    <h2 className={`tu_list_header`} >\r\n      {`${app_text.tu_list.header_text} (maks ${app_text.tu_list.max_nr_tu})`}\r\n    </h2>\r\n  );\r\n}\r\n\r\nexport default TU_LIST_HEADER;","import React from 'react'\r\nimport { app_text  } from '../app_config' \r\n\r\nconst TU_LIST_BODY = (props) => {\r\n  const {\r\n    tu_names,\r\n    treatment_units,\r\n    update_treatment_units\r\n  } = props\r\n\r\n  const handle_tu_list_click = (selected_unit, treatment_units, update_treatment_units) => {\r\n\r\n    if (treatment_units.length < app_text.tu_list.max_nr_tu && !treatment_units.includes(selected_unit)){\r\n      update_treatment_units([...treatment_units, selected_unit])\r\n    }  else if (treatment_units.includes(selected_unit)){\r\n\r\n    update_treatment_units(treatment_units.filter(tu => tu !== selected_unit))\r\n    } else {\r\n      alert (`maks ${app_text.tu_list.max_nr_tu} behandlingsenheter!`)\r\n    }\r\n  }\r\n  const hf_hospital = tu_names.hf.map(element=>{\r\n    const hospital = element.hospital.map(hospital => {\r\n      const style_hospital =   treatment_units.includes(hospital)  ? {\r\n        transform: \"scale(1.05,1.1)\",\r\n        color: \"#08418e\"\r\n      } :{}\r\n\r\n      return(\r\n        <button\r\n          key = {`hospital_${hospital}`}\r\n          className = \"tu_list_hospital_btn\"\r\n          style = {style_hospital}\r\n          onClick={()=>handle_tu_list_click(hospital, treatment_units, update_treatment_units)}>\r\n          {hospital}\r\n        </button>\r\n      );\r\n    })\r\n    const style_hf =   treatment_units.includes(element.hf)  ? {\r\n      transform: \"scale(1.05,1.1)\",\r\n      color: \"#08418e\"\r\n    } :{}\r\n    return(\r\n      <div key = {`hf_hospital_${element.hf}`}  className = {`tu_list_hf`}>\r\n        <div className = \"tu_list_hf_btn_constainer\"> \r\n          <button\r\n            style={style_hf}\r\n            className = \"tu_list_hf_btn\"\r\n            onClick={()=>handle_tu_list_click(element.hf, treatment_units, update_treatment_units)}>\r\n              {element.hf_full}\r\n            </button> \r\n        </div>\r\n        <div className = \"tu_list_hospital\">{ hospital}</div>\r\n      </div >\r\n    )\r\n  })\r\n  \r\n  return(\r\n    <>\r\n    <div className = {`tu_list_rhf`} >\r\n      <h3 className =\"tu_list_rhf_header\">{tu_names.rhf}</h3>\r\n      <div className = {`tu_list_rhf_content`} >\r\n        <div className = {`tu_list_hfs_in_rhf`}>\r\n          {hf_hospital}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TU_LIST_BODY;","import React, {useState} from 'react'\r\n\r\nimport TU_LIST_HEADER from './tu_list_header'\r\nimport TU_LIST_BODY from './tu_list_body'\r\n\r\n\r\nconst TU_LIST = (props) => {\r\n  const {\r\n    tu_structure,\r\n    treatment_units,\r\n    update_treatment_units \r\n  } = props\r\n  \r\n  const [tu_list_display, update_tu_list_display] = useState(\"none\")\r\n  \r\n  \r\n\r\n  const style_tu_list = {display: tu_list_display}\r\nconst tu_str_elm = tu_structure.map(element =>{\r\n  return(\r\n     <TU_LIST_BODY\r\n      key = {`rhf_${element.rhf}`}\r\n      treatment_units = {treatment_units}\r\n      update_treatment_units = {update_treatment_units}\r\n      tu_names = {element}/>\r\n     );\r\n  })\r\n\r\n  return(\r\n    <>\r\n      <div className = \"hospital_list_btn_container\">\r\n        <button\r\n         className = \"hospital_list_btn\"\r\n          onClick = {()=>update_tu_list_display(\"\")}\r\n        >\r\n          Vis sykehusoversikt\r\n        </button>\r\n      </div>\r\n      <div style = { style_tu_list } className = \"tu_list\">\r\n        <TU_LIST_HEADER />\r\n        <div className =\"all_tu\"> \r\n          {tu_str_elm}\r\n        </div>\r\n        <button\r\n          onClick = {()=>update_tu_list_display(\"none\")}\r\n          className=\"tu_list_close_btn\"\r\n           >\r\n          <i className=\"far fa-times-circle\"></i>\r\n        </button>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TU_LIST;","import React, { useState } from 'react'\r\n\r\nimport MAIN from './components/main_component';\r\nimport SELECT_MULTI from './components/select_multi'\r\nimport SELECT_SINGLE from './components/select_single'\r\nimport  TU_LIST from './components/tu_list'\r\nimport config from './app_config'\r\nimport { nest_tu_names} from './data/filter_year_unit'\r\n\r\nimport { filter_year_unit} from './data/filter_year_unit'\r\n\r\nconst {med_field, app_text, data_config  }= config\r\n\r\n\r\n\r\nfunction APP(props){\r\n  const {\r\n    data \r\n  } = props\r\n  const {\r\n    indicator_hf, indicator_rhf , indicator_hosp, indicator_nation, description\r\n  } = data\r\n\r\n  const [treatment_units, update_treatment_units] = useState([])\r\n  const [selected_year, update_selected_year] = useState(2019)\r\n  const [selected_row, update_selected_row] = useState(null)\r\n  \r\n  \r\n  const opts_hosp = [...new Set ( indicator_hosp.map(d=>d.unit_name))].sort().map(opt =>{ return {value :opt , label: opt}; })\r\n  const opts_hf = [...new Set ( indicator_hf.map(d=>d.unit_name))].sort().map(opt =>{ return {value :opt , label: opt}; })\r\n  const opts_rhf = [...new Set ( indicator_rhf.map(d=>d.unit_name))].sort().map(opt =>{ return {value :opt , label: opt}; })\r\n  const opts_tu = [{label: \"RHF\", options: opts_rhf},{label: \"HF\", options: opts_hf},{label:\"Sykehus\", options:opts_hosp} ]\r\n  let opts_year = [2019,2018,2017,2016]\r\n\r\n  const input_data = {\r\n    selected_unit: treatment_units,\r\n    selected_year: selected_year\r\n  }\r\n\r\n  const agg_data = {};\r\n  const hospital = filter_year_unit(indicator_hosp, input_data)\r\n  const hf = filter_year_unit(indicator_hf, input_data)\r\n  const rhf = filter_year_unit(indicator_rhf, input_data)\r\n  const nation = filter_year_unit(\r\n    indicator_nation,\r\n     {selected_unit: \"Nasjonalt\", selected_year: selected_year}\r\n  )\r\n \r\n  const tu_name_hospital = [...new Set ( \r\n      hospital.filtered_by_year.map(d=>d[data_config.column.treatment_unit])\r\n  )].sort()\r\n  const tu_name_hf = [...new Set ( \r\n    hf.filtered_by_year.map(d=>d[data_config.column.treatment_unit])\r\n  )].sort()\r\n  const tu_name_rhf = [...new Set ( \r\n    rhf.filtered_by_year.map(d=>d[data_config.column.treatment_unit])\r\n  )].sort()\r\n  const tu_name = tu_name_hospital.concat(tu_name_hf,tu_name_rhf)\r\n  const colspan= tu_name.length + 2;\r\n  agg_data.nation = nation\r\n  agg_data.filtered_by_unit = hospital.filtered_by_unit.concat(hf.filtered_by_unit, rhf.filtered_by_unit )\r\n  agg_data.filtered_by_year = hospital.filtered_by_year.concat(hf.filtered_by_year, rhf.filtered_by_year )\r\n\r\n  const unique_indicators = tu_name.length > 0 ? \r\n  [...new Set (agg_data.filtered_by_year.map(d=>d[data_config.column.indicator_id]))] :\r\n  [...new Set (agg_data.nation.filtered_by_year.map(d=>d[data_config.column.indicator_id]))]\r\n  const unique_register = [...new Set(med_field.flatMap(entry => entry.key))].map(\r\n    registry => { \r\n      const ind = description.filter(\r\n      description => description[data_config.column.registry_short_name] === registry && \r\n        unique_indicators.includes(description[data_config.column.id])\r\n      )\r\n      return {registry_name: registry, number_ind: ind.length, indicators: ind};\r\n    } \r\n  )\r\n  const ind_per_reg = unique_register\r\n\r\n  const tu_structure = nest_tu_names( data.tu_names)\r\n  \r\n  return(\r\n    <div className = \"app-container\">\r\n      <div className = \"selection-container\">\r\n        <div className = \"treatment-unit-selection\">\r\n          <SELECT_MULTI \r\n            opts ={opts_tu}\r\n            update_tu = {update_treatment_units}\r\n            treatment_unit={treatment_units}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n          <TU_LIST\r\n            tu_structure  = {tu_structure }\r\n            treatment_units = {treatment_units}\r\n            update_treatment_units = {update_treatment_units}\r\n          />\r\n        </div>\r\n        <div className =\"year-selection\">\r\n          <SELECT_SINGLE \r\n            opts ={opts_year}\r\n            update_year = {update_selected_year}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        </div>\r\n      </div>\r\n      <MAIN\r\n        update_selected_year = {update_selected_year}\r\n        update_treatment_units ={update_treatment_units}\r\n        ind_per_reg = {ind_per_reg}\r\n        treatment_units ={tu_name}\r\n        selected_year={selected_year}\r\n        med_field = {med_field}\r\n        app_text = {app_text}\r\n        colspan = {colspan}\r\n        data = {{agg_data, description}}\r\n        unique_indicators = {unique_indicators}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default APP;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\nconst indicator_hosp = window.indicator_hosp\r\nconst indicator_hf = window.indicator_hf\r\nconst indicator_rhf= window.indicator_rhf\r\nconst indicator_nation = window.indicator_nat\r\nconst description = window.description\r\nconst tu_names = window.tu_names\r\n\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <App \r\n      data = {{indicator_hf, indicator_rhf , indicator_hosp, indicator_nation,tu_names, description}}\r\n      />,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}