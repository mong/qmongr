{"version":3,"sources":["components/indicator_table_header.js","components/indicator_value.js","components/indicator_description.js","components/tf_button.js","components/tf_ddmenu.js","components/tf_description.js","charts/page_colors.js","charts/theme_table_chart_bar.js","charts/axis_x_linear_labeled.js","app_config.js","charts/barchart.js","charts/axis_y_band.js","charts/theme_table_chart_line.js","charts/axis_y_linear_labeled.js","charts/line_chart.js","charts/color_legend_table_line_chart.js","charts/axis_x_time_labeled.js","charts/tr_utils.js","components/tf_figure.js","components/indicator_row.js","components/register_name.js","components/register.js","data/filter_year_unit.js","components/indicator_table_body.js","components/indicator_table.js","components/legend_btn.js","components/legend.js","components/med_field_row.js","components/med_field.js","components/main_component.js","components/select_multi.js","components/select_single.js","App.js","index.js"],"names":["TABLE_HEADER","props","col_nr","indicator_header","treatment_unit_name","national","width_desc","width_tu","style_ind_desc","width","style_treatment_units","treatment_unit_th","map","tu","className","style","key","INDICATOR_VALUE","td_class","indicator_value","icon_class","share_of_totla","mid_text","total","INDICATOR_DESCRIPTION","title","short_description","high_achivment_text","TF_BUTTON","chart_type","update_chart_type","radio_buttons","class_name_inp","type","id","name","value","icon","label","class_name_label","rb","Fragment","checked","onChange","e","target","htmlFor","DD_MENU","show_level","update_show_level","zoom","update_zoom","svg_container","update_selected_row","useState","dd_menu_status","set_dd_menu_status","level_states","zoom_states","handle_click","current_state","states","update_state_function","filter","state","useEffect","level_visibility","replace","select","current","selectAll","mouse_leave_dd_cont_timeout","dd_list","click","class","dd","onClick","onMouseLeave","setTimeout","onMouseOver","clearTimeout","aria-hidden","LONG_DESCRIPTION","description_title","description_text","content_status","set_content_status","desc_click_handler","page_colors","high","mid","low","theme_table_chart_bar","x_axis_label_fill","colors","y_axis_label_fill","x_axis_label","y_axis_label","x_axis_label_font_family","y_axis_label_font_family","x_axis_tick_font_fill","y_axis_tick_font_fill","x_axis_tick_line_stroke","y_axis_tick_line_stroke","x_axis_domain_line_stroke","y_axis_domain_line_stroke","labeled_x_axis_linear","selection","x_scale","inner_width","inner_height","x_axis_label_offset","x_axis_label_font_size","x_axis_tick_font_size","x_axis_tick_number","x_axis_tick_size","transition","delay_val","duration_val","axis_label_format","x_axis","axisBottom","tickSize","ticks","tickFormat","format","x_axis_g","data","enter","append","attr","merge","delay","duration","call","x_axis_label_text","text","react_key","menus","unit","year","indicators","moderate","table","main_column","national_column","desired_level","column","indicator_id","coverage_id","treatment_unit","treatment_unit_level","organisation_number","denominator","variable","achieved_level","registry_id","registry_short_name","registry_full_name","indicator_title","indicator_name","indicator_type","indicator_measurement_unit","indicator_short_description","indicator_long_description","level_green","level_yellow","level_direction","min_indicator_value","max_indicator_value","min_denominator","andel","db","full_name","median","rhf","hf","hospital","nation","mod","config","app_config","bar_chart","container","figure_data","levels","height","margin","delay_value","duration_value","margin_px","top","bottom","right","left","svg","g","y_scale","scaleBand","domain","d","range","paddingInner","paddingOuter","align","y_axis_tick_font_size","y_axis_tick_distance_from_axis","y_axis","axisLeft","y_axis_g","y_axis_band","Object","assign","theme_bar_chart","scaleLinear","level_colors","document","querySelector","innerHTML","level","end","start","bars","exit","remove","bandwidth","label_format","x_max_val","max","additional_margin","Math","ceil","invert","theme_table_chart_line","y_axis_tick_number","legend_text_fill","legend_text_font_family","labeled_y_axis_linear","y_axis_label_offset","y_axis_label_font_size","y_axis_tick_size","axisRight","y_axis_label_text","line_chart","scaleTime","min","Date","nested","Array","from","group","unit_name","line_color_scale","scaleOrdinal","console","log","legend_text_font_size","primary_legend_group","legend_container","legend","legend_item","on","event","this","nodes","length","clicked_legend","includes","selected_path_class","nr_clicked","color_legend_line_chart","theme_line_chart","position_left","x_axis_tick_values","Set","index","x_axis_tick_distance_from_axis","tickValues","timeFormat","labeled_x_axis_time","lines","line","x","y","path","y_min","y_max","y_min_val","y_max_val","floor","level_boundary","level_obj","TF_FIGURE","colspan","figure_class","svg_container_ref","useRef","agg_data","filtered_by_year","some","push","prototype","apply","filtered_by_unit","remove_tf","update_remove_tf","svg_props","clientWidth","forEach","description","nr_svg_children","childElementCount","i","removeChild","children","colSpan","ref","textAlign","long_description","data_config","INDICATOR_ROW","med_field_class","show_level_filter","selected_row","indcator_title","indicator_drescription","tr_indicator_class","indicator_val","tr_unit","ind_per_unit","round","numerator","level_class","indicator_value_nation","denominator_nation","numerator_nation","icon_class_nation","tr_fig","REGISTER_NAME","register_name","tr_register_name_class","REGISTER","register_sname","med_field_filter","indicator_row","indicator","filter_year_unit","input_params","selected_unit","selected_year","med_field","TABLE_BODY","treatment_year","table_body","field","register","register_comp","register_data","desc","filter_register","INDICATOR_TABLE","LEGEND_BTN","legend_btn_class","update_show_level_filter","level_filter","toUpperCase","checked_class","update_state","LEGEND","app_text","legend_btns","keys","MED_FIELD_ROW","med_field_name","nr_indicators","update_med_field_filter","update_clicked_med_field","class_checked","clicked_med_field","MED_FIELD","ind_per_reg","all_reg","ind","registry_name","med_field_row","nr_ind","reg","reduce","acc","cur","number_ind","tot_nr_ind","update_ind_per_reg","treatment_units","SELECT_MULTI","opts","select_className","placeholder","update_tu","selection_options","customStyles","menu","provided","zIndex","option","control","value_tu","options","closeMenuOnSelect","isSearchable","isMulti","handle_input_change","styles","menuIsOpen","undefined","SELECT_SINGLE","update_year","opt","defaultValue","APP","indicator_hf","indicator_rhf","indicator_hosp","indicator_nation","update_treatment_units","update_selected_year","opts_hosp","sort","opts_hf","opts_tu","input_data","tu_name_hospital","tu_name_hf","tu_name_rhf","tu_name","concat","unique_indicators","flatMap","entry","registry","window","indicator_nat","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.4df13da0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction TABLE_HEADER(props) {\r\n  const {\r\n    col_nr = 2,\r\n    indicator_header = \"Kvalitetsindikator\",\r\n    treatment_unit_name = [],\r\n    national = \"Nasjonalt\"\r\n  } = props\r\n\r\n  const width_desc = col_nr === 2 ? 60 :  col_nr === 3 ? 50 : 40 \r\n  const width_tu = (100 - width_desc) /(col_nr - 1) \r\n  const style_ind_desc= {width: `${width_desc}%` }\r\n  const style_treatment_units= {width: `${width_tu}%`}\r\n  \r\n  let treatment_unit_th = treatment_unit_name.map(\r\n    tu => <th className=\"selected_unit\" style = {style_treatment_units}  key = {tu}> {tu}</th>\r\n  ) \r\n\r\n\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th key = \"kvind_header\" className=\"quality_indicator\" style={style_ind_desc}>{indicator_header}</th>\r\n        {treatment_unit_th}\r\n        <th className=\"nationally\" style = {style_treatment_units} key = \"nat_header\">{national}</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TABLE_HEADER;","import React from 'react'\r\n\r\n\r\nfunction INDICATOR_VALUE(props) {\r\n  const {\r\n    td_class = \"selected_unit\",\r\n    indicator_value = \"65%\", \r\n    icon_class = \"fa fa-circle-o\",\r\n    share_of_totla = 1500,\r\n    mid_text = \"av\",\r\n    total = 2000\r\n  } = props\r\n\r\n  return (\r\n    <td className = {td_class}>\r\n      <div className=\"level\">\r\n        <h4 >{`${indicator_value} `}<i className={icon_class}></i></h4>\r\n      </div>\r\n      <div className=\"summary\">{`${share_of_totla} ${mid_text} ${total}`}</div>\r\n    </td>\r\n    \r\n  );\r\n}\r\n\r\nexport default INDICATOR_VALUE;","import React from 'react'\r\n\r\n\r\nfunction INDICATOR_DESCRIPTION(props) {\r\n  const {\r\n    title = \"This is the title\",\r\n    short_description = \"This is the short description of the app\",\r\n    high_achivment_text = \"Høy måloppnåelse: > 80%\" \r\n  } = props\r\n \r\n  return (\r\n    <td className = \"quality_indicator\" >\r\n      <div className=\"quality_indicator_name\"><h1>{title}</h1></div>\r\n      <div className=\"qi_long_description\"><p>{short_description}</p></div>\r\n      <div className=\"desired_target_level\">\r\n        <h4>{high_achivment_text}</h4>\r\n      </div>\r\n    </td>\r\n    \r\n  );\r\n}\r\n\r\nexport default INDICATOR_DESCRIPTION;","import React from 'react'\r\n\r\nconst TF_BUTTON = (props) => {\r\n  const{ \r\n    chart_type,\r\n    update_chart_type\r\n  } = props\r\n \r\n   const radio_button_prop =[{\r\n    class_name_inp: 'figure_button figure_button_left',\r\n    type: 'Radio',\r\n    id: 'table_bar',\r\n    name: 'table_figure_button',\r\n    value: 'bar',\r\n    icon: \"fas fa-chart-bar\",\r\n    label: 'Søyle',\r\n    class_name_label: 'figure_button_label'\r\n  },\r\n  {\r\n    class_name_inp: 'figure_button figure_button_right',\r\n    type: 'Radio',\r\n    id: 'table_line',\r\n    name: 'table_figure_button',\r\n    value: 'line',\r\n    icon: 'fas fa-chart-line',\r\n    label: 'Linje',\r\n    class_name_label: 'figure_button_label'\r\n}]\r\n\r\n  const radio_buttons = radio_button_prop.map(rb => {\r\n    return(\r\n    <React.Fragment key = {rb.id}>\r\n      <input \r\n        className = {rb.class_name_inp} \r\n        type={rb.type}\r\n        id={rb.id}\r\n        name={rb.name}\r\n        value = {rb.value}\r\n        checked ={rb.value === chart_type} \r\n        onChange ={(e)=>  update_chart_type(e.target.value)}\r\n      >\r\n      </input>\r\n      <label className = {rb.class_name_label} htmlFor={rb.id} >\r\n        {rb.label} <i className ={rb.icon} ></i>\r\n      </label>\r\n    </React.Fragment>\r\n    )\r\n  })\r\n\r\n  return(\r\n    <div className = \"tr_figure_button\">\r\n      {radio_buttons }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TF_BUTTON;","import React, { useEffect, useState } from 'react'\r\nimport { select } from 'd3'\r\n\r\nconst DD_MENU = (props) => {\r\n  const {\r\n    show_level,\r\n    update_show_level, \r\n    zoom,\r\n    update_zoom, \r\n    svg_container,\r\n    update_selected_row \r\n  } = props\r\n\r\n  const[dd_menu_status, set_dd_menu_status] = useState(\"inactive\")\r\n  const level_states = [\"Vis målnivå\", \"Skjul målnivå\"]\r\n  const zoom_states = [\"Zoom inn\", \"Zoom ut\"]\r\n\r\n  const handle_click =  (current_state, states, update_state_function) => {\r\n    const new_state = states.filter(state => state !== current_state)\r\n    update_state_function(new_state[0])\r\n    \r\n  }\r\n\r\n  useEffect(()=>{\r\n    let level_visibility = show_level.replace(/\\s/g, '') === \"Skjulmålnivå\" ?  \"visible\" : \"hidden\"\r\n    let level = select(svg_container.current)\r\n    level.selectAll(\"svg .level\").style(\"visibility\", level_visibility)\r\n    }, [svg_container, show_level])\r\n\r\n  const dorpdown_entries =  [\r\n    {label : show_level, click : () => handle_click(show_level, level_states, update_show_level), class : \"dd-level\"},\r\n    {label : zoom, click : () => handle_click(zoom, zoom_states, update_zoom), class : \"dd-zoom\"},\r\n    {label : \"Lukk\", click : () => update_selected_row(\"\"), class : \"dd-close\"}\r\n  ]\r\n\r\n  let mouse_leave_dd_cont_timeout;\r\n  const menu_container_mouse_leave = () => {\r\n    mouse_leave_dd_cont_timeout = setTimeout(function(){\r\n      set_dd_menu_status(\"inactive\")\r\n    },\r\n    1000\r\n    )\r\n  }\r\n\r\n  const dd_list = dorpdown_entries.map(dd =>{\r\n    return(\r\n      <li key = {dd.class}>\r\n        <div className ={dd.class} onClick={dd.click}> {dd.label} </div>\r\n      </li>\r\n    );\r\n  })\r\n\r\n  return(\r\n    <div className = \"table_dd_menu_container\" \r\n      onMouseLeave ={ ()=>menu_container_mouse_leave() }\r\n      onMouseOver={ ()=>clearTimeout(mouse_leave_dd_cont_timeout) }\r\n    >\r\n      <button className=\"table_dd_button\" onClick ={()=> set_dd_menu_status(\"\")} >\r\n        <i className=\"fas fa-bars\" aria-hidden=\"true\"></i>\r\n      </button>\r\n      <div id=\"table_dd_container\" className = {`dropdown_container ${dd_menu_status}`}>\r\n        <ul className=\"dropdown_ul\">\r\n          {dd_list}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DD_MENU;","import React, { useState } from 'react'\r\n\r\nconst LONG_DESCRIPTION= (props) => {\r\n  const {\r\n    description_title = \"Om kvalitetsindikatoren\",\r\n    description_text = \"Denne kvalitetsindikatoren er definert som andel pasienter med akutt hoftebrudd som ble operert innen 24 timer etter bruddtidspunktet. \"\r\n  } = props\r\n  const [content_status, set_content_status] = useState(\"inactive\")\r\n  const desc_click_handler = (content_status, set_content_status) => {\r\n    const cur_status = content_status === \"\" ? \"inactive\" : \"\"\r\n    set_content_status(cur_status)\r\n\r\n  }\r\n  return(\r\n    <div className=\"description-container\" >\r\n      <div className = {`description_title_container`} onClick={() => desc_click_handler(content_status, set_content_status) }>\r\n        <h4>{description_title}</h4>\r\n        <i className = {`fa ${content_status ===\"\" ? \"fa-angle-up\" : \"fa-angle-down\"} `}></i>\r\n      </div>\r\n  <p className= {`description_content ${content_status}`}>{description_text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LONG_DESCRIPTION;","export const page_colors = {\r\n  chart_colors: [\r\n    '#4F9A94',\r\n    '#90CAF9',\r\n    '#B0BEC5',\r\n    '#FFE082',\r\n    '#2962FF',\r\n    '#CE93D8',\r\n    '#9C786C',\r\n    '#BCAAA4',\r\n    '#F8BBD0',\r\n    '#9FA8DA',\r\n    '#80DEEA',\r\n    '#A5D6A7',\r\n    '#E6EE9C',\r\n    '#FFAB91',\r\n    '#78909C'\r\n  ],\r\n  line_color: '#D2D3D4',\r\n  background_color: '#EEF6F7',\r\n  primary_text_color: '#2D3034',\r\n  secondary_text_color: '#828586',\r\n  primary_color: '#7EBEC7',\r\n  secondary_color: '#00263D',\r\n  traffic_light_colors: {\r\n    high: '#BFE389',\r\n    mid: '#F5A623',\r\n    low: '#F04157'\r\n  }\r\n}","import { page_colors as colors } from './page_colors.js'\r\n\r\nexport const theme_table_chart_bar = {\r\n  x_axis_label_fill: colors.secondary_text_color,\r\n  y_axis_label_fill: colors.secondary_text_color,\r\n  x_axis_label: '',\r\n  y_axis_label: '',\r\n  x_axis_label_font_family: 'arial',\r\n  y_axis_label_font_family: 'arial',\r\n  x_axis_tick_font_fill: colors.secondary_text_color,\r\n  y_axis_tick_font_fill: colors.primary_text_color,\r\n  x_axis_tick_line_stroke: colors.line_color,\r\n  y_axis_tick_line_stroke: 'none',\r\n  x_axis_domain_line_stroke: 'none',\r\n  y_axis_domain_line_stroke: 'none'\r\n}\r\n","import { axisBottom, format } from 'd3'\r\n/** @module src/axis_x_linear_labeled */\r\n\r\n/**\r\n * Creats linear x axis based on x_scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the x axis\r\n */\r\nexport const labeled_x_axis_linear = function (selection, props) {\r\n  const {\r\n    x_scale,\r\n    inner_width,\r\n    inner_height,\r\n    x_axis_label,\r\n    x_axis_label_fill,\r\n    x_axis_label_offset = inner_height / 6,\r\n    x_axis_label_font_size = 9 + inner_width * 0.04 + 'px',\r\n    x_axis_tick_font_size = 7 + inner_width * 0.02 + 'px',\r\n    x_axis_tick_font_fill,\r\n    x_axis_tick_line_stroke,\r\n    x_axis_tick_number = 6,\r\n    x_axis_tick_size = inner_height,\r\n    //x_axis_tick_offset = inner_height * 0.05,\r\n    x_axis_domain_line_stroke,\r\n    x_axis_label_font_family,\r\n    transition = false,\r\n    delay_val = 0,\r\n    duration_val = 0,\r\n    axis_label_format = ',.0%'\r\n  } = props\r\n\r\n  const x_axis = axisBottom(x_scale)\r\n    .tickSize(-x_axis_tick_size)\r\n    .ticks(x_axis_tick_number)\r\n    .tickFormat(format(axis_label_format))\r\n\r\n  let x_axis_g = selection.selectAll('.x-axis').data([null])\r\n  x_axis_g = x_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'x-axis')\r\n    .merge(x_axis_g)\r\n    .attr('transform', `translate(0,${inner_height})`)\r\n\r\n  if(transition){ \r\n     x_axis_g.transition().delay(delay_val).duration(duration_val).call(x_axis)\r\n  } else { \r\n    x_axis_g.call(x_axis)\r\n  }\r\n\r\n  x_axis_g\r\n    .selectAll('.tick text')\r\n    .style('font-size', x_axis_tick_font_size)\r\n    .attr('fill', x_axis_tick_font_fill)\r\n    //.attr('y', x_axis_tick_offset)\r\n\r\n  x_axis_g.selectAll('.tick line').attr('stroke', x_axis_tick_line_stroke)\r\n  x_axis_g.select('.domain').attr('stroke', x_axis_domain_line_stroke)\r\n\r\n  const x_axis_label_text = x_axis_g.selectAll('.axis-label').data([null])\r\n  x_axis_label_text\r\n    .enter()\r\n    .append('text')\r\n    .attr('class', 'axis-label')\r\n    .merge(x_axis_label_text)\r\n    .attr('fill', x_axis_label_fill)\r\n    .text(x_axis_label)\r\n    .attr('x', inner_width / 2)\r\n    .attr('y', x_axis_label_offset)\r\n    .style('font-size', x_axis_label_font_size)\r\n    .style('font-family', x_axis_label_font_family)\r\n}\r\n","const med_field = [\r\n  {  \r\n    react_key: \"hjerte\",\r\n    name: \"Hjerte- og karsykdommer\",\r\n    key: [\r\n      \"ablanor\",\r\n      \"noric\",\r\n      \"hjerteinfarkt\",\r\n      \"hjerneslag\",\r\n      \"hjertestans\",\r\n      \"hjertesvikt\",\r\n      \"hjertekirurgi\",\r\n      \"norkar\"\r\n    ]\r\n  },\r\n  {\r\n    react_key: \"kreft\",\r\n    name: \"Kreft\",\r\n    key: [\r\n      \"barnekreft\",\r\n      \"brystkreft\",\r\n      \"gynkreft\",\r\n      \"lungekreft\",\r\n      \"lymfoid\",\r\n      \"melanom\",\r\n      \"prostata\",\r\n      \"tarmkreft\"\r\n    ]\r\n  },\r\n  {\r\n    react_key: \"luft\",\r\n    name: \"Luftveier\",\r\n    key: [\"mek_vent\"]\r\n  },\r\n  {  \r\n    react_key: \"diabetes\",\r\n    name: \"Diabetes\",\r\n    key: [\"diabetes_barn\",\"diabetes_voksne\"]\r\n  },\r\n  {  \r\n    react_key: \"nerve\",\r\n    name: \"Nervesystemet\",\r\n    key: [\"cp\",\"ms\",\"parkinson\",\"norkog\"]\r\n  },\r\n  {  \r\n    react_key: \"muskel\",\r\n    name: \"Muskel og skjelett\",\r\n    key: [\r\n      \"hofte_barn\",\r\n      \"hoftebrudd\",\r\n      \"korsband\",\r\n      \"ryggkir\",\r\n      \"leddprotese\",\r\n      \"nnrr\",\r\n      \"muskel\",\r\n      \"nkr_nakke\",\r\n      \"rygg\"\r\n    ]\r\n  },\r\n  {  \r\n    react_key: \"tarm\",\r\n    name: \"Mage og tarm\",\r\n    key: [\"gastronet\",\"fedmekir\",\"nra\",\"norgast\"]\r\n  },\r\n  {  \r\n    react_key: \"gyn\",\r\n    name: \"Gynekologi\",\r\n    key: [\"gyn_endoskopi\",\"kvinl_inkontinens\"]\r\n  },\r\n  {  \r\n    react_key: \"nyre\",\r\n    name: \"Nyre\",\r\n    key: [\"nyre\"]\r\n  }, \r\n  {  \r\n    react_key: \"intensiv\",\r\n    name: \"Skade og intensiv\",\r\n    key: [\"traume\",\"intensiv\",\"nnk\"]\r\n  },\r\n  {  \r\n    react_key: \"rehab\",\r\n    name:\"Rehabilitering\",\r\n    key: [\"nnrr\",\"ryggmargsskade\"]\r\n  },\r\n  {  \r\n    react_key: \"autoimmun\",\r\n    name: \"Autoimmune sykdommer\",\r\n    key: [\"roas\",\"norvas\"]\r\n  },\r\n  {  \r\n    react_key: \"revma\",\r\n    name: \"Revmatologi\",\r\n    key: [\"norartritt\",\"norvas\"]\r\n  },\r\n  {  \r\n    react_key: \"onh\", \r\n    name: \"Øre-nese-hals\",\r\n    key: [\"tonsille\"]\r\n  },\r\n  {  \r\n    react_key: \"hud\",\r\n    name: \"Hudsykdommer\",\r\n    key: [\"hisreg\"]\r\n  },\r\n  {  \r\n    react_key: \"psyk\",\r\n    name: \"Psykisk helse og rus\",\r\n    key: [\"kvarus\",\"norspis\"]\r\n  },\r\n  {  \r\n    react_key: \"barn\",\r\n    name: \"Barn\",\r\n    key: [\r\n      \"cp\",\r\n      \"hofte_barn\",\r\n      \"barnekreft\",\r\n      \"diabetes_barn\",\r\n      \"ganespalt\",\r\n      \"nnk\"\r\n    ]\r\n  },\r\n  {  \r\n    react_key: \"annet\",\r\n    name: \"Andre\",\r\n    key:[\r\n      \"smerte\",\r\n      \"porfyri\"\r\n    ]\r\n  }  \r\n]\r\nconst app_text = {\r\n  menus: {\r\n    unit: \"Velg behandlingssted\",\r\n    year: \"År:\"\r\n  },\r\n  indicators: {\r\n    high: {text: \"Høy måloppnåelse\", icon: \"fa fa-fas fa-circle\"},\r\n    moderate:{ text: \"Moderat måloppnåelse\", icon: \"fa fa-fas fa-adjust\"},\r\n    low: {text: \"Lav måloppnåelse\", icon: \"fa fa-circle-o\" }\r\n  },\r\n  table:{\r\n    main_column: \"Kvalitetsindikator\",\r\n    national_column: \"Nasjonalt\",\r\n    desired_level: \"Ønsket målnivå\",\r\n  }\r\n}\r\n\r\nconst data_config = {\r\n  column: {\r\n    indicator_id: \"ind_id\",\r\n    coverage_id: \"dg_id\",\r\n    year: \"year\",\r\n    treatment_unit: \"unit_name\",\r\n    treatment_unit_level: \"unit_level\",\r\n    organisation_number: \"orgnr\",\r\n    denominator: \"denominator\",\r\n    variable: \"var\",\r\n    achieved_level: \"level\",\r\n    desired_level: \"desired_level\",\r\n    registry_id: \"registry_id\",\r\n    registry_short_name: \"rname\",\r\n    registry_full_name: \"full_name\",\r\n    indicator_title: \"title\",\r\n    indicator_name: \"name\",\r\n    indicator_type: \"type\",\r\n    indicator_measurement_unit: \"measure_unit\",\r\n    indicator_short_description: \"short_description\",\r\n    indicator_long_description: \"long_description\",\r\n    level_green: 'level_green',\r\n    level_yellow: 'level_yellow',\r\n    level_direction: 'level_direction',\r\n    min_indicator_value: 'min_value',\r\n    max_indicator_value: 'max_value',\r\n    min_denominator: 'min_denominator',\r\n    id: 'id'\r\n  },\r\n  indicator_type: {\r\n    andel: {\r\n      db: 'andel',\r\n      full_name: 'Andel'\r\n    },\r\n    median: {\r\n      db: 'median',\r\n      full_name: 'Median'\r\n    }\r\n  },\r\n  treatment_unit_level: {\r\n    rhf: \"rhf\",\r\n    hf: \"hf\",\r\n    hospital: \"hospital\",\r\n    nation: \"nation\"\r\n  },\r\n  achieved_level: {\r\n    high: \"H\",\r\n    mod: \"M\",\r\n    low: \"L\"\r\n  },\r\n  level_direction: {\r\n    high: 1,\r\n    low: 0\r\n  },\r\n  desired_level: {\r\n    high: \"Høyt\",\r\n    low: \"Lavt\"\r\n  }\r\n}\r\n\r\nexport default { med_field, app_text, data_config }","import { select, scaleBand, scaleLinear, max } from 'd3'\r\n\r\n\r\nimport { theme_table_chart_bar as theme_bar_chart } from './theme_table_chart_bar.js'\r\nimport { labeled_x_axis_linear } from './axis_x_linear_labeled.js'\r\nimport { y_axis_band } from './axis_y_band.js'\r\nimport { page_colors } from './page_colors.js'\r\nimport  app_config  from '../app_config'\r\nconst config = app_config.data_config\r\n\r\n// the barchart\r\nexport const bar_chart = function (container, props, figure_data, levels) {\r\n  const { width, height, margin, zoom, delay_value = 1000, duration_value = 1000} = props\r\n  const margin_px = {\r\n    top: height * margin.top,\r\n    bottom: height * margin.bottom,\r\n    right: width * margin.right,\r\n    left: width * margin.left\r\n  }\r\n  container = select(container)\r\n  const inner_width = width - margin_px.left - margin_px.right\r\n  const inner_height = height - margin_px.top - margin_px.bottom\r\n \r\n  let svg = container.selectAll('svg').data([null])\r\n  svg = svg\r\n    .enter()\r\n    .append('svg')\r\n    .merge(svg)\r\n    .attr('width', width - 20)\r\n    .attr('height', height)\r\n    .style('background-color', '#EEF6F7')\r\n    .attr('class', 'table_chart')\r\n\r\n  let g = svg.selectAll('.grouped_element').data([null])\r\n  g = g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'grouped_element')\r\n    .merge(g)\r\n    .attr(\r\n      'transform',\r\n      'translate(' + margin_px.left + ' ,' + margin_px.top + ')'\r\n    )\r\n  const y_scale = scaleBand()\r\n    .domain(figure_data.map((d) => d[config.column.treatment_unit]))\r\n    .range([0, inner_height])\r\n    .paddingInner(0.5)\r\n    .paddingOuter(0.5)\r\n    .align(0.5)\r\n\r\n  y_axis_band(\r\n    g,\r\n    Object.assign({}, theme_bar_chart, {\r\n      y_scale,\r\n      inner_width,\r\n      inner_height,\r\n      margin_px\r\n    })\r\n  )\r\n  let x_scale = scaleLinear().domain([0, 1]).range([0, inner_width])\r\n\r\n  labeled_x_axis_linear(\r\n    g,\r\n    Object.assign({}, theme_bar_chart, {\r\n      x_scale,\r\n      inner_width,\r\n      inner_height, \r\n      transition: false,\r\n    })\r\n  )\r\n \r\n  \r\n  const level_colors = page_colors.traffic_light_colors\r\n  \r\n  let show_level = document.querySelector('.dropdown_ul .dd-level').innerHTML\r\n  let level_visibility = show_level.replace(/\\s/g, '') === \"Skjulmålnivå\" ?  \"visible\" : \"hidden\"\r\n  \r\n  let level = g.selectAll(\"rect.level\")\r\n  level = level\r\n    .data(levels)\r\n    .enter().append(\"rect\")\r\n    .merge(level)\r\n      .attr(\"class\", \"level\")\r\n      .attr('y', 0)\r\n      .attr('x', d => x_scale(d.end))\r\n      .attr('width',d => x_scale(d.start - d.end))\r\n      .attr(\"height\", inner_height)\r\n      .attr('fill', d => level_colors[d.level])\r\n      .style(\"opacity\",\"0.2\")\r\n      .style(\"visibility\", level_visibility)\r\n   \r\n\r\n  let bars = g.selectAll('rect.bars').data(figure_data, d => d[config.column.treatment_unit])\r\n  \r\n  bars.exit().transition().style('opacity', 0).remove()\r\n  \r\n  bars = bars\r\n    .enter()\r\n    .append('rect')\r\n      .attr(\"class\", \"bars\")\r\n    .merge(bars)\r\n      .attr('fill', (d) => {\r\n        let fill_color;\r\n        if ( d[config.column.treatment_unit] === 'Nasjonalt' ) {\r\n          fill_color = '#00263D'\r\n        } else {\r\n          fill_color = '#7EBEC7'\r\n        }\r\n        return fill_color\r\n      })\r\n      .attr('x', 0) \r\n      .attr('y', (d) => y_scale(d[config.column.treatment_unit]))\r\n      .attr('height', y_scale.bandwidth)\r\n      .transition()\r\n      .duration(delay_value)\r\n      .attr('width', (d) => x_scale(d[config.column.variable]))\r\n \r\n  \r\n  if (zoom.replace(/\\s/g, '') === 'Zoomut' ) {\r\n      let x_max_val =  max(figure_data, (d) => d[config.column.variable] )\r\n      let additional_margin = (0.01 + x_max_val) * 0.2  \r\n      x_max_val = Math.ceil((x_max_val + additional_margin)*100)/100\r\n\r\n      x_scale = scaleLinear()\r\n      .domain([\r\n        0,\r\n        x_max_val  > 1 ? 1 : x_max_val \r\n      ])\r\n      .range([0, inner_width])\r\n      \r\n      bars \r\n        .merge(bars)\r\n          .transition()\r\n          .delay(0)\r\n          .duration(duration_value)\r\n          .attr('width', (d) => x_scale(d[config.column.variable]))\r\n  \r\n    level\r\n      .data(levels)\r\n      .merge(level)\r\n        .transition()\r\n        .delay(delay_value)\r\n        .duration(duration_value)\r\n        .attr('x', d => {\r\n          let end ;\r\n          if ( x_scale(d.end) > inner_width) {\r\n            end = x_scale.invert(inner_width)\r\n          } else if(x_scale(d.end) < 0){\r\n            end = x_scale.invert(0)\r\n          } else {\r\n            end = d.end\r\n          }\r\n          return x_scale(end)\r\n        })\r\n        .attr('width', d => {\r\n          let end ;\r\n          let start ;        \r\n          if ( x_scale(d.end) > inner_width) {\r\n            end = x_scale.invert(inner_width)\r\n          } else if(x_scale(d.end) < 0){\r\n            end = x_scale.invert(0)\r\n          } else {\r\n            end = d.end\r\n          }\r\n          \r\n          if (x_scale(d.start) <= inner_width && x_scale(d.start) >= 0){\r\n            start = d.start\r\n          } else if (x_scale(d.start) > inner_width) {\r\n            start = x_scale.invert(inner_width) \r\n          } else if (x_scale(d.start) < 0){\r\n            start = x_scale.invert(0) \r\n          }\r\n          return x_scale(start) - x_scale(end) \r\n        })\r\n    \r\n    let label_format;\r\n    label_format = x_max_val < 0.05 ?  ',.1%': ',.0%'  \r\n\r\n    labeled_x_axis_linear(\r\n      g,\r\n      Object.assign({}, theme_bar_chart, {\r\n        x_scale,\r\n        inner_width,\r\n        inner_height,\r\n        transition: true,\r\n        delay_val: delay_value,\r\n        duration_val: duration_value,\r\n        axis_label_format: label_format\r\n      })\r\n    )\r\n  }\r\n \r\n}","import { axisLeft } from 'd3'\r\n/** @module src/axis_y_band */\r\n\r\n/**\r\n * Creats y axis for a bar chart based on band scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the y axis\r\n */\r\n\r\nexport const y_axis_band = function (selection, props) {\r\n  const {\r\n    y_scale,\r\n    inner_width,\r\n    inner_height,\r\n    y_axis_label_font_family = 'arial',\r\n    y_axis_tick_font_size = 3 + inner_height * 0.03 + 'px',\r\n    y_axis_tick_distance_from_axis = inner_width * 0.03,\r\n    y_axis_tick_font_fill,\r\n    y_axis_tick_line_stroke,\r\n    y_axis_domain_line_stroke\r\n  } = props\r\n\r\n  const y_axis = axisLeft(y_scale)\r\n\r\n  let y_axis_g = selection.selectAll('.y-axis').data([null])\r\n  y_axis_g = y_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'y-axis')\r\n    .merge(y_axis_g)\r\n\r\n  y_axis_g.call(y_axis).attr('text-anchor', 'end')\r\n  y_axis_g\r\n    .selectAll('.tick text')\r\n    .attr('x', -y_axis_tick_distance_from_axis)\r\n    .style('font-size', y_axis_tick_font_size)\r\n    .style('font-family', y_axis_label_font_family)\r\n    .attr('fill', y_axis_tick_font_fill)\r\n  y_axis_g.selectAll('.tick line').attr('stroke', y_axis_tick_line_stroke)\r\n  y_axis_g.select('.domain').attr('stroke', y_axis_domain_line_stroke)\r\n}\r\n","import { page_colors as colors } from './page_colors.js'\r\n\r\nexport const theme_table_chart_line = {\r\n  x_axis_label_fill: colors.primary_text_color,\r\n  y_axis_label_fill: colors.primary_text_color,\r\n  x_axis_label: '',\r\n  y_axis_label: 'Andel',\r\n  x_axis_label_font_family: 'arial, Helvetica Neue',\r\n  y_axis_label_font_family: 'arial, Helvetica Neue',\r\n  x_axis_tick_font_fill: colors.secondary_text_color,\r\n  y_axis_tick_font_fill: colors.secondary_text_color,\r\n  y_axis_tick_number: 6,\r\n  x_axis_tick_line_stroke: 'none',\r\n  y_axis_tick_line_stroke: colors.line_color,\r\n  x_axis_domain_line_stroke: 'none',\r\n  y_axis_domain_line_stroke: 'none',\r\n  legend_text_fill: colors.primary_text_color,\r\n  legend_text_font_family: 'arial, Helvetica Neue'\r\n}\r\n","import { axisRight, format } from 'd3'\r\n/** @module src/axis_y_linear_labeled */\r\n\r\n/**\r\n * Creats linear y axis based on y_scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the y axis\r\n */\r\n\r\nexport const labeled_y_axis_linear = function (selection, props) {\r\n  const {\r\n    y_scale,\r\n    inner_width,\r\n    inner_height,\r\n    y_axis_label = 'Y axis',\r\n    y_axis_label_fill = 'black',\r\n    y_axis_label_offset = inner_width * 1.15,\r\n    y_axis_label_font_size = 7 + inner_width * 0.02 + 'px',\r\n    y_axis_label_font_family = 'arial',\r\n    y_axis_tick_font_size = 8 + inner_height * 0.02 + 'px',\r\n    y_axis_tick_number,\r\n    y_axis_tick_font_fill,\r\n    y_axis_tick_line_stroke,\r\n    y_axis_tick_size = inner_width,\r\n    y_axis_domain_line_stroke,\r\n    transition = false,\r\n    delay_val = 0,\r\n    duration_val = 0,\r\n    axis_label_format = ',.0%'\r\n  } = props\r\n\r\n  const y_axis = axisRight(y_scale)\r\n    .ticks(y_axis_tick_number)\r\n    .tickSize(y_axis_tick_size)\r\n    .tickFormat(format(axis_label_format))\r\n  let y_axis_g = selection.selectAll('.y-axis').data([null])\r\n  y_axis_g = y_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'y-axis')\r\n    .merge(y_axis_g)\r\n\r\n  // prettier-ignore\r\n  \r\n  transition ? y_axis_g.transition().delay(delay_val).duration(duration_val).call(y_axis) : y_axis_g.call(y_axis)\r\n\r\n  y_axis_g\r\n    .selectAll('.tick text')\r\n    .style('font-size', y_axis_tick_font_size)\r\n    .attr('fill', y_axis_tick_font_fill)\r\n\r\n  y_axis_g.selectAll('.tick line').attr('stroke', y_axis_tick_line_stroke)\r\n  y_axis_g.select('.domain').attr('stroke', y_axis_domain_line_stroke)\r\n\r\n  const y_axis_label_text = y_axis_g.selectAll('.axis-label').data([null])\r\n  y_axis_label_text\r\n    .enter()\r\n    .append('text')\r\n    .attr('class', 'axis-label')\r\n    .merge(y_axis_label_text)\r\n    .attr('fill', y_axis_label_fill)\r\n    .text(y_axis_label)\r\n    .attr('transform', 'rotate(-90)')\r\n    .attr('x', -inner_height / 1.5)\r\n    .attr('y', y_axis_label_offset)\r\n    .style('font-size', y_axis_label_font_size)\r\n    .style('font-family', y_axis_label_font_family)\r\n}\r\n","import {\r\n  select,\r\n  scaleTime,\r\n  scaleOrdinal,\r\n  scaleLinear,\r\n  group,\r\n  line,\r\n  min,\r\n  max\r\n} from 'd3'\r\n\r\nimport { theme_table_chart_line as theme_line_chart } from './theme_table_chart_line'\r\nimport { page_colors as colors } from './page_colors'\r\nimport { color_legend_line_chart } from './color_legend_table_line_chart'\r\nimport { labeled_y_axis_linear } from './axis_y_linear_labeled'\r\nimport { labeled_x_axis_time } from './axis_x_time_labeled'\r\nimport { page_colors } from './page_colors.js'\r\nimport  app_config  from '../app_config'\r\nconst config = app_config.data_config\r\n\r\n// line chart\r\nexport const line_chart = function (container, props, figure_data, levels) {\r\n  const { width, height, margin, zoom } = props\r\n  const margin_px = {\r\n    top: height * margin.top,\r\n    bottom: height * margin.bottom,\r\n    right: width * margin.right,\r\n    left: width * margin.left\r\n  }\r\n  const inner_width = width - margin_px.left - margin_px.right\r\n  const inner_height = height - margin_px.top - margin_px.bottom\r\n\r\n  container = select( container)\r\n\r\n  const x_scale = scaleTime()\r\n    .domain([\r\n      min(figure_data, (d) => {\r\n        return new Date(d[config.column.year] + '')\r\n      }),\r\n      max(figure_data, (d) => {\r\n        return new Date(d[config.column.year] + '')\r\n      })\r\n    ])\r\n    .range([0, inner_width])\r\n  let y_scale = scaleLinear().domain([0, 1]).range([inner_height, 0])\r\n\r\n  \r\n  const nested = Array.from(group(figure_data, d=>d.unit_name), ([key, value]) => ({key, value}) )\r\n    \r\n\r\n  const line_color_scale = scaleOrdinal()\r\n    .domain(nested.map((d) =>{console.log(d) \r\n      return d.key}))\r\n    .range(colors.chart_colors)\r\n\r\n  color_legend_line_chart(\r\n    container,\r\n    Object.assign({}, theme_line_chart, {\r\n      line_color_scale,\r\n      inner_width,\r\n      inner_height,\r\n      margin,\r\n      position_left: margin_px.left\r\n    })\r\n  )\r\n\r\n  let svg = container.selectAll('svg').data([null])\r\n  svg = svg\r\n    .enter()\r\n    .append('svg')\r\n    .merge(svg)\r\n    .attr('width', width - 20)\r\n    .attr('height', height)\r\n    .style('background-color', colors.background_color)\r\n\r\n  let g = svg.selectAll('.grouped_element').data([null])\r\n  g = g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'grouped_element')\r\n    .merge(g)\r\n    .attr(\r\n      'transform',\r\n      'translate(' + margin_px.left + ' ,' + margin_px.top + ')'\r\n    )\r\n\r\n  labeled_y_axis_linear(\r\n    g,\r\n    Object.assign({}, theme_line_chart, {\r\n      y_scale,\r\n      inner_width,\r\n      inner_height\r\n    })\r\n  )\r\n\r\n  let x_axis_tick_values = [\r\n    ...new Set(\r\n      figure_data.map((d) => {\r\n        return d[config.column.year] + ''\r\n      })\r\n    )\r\n  ]\r\n  x_axis_tick_values = x_axis_tick_values.map((d) => {\r\n    return new Date(d)\r\n  })\r\n  if (x_axis_tick_values.length > 8) {\r\n    x_axis_tick_values =\r\n      x_axis_tick_values.length % 2 === 0\r\n        ? x_axis_tick_values.filter((data, index) => index % 2 !== 0)\r\n        : x_axis_tick_values.filter((data, index) => index % 2 === 0)\r\n  }\r\n\r\n  labeled_x_axis_time(\r\n    g,\r\n    Object.assign({}, theme_line_chart, {\r\n      x_scale,\r\n      inner_width,\r\n      inner_height,\r\n      x_axis_tick_values\r\n    })\r\n  )\r\n\r\n  const lines = line()\r\n    .x((d) => x_scale(new Date(d[config.column.year] + '')))\r\n    .y((d) => y_scale(d[config.column.variable]))\r\n\r\n\r\n  let show_level = document.querySelector('.dropdown_ul .dd-level').innerHTML\r\n  let level_visibility = show_level.replace(/\\s/g, '') === \"Skjulmålnivå\" ?  \"visible\" : \"hidden\"\r\n  const level_colors = page_colors.traffic_light_colors\r\n\r\n  let level = g.selectAll(\"rect.level\")\r\n  level = level\r\n    .data(levels)\r\n    .enter().append(\"rect\")\r\n    .merge(level)\r\n      .attr(\"class\", \"level\")\r\n      .attr('x', 0)\r\n      .attr('y', d => y_scale(d.start))\r\n      .attr('height',d => inner_height - y_scale((d.start - d.end)))\r\n      .attr(\"width\", inner_width)\r\n      .attr('fill', d => level_colors[d.level])\r\n      .style(\"opacity\",\"0.2\")\r\n      .style(\"visibility\", level_visibility)\r\n\r\n  \r\n  let path = g.selectAll('.table-line-chart')\r\n  .data(group(figure_data, d=> d[config.column.treatment_unit]))\r\n\r\n  path.exit().transition().style('opacity', 0).remove()\r\n    \r\n  path = path\r\n    .enter()\r\n    .append('path')\r\n    .merge(path)\r\n    .attr('class', (d) =>  `table-line-chart  ${d[0].replace(/\\s/g, '')}`)\r\n    .attr('d', (d) => lines(d[1]))\r\n    .attr('stroke', (d) => line_color_scale(d[0]))\r\n    .style('stroke-width', 3)\r\n    .style('stroke-linejoin', 'round')\r\n    .style('stroke-linecap', 'round')\r\n    .attr('fill', 'none')\r\n    .style('mix-blend-mode', 'multiply')\r\n  \r\n\r\n  \r\n  if (zoom.replace(/\\s/g, '') === 'Zoomut' ){\r\n    let y_min_val =  min(figure_data, (d) => d[config.column.variable]) \r\n    let y_max_val =  max(figure_data, (d) => d[config.column.variable])\r\n    let additional_margin = (y_max_val - y_min_val) * 0.2  \r\n    y_min_val = Math.floor( (y_min_val - additional_margin) * 100) / 100\r\n    y_max_val = Math.ceil((y_max_val + additional_margin) * 100) / 100\r\n    \r\n    let y_min;\r\n    let y_max;\r\n    \r\n    y_min_val  < 0 ? y_min = 0 : y_min = y_min_val\r\n    y_max_val  > 1 ? y_max = 1 : y_max =y_max_val\r\n\r\n    y_scale = scaleLinear()\r\n      .domain([\r\n      y_min,\r\n      y_max\r\n      ])\r\n      .range([inner_height, 0])\r\n    \r\n    let label_format =  y_max-y_min < 0.06 ? ',.1%': ',.0%'  \r\n    \r\n    path\r\n      .data(group(figure_data, d=> d[config.column.treatment_unit]))\r\n      .enter()\r\n      .append('path')\r\n      .merge(path)\r\n      .transition()\r\n      .delay(1000)\r\n      .duration(1000)\r\n      .attr('d', (d) => lines(d[1]))\r\n    \r\n    level\r\n      .data(levels)\r\n      .enter().append(\"rect\")\r\n      .merge(level)\r\n        .transition()\r\n        .delay(1000)\r\n        .duration(1000)\r\n        .attr('y', d => {\r\n          let start ;\r\n          if ( y_scale(d.start) > inner_height) {\r\n            start = y_scale.invert(inner_height)\r\n          } else if(y_scale(d.start) < 0){\r\n            start = y_scale.invert(0)\r\n          } else {\r\n            start = d.start\r\n          }\r\n          return y_scale(start)\r\n        })\r\n        .attr('height',d => {\r\n          let end ;\r\n          let start ;        \r\n          if ( y_scale(d.start) > inner_height) {\r\n            start = y_scale.invert(inner_height)\r\n          } else if(y_scale(d.start) < 0){\r\n            start = y_scale.invert(0)\r\n          } else {\r\n            start = d.start\r\n          }\r\n          \r\n          if (y_scale(d.end) <= inner_height && y_scale(d.end) >= 0){\r\n            end = d.end\r\n          } else if (y_scale(d.end) > inner_height) {\r\n            end = y_scale.invert(inner_height) \r\n          } else if (y_scale(d.end) < 0){\r\n            end = y_scale.invert(0) \r\n          }\r\n          return y_scale(end) - y_scale(start)\r\n        })\r\n    \r\n    labeled_y_axis_linear(\r\n      g,\r\n      Object.assign({}, theme_line_chart, {\r\n        y_scale,\r\n        inner_width,\r\n        inner_height,\r\n        transition: true,\r\n        delay_val: 1000,\r\n        duration_val: 1000,\r\n        axis_label_format: label_format\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { selectAll, select} from 'd3'\r\n\r\nexport const color_legend_line_chart = function (selection, props) {\r\n  const {\r\n    line_color_scale,\r\n    margin = { left: 0.1, right: 0.1 },\r\n    inner_width,\r\n    legend_text_fill,\r\n    legend_text_font_family,\r\n    legend_text_font_size = 7 + inner_width * 0.01\r\n  } = props\r\n\r\n  const primary_legend_group = selection\r\n    .selectAll('.line_chart_legend_table')\r\n    .data([null])\r\n  const legend_container = primary_legend_group\r\n    .enter()\r\n    .append('div')\r\n    .merge(primary_legend_group)\r\n    .attr('class', 'line_chart_legend_table')\r\n    .style('position', 'relative')\r\n    .style('top', '0')\r\n    .style('left', `${margin.left * 100}%`)\r\n    .style('width', `${(1 - margin.left - margin.right) * 100}%`)\r\n   \r\n\r\n  const legend_list = legend_container\r\n      .selectAll('ul')\r\n      .data([null])\r\n    .enter()\r\n      .append('ul')\r\n    .merge(legend_container.select(\"ul\"))\r\n      .style('display', 'flex')\r\n      .style('justify-content', 'flex-start')\r\n      .style('flex-wrap', 'wrap')\r\n\r\n  const legend = legend_list.selectAll('li')\r\n    .data(line_color_scale.domain(), d => d )\r\n    \r\n  const legend_item = legend\r\n    .enter()\r\n      .append(\"li\")\r\n    .merge(legend)\r\n    .style('margin', '5px')\r\n    .style('display', 'flex')\r\n    .attr('class', 'legend_item')\r\n    .text((d) => d)\r\n      .style('font-size', legend_text_font_size + 'px')\r\n      .style('font-family', legend_text_font_family)\r\n      .style('fill', legend_text_fill)\r\n      .style('padding', '5px')\r\n      .style('border-bottom', (d) => `3px solid ${line_color_scale(d)}`)\r\n      \r\n  legend\r\n    .exit().remove()\r\n  \r\n  \r\n  legend_item\r\n  .merge(legend)   \r\n    .on('mouseover', function (event,d) {\r\n      selectAll('svg path.table-line-chart:not(.clicked)')\r\n        .transition()\r\n        .duration(500)\r\n        .style('opacity', 0.2)\r\n      select(`svg path.${d.replace(/\\s/g, '')}`)\r\n        .transition()\r\n        .duration(500)\r\n        .style('opacity', 1)\r\n      select(this).style('cursor', 'pointer')\r\n    })\r\n    .on('mouseout', function (event,d) {\r\n      var nr_clicked = select('.tr_figure').selectAll('li.clicked').nodes()\r\n        .length\r\n      if (nr_clicked < 1) {\r\n        selectAll('path.table-line-chart:not(.clicked)')\r\n          .transition()\r\n          .duration(500)\r\n          .style('opacity', 1)\r\n      } else {\r\n        selectAll('path.table-line-chart:not(.clicked)')\r\n          .transition()\r\n          .duration(500)\r\n          .style('opacity', 0.2)\r\n      }\r\n    })\r\n    .on('click', function (event, d) {\r\n      var clicked_legend = select(this).attr('class')\r\n      \r\n      if (clicked_legend.includes('clicked')) {\r\n        var nr_clicked = select('.line_chart_legend_table')\r\n          .selectAll('li.clicked')\r\n          .nodes().length\r\n        console.log( select('.line_chart_legend_table')\r\n        .selectAll('li.clicked')) \r\n        var selected_path_class\r\n        if (nr_clicked === 1) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = selected_path_class.replace(' clicked', '')\r\n          clicked_legend = clicked_legend.replace(' clicked', '')\r\n          selectAll('svg path.table-line-chart')\r\n            .attr(\r\n              'class',\r\n              (d) =>{\r\n                console.log(d)\r\n                return  `table-line-chart  ${d[0].replace(/\\s/g, '')}` }\r\n            )\r\n            .transition()\r\n            .duration(1000)\r\n            .style('opacity', 1)\r\n          selectAll('.tr_figure li.legend_item')\r\n            .attr('class', clicked_legend)\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 1)\r\n        } else if (nr_clicked > 1) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = selected_path_class.replace(' clicked', '')\r\n          clicked_legend = clicked_legend.replace(' clicked', '')\r\n          select(`svg path.${d.replace(/\\s/g, '')}`)\r\n            .attr('class', selected_path_class)\r\n            .transition()\r\n            .duration(1000)\r\n            .style('opacity', '0.2')\r\n          select(this)\r\n            .attr('class', clicked_legend)\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 0.4)\r\n        } else {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = selected_path_class.replace(' clicked', '')\r\n          clicked_legend = clicked_legend.replace(' clicked', '')\r\n          select('svg path.table-line-chart')\r\n            .attr('class', selected_path_class)\r\n            .transition()\r\n            .duration(1000)\r\n            .style('opacity', 1)\r\n          select('.tr_figure li.legend_item')\r\n            .attr('class', clicked_legend)\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 1)\r\n        }\r\n      } else {\r\n        nr_clicked = select('.tr_figure').selectAll('li.clicked').nodes()\r\n          .length\r\n        if (nr_clicked === 0) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = `${selected_path_class} clicked`\r\n          clicked_legend = `${clicked_legend} clicked`\r\n          select(`svg path.${d.replace(/\\s/g, '')}`)\r\n            .attr('class', selected_path_class)\r\n            .style('opacity', 1)\r\n          select(this).attr('class', clicked_legend).style('opacity', 1)\r\n          selectAll('svg path.table-line-chart:not(.clicked)')\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 0.2)\r\n          selectAll('.tr_figure li.legend_item:not(.clicked)')\r\n            .transition()\r\n            .duration(500)\r\n            .style('opacity', 0.4)\r\n        } else if (nr_clicked > 0) {\r\n          selected_path_class = select(`svg path.${d.replace(/\\s/g, '')}`).attr(\r\n            'class'\r\n          )\r\n          selected_path_class = `${selected_path_class} clicked`\r\n          clicked_legend = `${clicked_legend} clicked`\r\n          select(`svg path.${d.replace(/\\s/g, '')}`)\r\n            .attr('class', selected_path_class)\r\n            .style('opacity', 1)\r\n          select(this).attr('class', clicked_legend).style('opacity', 1)\r\n        }\r\n      }\r\n    })\r\n\r\n}\r\n","import { axisBottom, timeFormat } from 'd3'\r\n/** @module src/axis_x_time_labeled */\r\n\r\n/**\r\n * Creats time formatted x axis based on x_scale passed to it as part of the props.\r\n *\r\n * @func\r\n * @param { DOM } selection - the selected DOM element to which the axis will be attached to\r\n * @param { Object } props - an objet that defines the look of the x axis\r\n */\r\n\r\nexport const labeled_x_axis_time = function (selection, props) {\r\n  const {\r\n    x_scale,\r\n    inner_width,\r\n    inner_height,\r\n    x_axis_tick_values,\r\n    x_axis_label = '',\r\n    x_axis_label_fill = '',\r\n    x_axis_label_offset = 0,\r\n    x_axis_label_font_size = 0,\r\n    x_axis_label_font_family = 'arial',\r\n    x_axis_tick_font_size = 10 + inner_width * 0.015 + 'px',\r\n    x_axis_tick_distance_from_axis = 5 + inner_height * 0.08,\r\n    x_axis_tick_font_fill,\r\n    x_axis_tick_line_stroke,\r\n    x_axis_domain_line_stroke\r\n  } = props\r\n\r\n  const x_axis = axisBottom(x_scale)\r\n    .tickValues(x_axis_tick_values)\r\n    .tickFormat(timeFormat('%Y'))\r\n  let x_axis_g = selection.selectAll('.x-axis').data([null])\r\n  x_axis_g = x_axis_g\r\n    .enter()\r\n    .append('g')\r\n    .attr('class', 'x-axis')\r\n    .merge(x_axis_g)\r\n    .attr('transform', `translate(0,${inner_height})`)\r\n  x_axis_g.call(x_axis)\r\n  x_axis_g\r\n    .selectAll('.tick text')\r\n    .style('font-size', x_axis_tick_font_size)\r\n    .attr('fill', x_axis_tick_font_fill)\r\n    .attr('y', x_axis_tick_distance_from_axis)\r\n  x_axis_g.selectAll('.tick line').attr('stroke', x_axis_tick_line_stroke)\r\n  x_axis_g.select('.domain').attr('stroke', x_axis_domain_line_stroke)\r\n\r\n  const x_axis_label_text = x_axis_g.selectAll('.axis-label').data([null])\r\n  x_axis_label_text\r\n    .enter()\r\n    .append('text')\r\n    .attr('class', 'axis-label')\r\n    .merge(x_axis_label_text)\r\n    .attr('fill', x_axis_label_fill)\r\n    .text(x_axis_label)\r\n    .attr('x', inner_width / 2)\r\n    .attr('y', x_axis_label_offset)\r\n    .style('font-size', x_axis_label_font_size + 'px')\r\n    .style('font-family', x_axis_label_font_family)\r\n}\r\n","import  app_config  from '../app_config'\r\n\r\nconst config = app_config.data_config\r\n\r\n\r\nexport const level_boundary = function (level_obj)  {\r\n  if (this[config.column.level_direction] === 0) {\r\n    if (level_obj.level === 'high' )  {\r\n      level_obj.start = this[config.column.level_green]\r\n      level_obj.end = 0\r\n    } else if (level_obj.level === 'mid') {\r\n      level_obj.start = this[config.column.level_yellow]\r\n      level_obj.end = this[config.column.level_green]\r\n    } else {\r\n      level_obj.start = 1\r\n      level_obj.end = this[config.column.level_yellow]\r\n    }\r\n  } else if (this[config.column.level_direction]=== 1 ){\r\n    if ( level_obj.level === 'high' )  {\r\n      level_obj.start = 1\r\n      level_obj.end = this[config.column.level_green]\r\n    } else if (level_obj.level === 'mid') { \r\n      level_obj.start = this[config.column.level_green]\r\n      level_obj.end = this[config.column.level_yellow]\r\n    } else {\r\n      level_obj.start = this[config.column.level_yellow]\r\n      level_obj.end = 0\r\n    }\r\n  } \r\n}","import React, {useEffect, useRef, useState} from 'react';\r\n\r\nimport TF_BUTTON from './tf_button'\r\nimport TF_DDMENU from './tf_ddmenu'\r\nimport TF_LONG_DESCRIPTION from './tf_description'\r\n\r\nimport {bar_chart} from '../charts/barchart'\r\nimport {line_chart} from '../charts/line_chart'\r\nimport { level_boundary } from '../charts/tr_utils'\r\n\r\nfunction TF_FIGURE (props) {\r\n  const {\r\n    colspan = 3,\r\n    data,\r\n    figure_class,\r\n    update_selected_row \r\n  } = props\r\n  \r\n  const svg_container_ref = useRef()\r\n  if(!data.agg_data.filtered_by_year.some(d => d.unit_name ===\"Nasjonalt\") ) {\r\n    data.agg_data.filtered_by_year.push(data.agg_data.nation.filtered_by_year[0])\r\n    Array.prototype.push.apply( data.agg_data.filtered_by_unit, data.agg_data.nation.filtered_by_unit)\r\n   \r\n  }\r\n  const [chart_type, update_chart_type] = useState(\"line\")\r\n  const [zoom, update_zoom]=useState(\"Zoom ut\")\r\n  const [show_level, update_show_level]=useState(\"Vis målnivå\")\r\n  const [remove_tf, update_remove_tf]=useState(null)\r\n\r\n  useEffect(() => {\r\n    const svg_props = {}\r\n    svg_props.width = svg_container_ref.current.clientWidth \r\n    svg_props.height =  svg_props.width * 0.5\r\n    svg_props.margin = {top:0.05, bottom: 0.1, right: 0.15, left: 0.2}\r\n    svg_props.zoom = zoom\r\n    const levels = [{level: 'high'}, {level: 'mid'}, {level: 'low'}]\r\n    levels.forEach(level_boundary, data.description[0])\r\n    if (chart_type === \"bar\" ) {\r\n      const nr_svg_children = svg_container_ref.current.childElementCount\r\n      for(let i = 0; i < nr_svg_children; i++){\r\n        svg_container_ref.current.removeChild(\r\n          svg_container_ref.current.children[0]\r\n        )\r\n      }\r\n      bar_chart(svg_container_ref.current, svg_props, data.agg_data.filtered_by_year, levels )\r\n    } else if (chart_type === \"line\") {\r\n      const nr_svg_children = svg_container_ref.current.childElementCount\r\n      for(let i = 0; i < nr_svg_children; i++){\r\n        svg_container_ref.current.removeChild(\r\n          svg_container_ref.current.children[0]\r\n        )\r\n      }\r\n      svg_props.margin = {top:0.05, bottom: 0.2, right: 0.15, left: 0.05}\r\n      line_chart(svg_container_ref.current, svg_props, data.agg_data.filtered_by_unit, levels)\r\n    }\r\n  }, [data, chart_type, zoom])\r\n  \r\n  return (\r\n      <tr className = {figure_class}><td colSpan = {colspan}>\r\n        <div className=\"tr_figure\" >\r\n          <div className = \"tr_buttons_container\">\r\n            <TF_DDMENU\r\n              show_level = {show_level}\r\n              update_show_level = {update_show_level}\r\n              zoom ={zoom}\r\n              update_zoom = {update_zoom}\r\n              remove_tf = {remove_tf}\r\n              update_remove_tf = {update_remove_tf}\r\n              svg_container = {svg_container_ref}\r\n              update_selected_row = {update_selected_row}\r\n            />\r\n            <TF_BUTTON\r\n              chart_type = {chart_type}\r\n              update_chart_type = {update_chart_type}\r\n            />\r\n          </div>\r\n          <div ref = {svg_container_ref} style = {{textAlign: \"center\"}}>\r\n            \r\n          </div>\r\n          <TF_LONG_DESCRIPTION description_text = {data.description[0].long_description}/>\r\n        </div>\r\n      </td></tr>\r\n  );\r\n}\r\n\r\nexport default TF_FIGURE;\r\n","import React from 'react'\r\n\r\nimport INDICATOR_VALUE from './indicator_value'\r\nimport INDICATOR_DESCRIPTION from './indicator_description'\r\nimport TR_FIGURE from './tf_figure'\r\n\r\nimport app_config from '../app_config'\r\n\r\nconst { data_config } = app_config\r\n\r\nfunction INDICATOR_ROW(props) {\r\n  const {\r\n    mid_text = \"av\",\r\n    data,\r\n    treatment_unit_name = [],\r\n    med_field_class = \"\",\r\n    show_level_filter = \"\",\r\n    selected_row, \r\n    update_selected_row ,\r\n    colspan \r\n  } = props\r\n \r\n  const description = data.description[0]\r\n  const indcator_title = description.title\r\n  const indicator_drescription = description.short_description\r\n  const level_direction = description[data_config.column.level_direction] === 0 ?\r\n    \"<\" :\">\"\r\n  const level_green = description[data_config.column.level_green]\r\n  const high_achivment_text = level_green !== null ?\r\n    `Høy måloppnåelse: ${level_direction} ${level_green*100}%` :  \"\"\r\n  const tr_indicator_class = `${description[data_config.column.id]} \r\n    ${description[data_config.column.registry_short_name]}`\r\n  \r\n  const indicator_val = treatment_unit_name.map((tr_unit, index) => {\r\n    const ind_per_unit =data.agg_data.filtered_by_year.filter(\r\n      data => data[data_config.column.treatment_unit] === tr_unit\r\n    ) \r\n    if (ind_per_unit.length < 1){\r\n      return <td\r\n        key = {`${description[data_config.column.id]}_${tr_unit}_${index}_su`}\r\n        className = \"selected_unit\">\r\n      </td>\r\n    } else {\r\n      \r\n      const indicator_value =\r\n        description[data_config.column.indicator_type] === data_config.indicator_type.andel.db ?\r\n        `${Math.round(ind_per_unit[0][data_config.column.variable] * 100)}%` :\r\n        `${ind_per_unit[0][data_config.column.variable]}`\r\n      const denominator = ind_per_unit[0][data_config.column.denominator]\r\n      const numerator = Math.round(ind_per_unit[0][data_config.column.variable] * denominator)\r\n\r\n      const icon_class = ind_per_unit[0][data_config.column.achieved_level] === \"H\" ?\r\n       \"fa fa-fas fa-circle\": \r\n        ind_per_unit[0][data_config.column.achieved_level] === \"M\" ? \r\n        \"fa fa-fas fa-adjust\":\r\n        ind_per_unit[0][data_config.column.achieved_level] === \"L\" ?\r\n         \"fa fa-circle-o\" :\r\n        \"\"\r\n      const level_class =  ind_per_unit[0][data_config.column.achieved_level] !== show_level_filter && show_level_filter !== null?\r\n        \"filtered_level\":\"\"\r\n     return <INDICATOR_VALUE\r\n      key = {`${description[data_config.column.id]}_${tr_unit}_${index}_su`}\r\n        td_class = {`selected_unit ${level_class}`}\r\n        indicator_value = {indicator_value} \r\n        icon_class = {icon_class}\r\n        share_of_totla = {numerator}\r\n        mid_text = {mid_text}\r\n        total = {denominator}\r\n      />;\r\n    }\r\n  })\r\n  \r\n  const indicator_value_nation =\r\n    description[data_config.column.indicator_type] === data_config.indicator_type.andel.db ?\r\n    `${Math.round(data.agg_data.nation.filtered_by_year[0][data_config.column.variable] * 100)}%` :\r\n    `${data.agg_data.nation.filtered_by_year[0][data_config.column.variable]}`\r\n  const denominator_nation = data.agg_data.nation.filtered_by_year[0][data_config.column.denominator]\r\n  const numerator_nation = Math.round(data.agg_data.nation.filtered_by_year[0][data_config.column.variable] * denominator_nation)\r\n\r\n      const icon_class_nation = data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] === \"H\" ?\r\n       \"fa fa-fas fa-circle\": \r\n        data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] === \"M\" ? \r\n        \"fa fa-fas fa-adjust\":\r\n        data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] === \"L\" ?\r\n         \"fa fa-circle-o\" :\r\n      \"\"\r\n  const level_class =  data.agg_data.nation.filtered_by_year[0][data_config.column.achieved_level] !==\r\n    show_level_filter && show_level_filter !== null ?\r\n    \"filtered_level\":\"\"\r\n  \r\n  const tr_fig = selected_row === description[data_config.column.id] ?\r\n   <TR_FIGURE\r\n    colspan = {colspan}\r\n    data ={data}\r\n    figure_class = {med_field_class}\r\n    update_selected_row = {update_selected_row}\r\n  /> : null\r\n\r\n  const tr_click_handler = ()=> {\r\n    if (selected_row === description[data_config.column.id] ){\r\n      update_selected_row(\"\")\r\n    }else{\r\n      update_selected_row(description[data_config.column.id])\r\n    }\r\n  }\r\n\r\n  return(\r\n    <>\r\n      <tr\r\n        onClick = {()=>tr_click_handler()} \r\n        id= {`${tr_indicator_class}`} \r\n        className = {`${tr_indicator_class} ${med_field_class} indicator`}\r\n      >\r\n        <INDICATOR_DESCRIPTION\r\n          title = {indcator_title}\r\n          short_description = {indicator_drescription} \r\n          high_achivment_text = {high_achivment_text}\r\n        />\r\n        {indicator_val}\r\n        <INDICATOR_VALUE\r\n          key = {``}\r\n          td_class = {`nationally ${level_class}`}\r\n          indicator_value = {indicator_value_nation} \r\n          icon_class = {icon_class_nation}\r\n          share_of_totla = {numerator_nation}\r\n          mid_text = {mid_text}\r\n          total = {denominator_nation}\r\n        />\r\n      </tr>\r\n      {tr_fig}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default INDICATOR_ROW;","import React from 'react';\r\n\r\n\r\nfunction REGISTER_NAME(props) {\r\n  const {\r\n    register_name = \"Nasjonalt hoftebruddregister\",\r\n    colspan = 2,\r\n    tr_register_name_class = \"register-row\"\r\n  } = props\r\n  return (\r\n    <tr className = {tr_register_name_class} >\r\n      <td colSpan = {colspan}>\r\n        <h3 className = \"reg-name\">{register_name}</h3>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default REGISTER_NAME;\r\n","import React from 'react'\r\nimport INDICATOR_ROW from './indicator_row'\r\nimport REGISTER_NAME from './register_name'\r\nimport app_config from '../app_config'\r\n\r\nconst { data_config } = app_config\r\n\r\n\r\nfunction REGISTER(props) {\r\n  const {\r\n    register_sname = \"hjerte\",\r\n    colspan = 4,\r\n    tr_register_name_class = \"register-row\",\r\n    data,\r\n    treatment_unit_name,\r\n    med_field_filter,\r\n    show_level_filter,\r\n    selected_row,\r\n    update_selected_row,\r\n  } = props\r\n\r\n \r\n  const med_field_class = med_field_filter.includes(register_sname) ? '' : 'filter_med_field' \r\n  const register_name =  [...new Set ( \r\n    data.description.map(d=> d[data_config.column.registry_full_name]) \r\n  )]\r\n  const ind_id =  [...new Set ( \r\n    data.agg_data.filtered_by_year.map(d=> d[data_config.column.indicator_id]) \r\n  )]\r\n\r\n  const indicator_row = ind_id.map(\r\n    indicator => {\r\n      const agg_data = {}\r\n      const nation = {}\r\n      agg_data.filtered_by_year = data.agg_data.filtered_by_year.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      ) \r\n      agg_data.filtered_by_unit = data.agg_data.filtered_by_unit.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      ) \r\n      nation.filtered_by_year = data.agg_data.nation.filtered_by_year.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      )\r\n      const description = data.description.filter(\r\n        d => d[data_config.column.id] === indicator\r\n      )\r\n      nation.filtered_by_unit = data.agg_data.nation.filtered_by_unit.filter(\r\n        d => d[data_config.column.indicator_id] === indicator\r\n      )\r\n      agg_data.nation = nation\r\n      return <INDICATOR_ROW\r\n        data = {{agg_data, description}}\r\n        key = {indicator} \r\n        treatment_unit_name = {treatment_unit_name }\r\n        med_field_class = {med_field_class}\r\n        show_level_filter = {show_level_filter}\r\n        colspan = {colspan}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />;\r\n    })\r\n   \r\n  return(\r\n    <>\r\n      <REGISTER_NAME\r\n        register_name = {register_name}\r\n        colspan = {colspan}\r\n        tr_register_name_class = {`${tr_register_name_class} ${register_sname} ${med_field_class}`}      \r\n      />\r\n      {indicator_row}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default REGISTER;","import app_config from '../app_config'\r\n\r\nconst { data_config } = app_config\r\n\r\n export const filter_year_unit = (data, input_params) => {\r\n  const {\r\n    selected_unit,\r\n    selected_year\r\n  } = input_params\r\n\r\n  const filtered_by_unit = selected_unit !== null ? \r\n    data.filter(\r\n      d => selected_unit.includes(d[data_config.column.treatment_unit])\r\n    ) : data\r\n  \r\n\r\n  const filtered_by_year = selected_year !== null ? \r\n  filtered_by_unit.filter(\r\n      d => d[data_config.column.year] === selected_year\r\n      ) : filtered_by_unit\r\n\r\n  return({\r\n    filtered_by_unit,\r\n    filtered_by_year   \r\n  });\r\n}\r\n\r\nexport const filter_register = (data, register )=> {\r\n  \r\n const description = data.description.filter(\r\n   desc => desc[app_config.data_config.column.registry_short_name] === register\r\n  )\r\n  const indicator_name = description.map(\r\n    desc => desc[app_config.data_config.column.id])\r\n  const agg_data = {}\r\n  agg_data.filtered_by_unit = data.agg_data.filtered_by_unit.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  agg_data.filtered_by_year = data.agg_data.filtered_by_year.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  const nation = {}\r\n  nation.filtered_by_unit = data.agg_data.nation.filtered_by_unit.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  nation.filtered_by_year = data.agg_data.nation.filtered_by_year.filter(\r\n    data => indicator_name.includes(data[app_config.data_config.column.indicator_id])\r\n  )\r\n  agg_data.nation = nation\r\n  return {agg_data, description};\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport REGISTER from './register'\r\n\r\nimport app_config from '../app_config'\r\nimport { filter_register } from '../data/filter_year_unit'\r\n\r\nconst { med_field } = app_config\r\n\r\nfunction TABLE_BODY(props) {\r\n  const {\r\n    colspan = 4,\r\n    data,\r\n    treatment_unit_name,\r\n    treatment_year,\r\n    med_field_filter,\r\n    show_level_filter,\r\n    selected_row,\r\n    update_selected_row \r\n  } = props\r\n  \r\n  //console.log(data)\r\n \r\n  const added_register = [];\r\n //if no valid treatment unit loop through the national\r\n  if (treatment_unit_name.length < 1) {\r\n    data.agg_data.filtered_by_year = data.agg_data.nation.filtered_by_year\r\n    data.agg_data.filtered_by_unit = data.agg_data.nation.filtered_by_unit\r\n  }\r\n  //loop registry for registry based following the seq laid out by the med field list\r\n  const table_body = med_field.map( function(field) {\r\n    \r\n    let register_block = field.key.map((register) =>{\r\n      var register_comp;\r\n      if(!this.includes(register)){\r\n        this.push(register)\r\n        const register_data = filter_register(\r\n          data,\r\n          register\r\n        )\r\n\r\n        if (register_data.agg_data.filtered_by_year.length > 0) {\r\n          register_comp = <REGISTER\r\n            key = {`${register}`}\r\n            register_sname = {register}\r\n            data = {register_data}\r\n            colspan = {colspan}\r\n            treatment_unit_name = {treatment_unit_name}\r\n            treatment_year = {treatment_year}\r\n            med_field_filter = {med_field_filter}\r\n            show_level_filter = {show_level_filter}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        }\r\n      } else { register_comp = null}\r\n    return register_comp\r\n    })\r\n    return register_block\r\n  },\r\n  added_register)\r\n \r\n  return (\r\n    <tbody>\r\n      {table_body}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default TABLE_BODY;","import React from 'react';\r\n\r\nimport TABLE_HEADER from './indicator_table_header'\r\nimport TABLE_BODY from './indicator_table_body'\r\n\r\nfunction INDICATOR_TABLE(props) {\r\n  const {\r\n    treatment_unit_name = [],\r\n    treatment_year = 2019,\r\n    data,\r\n    colspan,\r\n    med_field_filter, \r\n    show_level_filter,\r\n    selected_row, \r\n    update_selected_row\r\n  } = props\r\n\r\n  return (\r\n    <table>\r\n      <TABLE_HEADER col_nr = {colspan} treatment_unit_name = {treatment_unit_name}/>\r\n      <TABLE_BODY \r\n        colspan = {colspan}\r\n        data = {data}\r\n        treatment_unit_name = {treatment_unit_name} \r\n        treatment_year = {treatment_year}\r\n        med_field_filter = {med_field_filter}\r\n        show_level_filter = {show_level_filter}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default INDICATOR_TABLE;","import React from 'react';\r\n\r\nfunction LEGEND_BTN(props) {\r\n  const {\r\n    level= \"Høy måloppnåelse\",\r\n    icon_class = \"fa fa-fas fa-circle\",\r\n    legend_btn_class = \"high\",\r\n    update_show_level_filter,\r\n    show_level_filter \r\n  } = props\r\n\r\n  const level_filter = legend_btn_class[0].toUpperCase() \r\n  const checked_class = level_filter === show_level_filter ? \"checked\" : \"\"\r\n \r\n  const handle_level_filter = (current_state, update_state)=>{\r\n    if (current_state===update_state){\r\n      update_show_level_filter(null)\r\n    } else { \r\n      update_show_level_filter(update_state)\r\n    }\r\n  }\r\n  return (\r\n    <button\r\n      className = {`${legend_btn_class} ${checked_class}`}\r\n      onClick = {()=>handle_level_filter(show_level_filter, level_filter)}\r\n    >\r\n      <i className = {`${icon_class} legend-icon`}> </i>\r\n      <div className = \"legend-text\">{level}</div>\r\n    </button> \r\n  );\r\n}\r\n\r\nexport default LEGEND_BTN;","import React from 'react'\r\nimport LEGEND_BTN from './legend_btn'\r\n\r\nfunction LEGEND(props) {\r\n  const {\r\n    app_text= {indicators: {high: {text: \"Høy måloppnåelse\", icon: \"fa fa-fas fa-circle\" }}},\r\n    update_show_level_filter,\r\n    show_level_filter\r\n  } = props\r\n  const legend_btns = Object.keys(app_text.indicators).map(\r\n    function(level){\r\n      return(\r\n        <LEGEND_BTN\r\n          update_show_level_filter = {update_show_level_filter}\r\n          show_level_filter = {show_level_filter}\r\n          key = {`${level}_legend_btn`} \r\n          icon_class={this[level].icon}\r\n          level = {this[level].text}\r\n          legend_btn_class = {level}\r\n        />\r\n      );\r\n    },\r\n  app_text.indicators)\r\n \r\n  return (\r\n    <div \r\n      className = \"table_legend\"\r\n    >\r\n      {legend_btns}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LEGEND;","import React from 'react';\r\n\r\n\r\nfunction MED_FIELD_ROW(props) {\r\n  const {\r\n    med_field_name= \"Hjerte- og karsykdommer\",\r\n    nr_indicators = 10,\r\n    update_med_field_filter,\r\n    update_clicked_med_field,\r\n    clicked_med_field\r\n  } = props\r\n  const class_checked = clicked_med_field === med_field_name.react_key ? \"checked\" : \"\"\r\n  \r\n  const handle_med_field_click =()=>{\r\n    update_clicked_med_field(med_field_name.react_key)\r\n    update_med_field_filter(med_field_name.key)\r\n  }\r\n  return (\r\n  <li className = {`med_field ${class_checked} med_field_${med_field_name.react_key}`} >\r\n    <button className = \"med_field_text\" onClick = {()=> handle_med_field_click() } >\r\n      {med_field_name.name.toUpperCase()}\r\n      <div className=\"med_field_nrind\">{nr_indicators}</div>\r\n    </button>\r\n  </li>\r\n  );\r\n}\r\n\r\nexport default MED_FIELD_ROW;","import React from 'react';\r\nimport MED_FIELD_ROW from './med_field_row'\r\n\r\n\r\nfunction MED_FIELD(props) {\r\n  const {\r\n    med_field = [],\r\n    ind_per_reg,\r\n    update_med_field_filter,\r\n    clicked_med_field,\r\n    update_clicked_med_field,\r\n    \r\n  } = props\r\n  const all_reg = ind_per_reg.map(ind => ind.registry_name)\r\n  const med_field_row = med_field.map(\r\n    med_field => {\r\n      const nr_ind = ind_per_reg.filter(\r\n        reg => med_field.key.includes(reg.registry_name)\r\n      ).reduce(\r\n      (acc,cur) =>{\r\n        return(acc+cur.number_ind)\r\n      },0)\r\n        \r\n     return (\r\n     <MED_FIELD_ROW \r\n      key = {med_field.react_key}\r\n      med_field_name = {med_field}\r\n      nr_indicators = {nr_ind}\r\n      update_med_field_filter = {update_med_field_filter}\r\n      clicked_med_field = {clicked_med_field}\r\n      update_clicked_med_field = {update_clicked_med_field}\r\n      />\r\n    );\r\n  })\r\n  \r\n  const tot_nr_ind = ind_per_reg.reduce(\r\n    (acc,cur) =>{\r\n      return(acc+cur.number_ind)\r\n    },0)\r\n  \r\n  const checked_class = \"all\" === clicked_med_field ? \"checked\" : \"\" \r\n          \r\n  const handle_med_field_click =()=>{\r\n    update_clicked_med_field(\"all\")\r\n    update_med_field_filter(all_reg)\r\n  }\r\n\r\n  return (\r\n  <ul className = \"med_field_list\">\r\n    <li className= {`med_field_title ${checked_class}`} >\r\n      <button onClick = {()=>handle_med_field_click()}>\r\n        <h4 className = \"med_field_text\">ALLE INDIKATORER\r\n          <div className = \"med_field_nrind\">{tot_nr_ind}</div>  \r\n        </h4>\r\n      </button>\r\n    </li>\r\n    {med_field_row}\r\n  </ul>\r\n  );\r\n}\r\n\r\nexport default MED_FIELD;","import React, {useState} from 'react';\r\n\r\nimport INDICATOR_TABLE from './indicator_table'\r\nimport LEGEND from './legend'\r\nimport MED_FIELD from './med_field'\r\n\r\nexport default (props)=>{\r\n    const {\r\n      data,\r\n      med_field,\r\n      app_text,\r\n      ind_per_reg,\r\n      update_ind_per_reg,\r\n      treatment_units,\r\n      selected_year,\r\n      colspan,\r\n      selected_row,\r\n      update_selected_row\r\n    }=props\r\n  const all_reg = ind_per_reg.map(reg=> reg.registry_name)\r\n  const [show_level_filter, update_show_level_filter] = useState(null)\r\n  const [med_field_filter, update_med_field_filter] = useState(all_reg)\r\n  const [clicked_med_field, update_clicked_med_field] = useState(\"all\")\r\n  \r\n  \r\n\r\n  return(\r\n    <>\r\n      <LEGEND \r\n        app_text= {app_text}\r\n        update_show_level_filter = {update_show_level_filter}\r\n        show_level_filter ={show_level_filter}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />\r\n      <div className = \"content_container\"> \r\n        <div className= \"med_field_container\">\r\n          <MED_FIELD \r\n            ind_per_reg = {ind_per_reg}\r\n            med_field = {med_field}\r\n            update_med_field_filter = {update_med_field_filter}\r\n            clicked_med_field = {clicked_med_field}\r\n            update_clicked_med_field = {update_clicked_med_field}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        </div>\r\n        <div className= \"main_table_container\"> \r\n          <INDICATOR_TABLE \r\n            data = {data}\r\n            treatment_unit_name =  {treatment_units}\r\n            treatment_year = {selected_year} \r\n            update_ind_per_reg = {update_ind_per_reg}\r\n            ind_per_reg = {ind_per_reg}\r\n            colspan = {colspan}\r\n            med_field_filter = {med_field_filter}\r\n            show_level_filter = {show_level_filter}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}","import  React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nfunction SELECT_MULTI(props) {\r\n  const {\r\n    opts = [],\r\n    select_className = \"pick_treatment_unit\",\r\n    placeholder = <div><i className = \"fas fa-search\"></i> Behandlingsenheter </div>,\r\n    update_tu,\r\n    treatment_unit\r\n  } = props\r\n  \r\n  let selection_options = opts//.map(opt =>{ return {value :opt , label: opt}; })\r\n\r\n  const customStyles = {\r\n    menu: (provided)=>({\r\n      ...provided,\r\n      //borderBottom: '1px dotted pink',\r\n      //width: \"50%\",\r\n      zIndex: 50\r\n    }),\r\n    option: (provided) => ({\r\n      ...provided,\r\n      //borderBottom: '1px dotted pink',\r\n      //color: 'black'\r\n    }),\r\n    control:(provided)=>({\r\n      ...provided,\r\n      //width: \"50%\"\r\n    })/*,\r\n   \r\n    singleValue: (provided) => {\r\n  \r\n      const transition = 'opacity 300ms';\r\n  \r\n      return { ...provided, transition };\r\n    }*/\r\n  }\r\n  const value_tu = treatment_unit.map(tu=>{return { value: tu, label: tu }})\r\n  const handle_input_change =(e)=>{\r\n    const tu = e !== null ? e.map(e=>e.value) : []\r\n    update_tu(tu)\r\n    \r\n  }\r\n \r\n  return(\r\n    <form >  \r\n      <Select \r\n        className = {select_className}\r\n        options = {selection_options}\r\n        placeholder = {placeholder}\r\n        closeMenuOnSelect = {false}\r\n        value = {value_tu}\r\n        isSearchable\r\n        isMulti = {true}\r\n        onChange={(e)=>handle_input_change(e)}\r\n        styles={customStyles}\r\n        menuIsOpen = {treatment_unit.length < 4 ? undefined :false}\r\n      /> \r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default SELECT_MULTI;","import  React from 'react'\r\nimport Select from 'react-select'\r\n\r\n\r\nfunction SELECT_SINGLE(props) {\r\n  const {\r\n    opts = [],\r\n    select_className = \"pick_year\",\r\n    update_year\r\n  } = props\r\n  \r\n  let selection_options = opts.map(opt =>{ return {value :opt , label: opt}; })\r\n  const customStyles = {\r\n    menu: (provided)=>({\r\n      ...provided,\r\n      //borderBottom: '1px dotted pink',\r\n      //width: \"50%\",\r\n      zIndex: 50\r\n    }),\r\n    option: (provided) => ({\r\n      ...provided,\r\n      //borderBottom: '1px dotted pink',\r\n      //color: 'black'\r\n    }),\r\n    control:(provided)=>({\r\n      ...provided,\r\n      //width: \"50%\"\r\n    })/*,\r\n   \r\n    singleValue: (provided) => {\r\n  \r\n      const transition = 'opacity 300ms';\r\n  \r\n      return { ...provided, transition };\r\n    }*/\r\n  }\r\n\r\n  const handle_input_change =(e)=>{\r\n    \r\n    \r\n    update_year(e.value)\r\n\r\n\r\n  }\r\n\r\n\r\n  return(\r\n    <form >  \r\n      <Select \r\n        className = {select_className}\r\n        onChange={(e)=>handle_input_change(e)}\r\n        options = {selection_options}\r\n        defaultValue = {selection_options[0]}\r\n        isSearchable\r\n        styles={customStyles}\r\n      /> \r\n    </form>\r\n  );\r\n\r\n}\r\n\r\nexport default SELECT_SINGLE;","import React, { useState } from 'react'\r\n\r\nimport MAIN from './components/main_component';\r\nimport SELECT_MULTI from './components/select_multi'\r\nimport SELECT_SINGLE from './components/select_single'\r\n\r\nimport config from './app_config'\r\n\r\nimport { filter_year_unit} from './data/filter_year_unit'\r\n\r\nconst {med_field, app_text, data_config  }= config\r\n\r\n\r\n\r\nfunction APP(props){\r\n  const {\r\n    data \r\n  } = props\r\n  const {\r\n    indicator_hf, indicator_rhf , indicator_hosp, indicator_nation, description\r\n  } = data\r\n\r\n  const [treatment_units, update_treatment_units] = useState([])\r\n  const [selected_year, update_selected_year] = useState(2019)\r\n  const [selected_row, update_selected_row] = useState(null)\r\n  \r\n  \r\n  const opts_hosp = [...new Set ( indicator_hosp.map(d=>d.unit_name))].sort().map(opt =>{ return {value :opt , label: opt}; })\r\n  const opts_hf = [...new Set ( indicator_hf.map(d=>d.unit_name))].sort().map(opt =>{ return {value :opt , label: opt}; })\r\n  const opts_rhf = [...new Set ( indicator_rhf.map(d=>d.unit_name))].sort().map(opt =>{ return {value :opt , label: opt}; })\r\n  const opts_tu = [{label: \"RHF\", options: opts_rhf},{label: \"HF\", options: opts_hf},{label:\"Sykehus\", options:opts_hosp} ]\r\n  let opts_year = [2019,2018,2017,2016]\r\n\r\n  const input_data = {\r\n    selected_unit: treatment_units,\r\n    selected_year: selected_year\r\n  }\r\n\r\n  const agg_data = {};\r\n  const hospital = filter_year_unit(indicator_hosp, input_data)\r\n  const hf = filter_year_unit(indicator_hf, input_data)\r\n  const rhf = filter_year_unit(indicator_rhf, input_data)\r\n  const nation = filter_year_unit(\r\n    indicator_nation,\r\n     {selected_unit: \"Nasjonalt\", selected_year: selected_year}\r\n  )\r\n \r\n  const tu_name_hospital = [...new Set ( \r\n      hospital.filtered_by_year.map(d=>d[data_config.column.treatment_unit])\r\n  )].sort()\r\n  const tu_name_hf = [...new Set ( \r\n    hf.filtered_by_year.map(d=>d[data_config.column.treatment_unit])\r\n  )].sort()\r\n  const tu_name_rhf = [...new Set ( \r\n    rhf.filtered_by_year.map(d=>d[data_config.column.treatment_unit])\r\n  )].sort()\r\n  const tu_name = tu_name_hospital.concat(tu_name_hf,tu_name_rhf)\r\n  const colspan= tu_name.length + 2;\r\n  agg_data.nation = nation\r\n  agg_data.filtered_by_unit = hospital.filtered_by_unit.concat(hf.filtered_by_unit, rhf.filtered_by_unit )\r\n  agg_data.filtered_by_year = hospital.filtered_by_year.concat(hf.filtered_by_year, rhf.filtered_by_year )\r\n\r\n  const unique_indicators = tu_name.length > 0 ? \r\n  [...new Set (agg_data.filtered_by_year.map(d=>d[data_config.column.indicator_id]))] :\r\n  [...new Set (agg_data.nation.filtered_by_year.map(d=>d[data_config.column.indicator_id]))]\r\n  const unique_register = [...new Set(med_field.flatMap(entry => entry.key))].map(\r\n    registry => { \r\n      const ind = description.filter(\r\n      description => description[data_config.column.registry_short_name] === registry && \r\n        unique_indicators.includes(description[data_config.column.id])\r\n      )\r\n      return {registry_name: registry, number_ind: ind.length, indicators: ind};\r\n    } \r\n  )\r\n  const ind_per_reg = unique_register\r\n  \r\n  \r\n  return(\r\n    <div className = \"app-container\">\r\n      <div className = \"selection-container\">\r\n        <div className = \"treatment-unit-selection\">\r\n          <SELECT_MULTI \r\n            opts ={opts_tu}\r\n            update_tu = {update_treatment_units}\r\n            treatment_unit={treatment_units}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        </div>\r\n        <div className =\"year-selection\">\r\n          <SELECT_SINGLE \r\n            opts ={opts_year}\r\n            update_year = {update_selected_year}\r\n            selected_row = {selected_row} \r\n            update_selected_row = {update_selected_row}\r\n          />\r\n        </div>\r\n      </div>\r\n      <MAIN\r\n        update_selected_year = {update_selected_year}\r\n        update_treatment_units ={update_treatment_units}\r\n        ind_per_reg = {ind_per_reg}\r\n        treatment_units ={tu_name}\r\n        selected_year={selected_year}\r\n        med_field = {med_field}\r\n        app_text = {app_text}\r\n        colspan = {colspan}\r\n        data = {{agg_data, description}}\r\n        unique_indicators = {unique_indicators}\r\n        selected_row = {selected_row} \r\n        update_selected_row = {update_selected_row}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default APP;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nconst indicator_hosp = window.indicator_hosp\nconst indicator_hf = window.indicator_hf\nconst indicator_rhf= window.indicator_rhf\nconst indicator_nation = window.indicator_nat\nconst description = window.description\n\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App \n      data = {{indicator_hf, indicator_rhf , indicator_hosp, indicator_nation, description}}\n      />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}